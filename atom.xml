<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KingDom</title>
  
  <subtitle>KingDom&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://baofengketang.com/"/>
  <updated>2018-05-04T08:20:36.000Z</updated>
  <id>http://baofengketang.com/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux基础(一)</title>
    <link href="http://baofengketang.com/2018/05/04/linux/linux_01/"/>
    <id>http://baofengketang.com/2018/05/04/linux/linux_01/</id>
    <published>2018-05-04T08:20:36.000Z</published>
    <updated>2018-05-04T08:20:36.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#linux-xi-tong-de-fa-zhan-shi">Linux系统的发展史</a><ul><li><a href="#unix-xi-tong">Unix系统</a></li><li><a href="#minix">Minix</a></li><li><a href="#liunx">Liunx</a></li><li><a href="#zong-jie">总结</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="linux-xi-tong-de-fa-zhan-shi">Linux系统的发展史</span><a href="#linux-xi-tong-de-fa-zhan-shi" class="header-anchor">#</a></h1><h2><span id="unix-xi-tong">Unix系统</span><a href="#unix-xi-tong" class="header-anchor">#</a></h2><p>1965年之前的时候， 电脑并不像现在⼀样普遍， 它可不是⼀般⼈能碰的起的， 除⾮是军事或者学院的研究机构， ⽽且当时⼤型主机⾄多能提供30台终端（30个键盘、 显示器)， 连接⼀台电脑</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523518478.png?imageMogr2/thumbnail/!70p" alt=""></p><p>为了解决数量不够⽤的问题，1965年左后由⻉尔实验室、 麻省理⼯学院以及通⽤电⽓共同发起了<strong>Multics</strong>项⽬， 想让⼤型主机⽀持300台终端</p><p>1969年前后这个项⽬进度缓慢， 资⾦短缺， ⻉尔实验室退出了研究</p><p>1969年从这个项⽬中退出的Ken Thompson当时在实验室⽆聊时， 为了让⼀台空闲的电脑上能够运⾏“星际旅⾏”游⾏， 在8⽉份左右趁着其妻⼦探亲的时间， ⽤了1个⽉的时间编写出了Unix操作系统的原型</p><p>1970年， 美国⻉尔实验室的 <strong>Ken Thompson</strong>， 以 BCPL语⾔ 为基础， 设计出很简单且很接近硬件的 B语⾔（取BCPL的⾸字⺟） ， 并且他⽤B语⾔写了第⼀个UNIX操作系统。因为B语⾔的跨平台性较差， 为了能够在其他的电脑上也能够运⾏这个⾮常棒的Unix操作系统， Dennis Ritchie和Ken Thompson 从B语⾔的基础上准备研究⼀个更好的语言</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523518810.png?imageMogr2/thumbnail/!70p" alt=""></p><p>1972年， 美国⻉尔实验室的 Dennis Ritchie在B语⾔的基础上最终设计出了⼀种新的语⾔， 他取了BCPL的第⼆个字⺟作为这种语⾔的名字， 这就是C语⾔</p><p>1973年初， C语⾔的主体完成。 Thompson和Ritchie迫不及待地开始⽤它完全重写了现在⼤名鼎鼎的Unix操作系统</p><h2><span id="minix">Minix</span><a href="#minix" class="header-anchor">#</a></h2><p>因为AT&amp;T(通⽤电⽓)的政策改变， 在Version 7 Unix推出之后， 发布新的使⽤条款， 将UNIX源代码私有化， 在⼤学中不再能使⽤UNIX源代码。 Andrew S. Tanenbaum(塔能鲍姆)教授为了能在课堂上教授学⽣操作系统运作的实务细节， 决定在不使⽤任何AT&amp;T的源代码前提下， ⾃⾏开发与UNIX兼容的操作系统， 以避免版权上的争议。 他以⼩型UNIX（mini-UNIX） 之意， 将它称为MINIX(仅用于教学，不做商用)</p><h2><span id="liunx">Liunx</span><a href="#liunx" class="header-anchor">#</a></h2><p>因为Minix只是教学使⽤， 因此功能并不强， 因此Torvalds利⽤GNU的bash当做开发环境， gcc当做编译⼯具， 编写了Linux内核-v0.02， 但是⼀开始Linux并不能兼容Unix， 即Unix上跑的应⽤程序不能在Linux上跑， 即应⽤程序与内核之间的接⼝不⼀致， 因为Unix是遵循POSIX规范的， 因此Torvalds修改了Linux， 并遵循POSIX（Portable OperatingSystem Interface， 他规范了应⽤程序与内核的接⼝规范） ； ⼀开始Linux只适⽤于386，后来经过全世界的⽹友的帮助， 最终能够兼容多种硬件；</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523521142.png?imageMogr2/thumbnail/!70p" alt=""></p><h2><span id="zong-jie">总结</span><a href="#zong-jie" class="header-anchor">#</a></h2><p><strong>Minix没有⽕起来的原因</strong></p><blockquote><p>Minix的创始⼈说， MINIX 3没有统治世界是源于他在1992年犯下的⼀个错误， 当时他认为BSD必然会⼀统天下， 因为它是⼀个更稳定和更成熟的系统， 其它操作系统难以与之竞争。 因此他的MINIX的重⼼集中在教育上。 四名BSD开发者已经成⽴了⼀家公司销售BSD系统， 他们甚⾄还有⼀个有趣的电话号码1-800-ITS-UNIX。 然⽽他们正因为这个电话号码⽽惹⽕上身。 美国电话电报公司因电话号码⽽提起诉讼。官司打了三年才解决。 在此期间， BSD陷于停滞， ⽽Linux则借此⼀⻜冲天。 他的错误在于没有意识官司竟然持续了如此⻓的时间， 以及BSD会因此受到削弱。 如果美国电话电报公司没有起诉， Linux永远不会流⾏起来， BSD将统治世界。</p></blockquote><p><strong>Linux现在版本</strong><br><strong>_<code></code>_</strong><br><img src="http://p6wdo7p1v.bkt.clouddn.com/1523524203.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#linux-xi-tong-de-fa-zhan-shi&quot;&gt;Linux系统的发展史&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#unix-xi-tong&quot;&gt;Unix系统&lt;/a&gt;&lt;
      
    
    </summary>
    
      <category term="linux" scheme="http://baofengketang.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://baofengketang.com/tags/linux/"/>
    
      <category term="操作系统" scheme="http://baofengketang.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>解决Ubuntu中vi命令的编辑模式下不能正常使用方向键和退格键的问题</title>
    <link href="http://baofengketang.com/2018/05/04/vim/vim_02/"/>
    <id>http://baofengketang.com/2018/05/04/vim/vim_02/</id>
    <published>2018-05-04T02:43:05.000Z</published>
    <updated>2018-05-04T02:45:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="jie-jue-ubuntu-zhong-vi-ming-ling-de-bian-ji-mo-shi-xia-bu-neng-zheng-chang-shi-yong-fang-xiang-jian-he-tui-ge-jian-de-wen-ti">解决Ubuntu中vi命令的编辑模式下不能正常使用方向键和退格键的问题</span><a href="#jie-jue-ubuntu-zhong-vi-ming-ling-de-bian-ji-mo-shi-xia-bu-neng-zheng-chang-shi-yong-fang-xiang-jian-he-tui-ge-jian-de-wen-ti" class="header-anchor">#</a></h1><p>在Ubuntu中，进入vi命令的编辑模式，发现按方向键不能移动光标，而是会输出ABCD，以及退格键也不能正常删除字符。这是由于Ubuntu预装的是vim-tiny，而我们需要使用vim-full，解决方法很简单，只需要以下两步：<br>　　<br>步骤一，输入下述命令以卸载vim-tiny：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove vim-common</span><br></pre></td></tr></table></figure><p>步骤二，输入下述命令以安装vim-full：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure><p>现在在vi命令的编辑模式即可正常使用方向键和退格键。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;jie-jue-ubuntu-zhong-vi-ming-ling-de-bian-ji-mo-shi-xia-bu-neng-zheng-chang-shi-yong-fang-xiang-jian-he-tui-ge-jian-de-wen-ti&quot;
      
    
    </summary>
    
      <category term="vim" scheme="http://baofengketang.com/categories/vim/"/>
    
    
      <category term="vim" scheme="http://baofengketang.com/tags/vim/"/>
    
      <category term="编辑器" scheme="http://baofengketang.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用服务器构建-ftp服务器</title>
    <link href="http://baofengketang.com/2018/05/03/linux/linux_06/"/>
    <id>http://baofengketang.com/2018/05/03/linux/linux_06/</id>
    <published>2018-05-03T09:22:14.000Z</published>
    <updated>2018-05-03T09:59:54.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#ftp-fu-wu-qi">ftp服务器</a></li></ul><!-- tocstop --></div><h3><span id="ftp-fu-wu-qi">ftp服务器</span><a href="#ftp-fu-wu-qi" class="header-anchor">#</a></h3><p>FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。</p><p>在FTP的使用当中，用户经常遇到两个概念：”下载”（Download）和”上传”（Upload）。</p><p>“下载”文件就是从远程主机拷贝文件至自己的计算机上；</p><p>“上传”文件就是将文件从自己的计算机中拷贝至远程主机上。用Internet语言来说，用户可通过客户机程序向（从）远程主机上传（下载）文件。</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525339849.png?imageMogr2/thumbnail/!70p" alt=""></p><p>1、安装vsftpd服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure><p>2、配置vsftpd.conf文件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ftp-fu-wu-qi&quot;&gt;ftp服务器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;/div&gt;

&lt;h3&gt;&lt;span id=&quot;ftp-fu-wu-qi&quot;&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://baofengketang.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://baofengketang.com/tags/linux/"/>
    
      <category term="操作系统" scheme="http://baofengketang.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu软件安装与卸载</title>
    <link href="http://baofengketang.com/2018/05/03/linux/linux_05/"/>
    <id>http://baofengketang.com/2018/05/03/linux/linux_05/</id>
    <published>2018-05-03T08:46:25.000Z</published>
    <updated>2018-05-03T09:21:44.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#geng-xin-ubuntu-ruan-jian-xia-zai-di-zhi">更新Ubuntu软件下载地址</a><ul><li><a href="#xun-zhao-guo-nei-jing-xiang-yuan">寻找国内镜像源</a></li><li><a href="#bei-fen-ubuntu-mo-ren-de-yuan-di-zhi">备份Ubuntu默认的源地址</a></li><li><a href="#geng-xin-yuan-fu-wu-qi-lie-biao">更新源服务器列表</a></li><li><a href="#geng-xin-yuan">更新源</a></li></ul></li><li><a href="#ubuntu-ruan-jian-cao-zuo-de-xiang-guan-ming-ling">Ubuntu软件操作的相关命令</a></li></ul><!-- tocstop --></div><h2><span id="geng-xin-ubuntu-ruan-jian-xia-zai-di-zhi">更新Ubuntu软件下载地址</span><a href="#geng-xin-ubuntu-ruan-jian-xia-zai-di-zhi" class="header-anchor">#</a></h2><h3><span id="xun-zhao-guo-nei-jing-xiang-yuan">寻找国内镜像源</span><a href="#xun-zhao-guo-nei-jing-xiang-yuan" class="header-anchor">#</a></h3><p>所谓的镜像源：可以理解为提供下载软件的地方，比如Android手机上可以下载软件的91手机助手；iOS手机上可以下载软件的AppStore</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525337909.png?imageMogr2/thumbnail/!70p" alt=""></p><p>注意：一定要选择好你的ubuntu的版本号</p><h3><span id="bei-fen-ubuntu-mo-ren-de-yuan-di-zhi">备份Ubuntu默认的源地址</span><a href="#bei-fen-ubuntu-mo-ren-de-yuan-di-zhi" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure><h3><span id="geng-xin-yuan-fu-wu-qi-lie-biao">更新源服务器列表</span><a href="#geng-xin-yuan-fu-wu-qi-lie-biao" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi sources.list</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525338282.png?imageMogr2/thumbnail/!70p" alt=""></p><h3><span id="geng-xin-yuan">更新源</span><a href="#geng-xin-yuan" class="header-anchor">#</a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525338410.png?imageMogr2/thumbnail/!70p" alt=""></p><p>看到此图就表示成功了</p><h2><span id="ubuntu-ruan-jian-cao-zuo-de-xiang-guan-ming-ling">Ubuntu软件操作的相关命令</span><a href="#ubuntu-ruan-jian-cao-zuo-de-xiang-guan-ming-ling" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update  更新源</span><br><span class="line"></span><br><span class="line">sudo apt-get install package 安装包</span><br><span class="line"></span><br><span class="line">sudo apt-get remove package 删除包</span><br><span class="line"></span><br><span class="line">sudo apt-cache search package 搜索软件包</span><br><span class="line"></span><br><span class="line">sudo apt-cache show package  获取包的相关信息，如说明、大小、版本等</span><br><span class="line"></span><br><span class="line">sudo apt-get install package --reinstall   重新安装包</span><br><span class="line"></span><br><span class="line">sudo apt-get -f install   修复安装</span><br><span class="line"></span><br><span class="line">sudo apt-get remove package --purge 删除包，包括配置文件等</span><br><span class="line"></span><br><span class="line">sudo apt-get build-dep package 安装相关的编译环境</span><br><span class="line"></span><br><span class="line">sudo apt-get upgrade 更新已安装的包</span><br><span class="line"></span><br><span class="line">sudo apt-get dist-upgrade 升级系统</span><br><span class="line"></span><br><span class="line">sudo apt-cache depends package 了解使用该包依赖那些包</span><br><span class="line"></span><br><span class="line">sudo apt-cache rdepends package 查看该包被哪些包依赖</span><br><span class="line"></span><br><span class="line">sudo apt-get source package  下载该包的源代码</span><br><span class="line"></span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean 清理无用的包</span><br><span class="line"></span><br><span class="line">sudo apt-get check 检查是否有损坏的依赖</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#geng-xin-ubuntu-ruan-jian-xia-zai-di-zhi&quot;&gt;更新Ubuntu软件下载地址&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#xun-zhao-g
      
    
    </summary>
    
      <category term="linux" scheme="http://baofengketang.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://baofengketang.com/tags/linux/"/>
    
      <category term="操作系统" scheme="http://baofengketang.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Linux安装ssh服务</title>
    <link href="http://baofengketang.com/2018/05/03/linux/linux_04/"/>
    <id>http://baofengketang.com/2018/05/03/linux/linux_04/</id>
    <published>2018-05-03T03:28:16.000Z</published>
    <updated>2018-05-03T03:34:24.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#guo-cheng">过程：</a></li><li><a href="#zui-hou">最后：</a></li></ul><!-- tocstop --></div><h2><span id="guo-cheng">过程：</span><a href="#guo-cheng" class="header-anchor">#</a></h2><p>1.检测是否已安装ssh服务，输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure><p>出现以下提示则为未安装：<br>ssh: connect to host localhost port 22: Connection refused<br>（ssh：连接到主机本地主机端口22：连接被拒绝）</p><p>2.安装ssh-server</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure><p>3.启动服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo /etc/init.d/ssh start</span><br></pre></td></tr></table></figure><p>启动成功会提示： </p><p>[ ok ] Starting ssh (via systemctl): ssh.service.</p><p>4.检查服务是否启动成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ps -e|grep ssh</span><br></pre></td></tr></table></figure><p>若有下面提示则启动成功<br>6455 ? 00:00:00 sshd</p><h2><span id="zui-hou">最后：</span><a href="#zui-hou" class="header-anchor">#</a></h2><p>启动、停止、重启SSH命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ssh start          //启动SSH命令1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ss stop           //停止SSH命令，重新连接你会发现不能再连接上了1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ss restart        //重启SSH命令1</span><br></pre></td></tr></table></figure><p>系统默认端口为22，修改可执行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/ssh/sshd_config1</span><br></pre></td></tr></table></figure><p>找到</p><p>“# Port 22”改为 “Port 你想要的端口” (没有#号，#代表注释意思。) 例如→”Port 33”（前提得保证这个端口没有被占用）<br>然后保存退出，再重启下服务即可生效</p><p>开启服务即刻在putty 连接，同时也可以通过sftp方式连接进行管理文件</p><p>卸载SSH服务:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/ss stop</span><br><span class="line">$ sudo apt-get remove openssh-sftp-server                    //卸载sftp服务</span><br><span class="line">$ sudo apt-get remove openssh-server                     //卸载openssh-server服务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#guo-cheng&quot;&gt;过程：&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#zui-hou&quot;&gt;最后：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;/div&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://baofengketang.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://baofengketang.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础(三)</title>
    <link href="http://baofengketang.com/2018/05/03/linux/linux_03/"/>
    <id>http://baofengketang.com/2018/05/03/linux/linux_03/</id>
    <published>2018-05-03T01:56:59.000Z</published>
    <updated>2018-05-04T08:23:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="ce-shi">测试</span><a href="#ce-shi" class="header-anchor">#</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;ce-shi&quot;&gt;测试&lt;/span&gt;&lt;a href=&quot;#ce-shi&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
      
    
    </summary>
    
      <category term="linux" scheme="http://baofengketang.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://baofengketang.com/tags/linux/"/>
    
      <category term="操作系统" scheme="http://baofengketang.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Python基础(四)</title>
    <link href="http://baofengketang.com/2018/04/23/python_base/python_04/"/>
    <id>http://baofengketang.com/2018/04/23/python_base/python_04/</id>
    <published>2018-04-23T09:44:50.000Z</published>
    <updated>2018-04-26T09:01:37.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#zi-fu-chuan-lie-biao-yuan-zu-zi-dian">字符串、列表、元组、字典</a><ul><li><a href="#zi-fu-chuan">字符串</a><ul><li><a href="#zi-fu-chuan-de-biao-shi">字符串的表示</a></li><li><a href="#shu-chu">输出</a></li><li><a href="#shu-ru">输入</a></li><li><a href="#zi-fu-chuan-zhong-xia-biao-de-shi-yong">字符串中下标的使用</a></li><li><a href="#qie-pian">切片</a></li><li><a href="#zi-fu-chuan-chang-jian-cao-zuo">字符串常见操作</a></li></ul></li><li><a href="#lie-biao-jie-shao">列表介绍</a><ul><li><a href="#ji-ben-shi-yong">基本使用</a></li><li><a href="#zeng-shan-gai-cha">增删改查</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="zi-fu-chuan-lie-biao-yuan-zu-zi-dian">字符串、列表、元组、字典</span><a href="#zi-fu-chuan-lie-biao-yuan-zu-zi-dian" class="header-anchor">#</a></h1><h2><span id="zi-fu-chuan">字符串</span><a href="#zi-fu-chuan" class="header-anchor">#</a></h2><h3><span id="zi-fu-chuan-de-biao-shi">字符串的表示</span><a href="#zi-fu-chuan-de-biao-shi" class="header-anchor">#</a></h3><p>在pythonzhong 使用双引号或者单引号中的数据，就是字符串</p><h3><span id="shu-chu">输出</span><a href="#shu-chu" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello"</span>)</span><br><span class="line">print(<span class="string">"hello"</span>,<span class="string">"world"</span>)<span class="comment">#输出多个参数</span></span><br><span class="line">print(<span class="string">"hello"</span>,end=<span class="string">''</span>)<span class="comment">#输出后不换行</span></span><br><span class="line">print(<span class="string">"python"</span>)</span><br><span class="line">print(<span class="string">"hello"</span>,<span class="string">"world"</span>,sep=<span class="string">','</span>)<span class="comment">#使用逗号进行连接</span></span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'老王'</span></span><br><span class="line">position = <span class="string">'南京'</span></span><br><span class="line">address = <span class="string">'南京市浦口区智芯大厦3楼南京网博'</span></span><br><span class="line">print(<span class="string">'--------------------------------------------------'</span>)</span><br><span class="line">print(<span class="string">"姓名：%s"</span>%name)</span><br><span class="line">print(<span class="string">"职位：%s"</span>%position)</span><br><span class="line">print(<span class="string">"公司地址：%s"</span>%address)</span><br><span class="line">print(<span class="string">'--------------------------------------------------'</span>)</span><br><span class="line">print(<span class="string">"姓名：%s\n职位:%s\n公司地址:%s"</span>%(name,position,address))</span><br></pre></td></tr></table></figure><h3><span id="shu-ru">输入</span><a href="#shu-ru" class="header-anchor">#</a></h3><p>注意：input获取的数据，都以字符串的方式进行保存，即使输入的是数字，那么也是以字符串方式保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">userName = input(<span class="string">'请输入用户名:'</span>)</span><br><span class="line">print(<span class="string">"用户名为：%s"</span>%userName)</span><br><span class="line">password = input(<span class="string">'请输入密码:'</span>)</span><br><span class="line">print(<span class="string">"密码为：%s"</span>%password)</span><br></pre></td></tr></table></figure><h3><span id="zi-fu-chuan-zhong-xia-biao-de-shi-yong">字符串中下标的使用</span><a href="#zi-fu-chuan-zhong-xia-biao-de-shi-yong" class="header-anchor">#</a></h3><p>列表与元组支持下标索引好理解，字符串实际上就是字符的数组，所以也支持下标索引。</p><p>如果有字符串:name = ‘abcdef’，在内存中的实际存储如下:</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524628603.png?imageMogr2/thumbnail/!70p" alt=""></p><p>如果想取出部分字符，那么可以通过下标的方法，（注意python中下标从 0 开始）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name = <span class="string">'abcdef'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">0</span>])</span><br><span class="line">a</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">1</span>])</span><br><span class="line">b</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">2</span>])</span><br><span class="line">c</span><br></pre></td></tr></table></figure><h3><span id="qie-pian">切片</span><a href="#qie-pian" class="header-anchor">#</a></h3><p>切片是指对操作的对象截取其中一部分的操作。字符串、列表、元组都支持切片操作</p><p>切片的语法：[起始:结束:步长]</p><p>注意：选取的区间，即从”起始”位开始，到”结束”位的前一位结束（不包含结束位本身)。</p><p>我们以字符串为例讲解。</p><p>如果取出一部分，则可以在中括号[]中，使用:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>name</span><br><span class="line"><span class="string">'abcdef'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">0</span>:<span class="number">3</span>]) <span class="comment">#取下标为0-2的字符</span></span><br><span class="line">abc</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">3</span>:<span class="number">5</span>]) <span class="comment">#取下标为3-4的字符</span></span><br><span class="line">de</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">2</span>:]) <span class="comment">#取下标为2到最后的数据</span></span><br><span class="line">cdef</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(name[<span class="number">1</span>:<span class="number">-1</span>])<span class="comment">#取下标为1到倒数第二个的字符</span></span><br><span class="line">bcde</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[:<span class="number">3</span>]</span><br><span class="line"><span class="string">'abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">2</span>]</span><br><span class="line"><span class="string">'ace'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[::<span class="number">-2</span>]</span><br><span class="line"><span class="string">'fdb'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a[<span class="number">5</span>:<span class="number">1</span>:<span class="number">-2</span>]</span><br><span class="line"><span class="string">'fd'</span></span><br></pre></td></tr></table></figure><h3><span id="zi-fu-chuan-chang-jian-cao-zuo">字符串常见操作</span><a href="#zi-fu-chuan-chang-jian-cao-zuo" class="header-anchor">#</a></h3><p><strong>find</strong></p><p>检测 str 是否包含在 mystr中，如果是返回开始的索引值，否则返回-1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.find(str, start=<span class="number">0</span>, end=len(mystr))</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524711325.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>index</strong></p><p>跟find()方法一样，只不过如果str不在 mystr中会报一个异常.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.index(str, start=0, end=len(mystr))</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524711927.png?imageMogr2/thumbnail/!70p" alt=""> </p><p><strong>count</strong></p><p>返回 str在start和end之间 在 mystr里面出现的次数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.count(str, start=<span class="number">0</span>, end=len(mystr))</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524711856.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>replace</strong></p><p>把 mystr 中的 str1 替换成 str2,如果 count 指定，则替换不超过 count 次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.replace(str1, str2,  mystr.count(str1))</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524712437.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>split</strong></p><p>以 str 为分隔符切片 mystr，如果 maxsplit有指定值，则仅分隔 maxsplit 个子字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.split(str=<span class="string">" "</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524712634.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>capitalize</strong></p><p>把字符串的第一个字符大写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.capitalize()</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524712809.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>title</strong></p><p>把字符串的每个单词首字母大写</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524712944.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>startswith</strong></p><p>检查字符串是否是以 obj 开头, 是则返回 True，否则返回 False</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.startswith(obj)</span><br></pre></td></tr></table></figure><p><img src="/var/folders/7z/8ydsbb052nxb3j2jff7dnqnc0000gn/T/abnerworks.Typora/image-20180426112659610.png" alt="image-20180426112659610"></p><p><strong>endswith</strong></p><p>检查字符串是否以obj结束，如果是返回True,否则返回 False.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.endswith(obj)</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524713327.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>lower</strong></p><p>转换 mystr 中所有大写字符为小写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.lower()</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524713761.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>upper</strong></p><p>转换mystr中的的小写字母为大写</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524713990.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>ljust</strong></p><p>返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mystr.rjust(width)</span><br></pre></td></tr></table></figure><h2><span id="lie-biao-jie-shao">列表介绍</span><a href="#lie-biao-jie-shao" class="header-anchor">#</a></h2><h3><span id="ji-ben-shi-yong">基本使用</span><a href="#ji-ben-shi-yong" class="header-anchor">#</a></h3><p>Python内置的一种数据类型是列表：list。list是一种有序的集合，可以随时添加和删除其中的元素。</p><p>比如，列出班里所有同学的名字，就可以用一个list表示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names=[<span class="string">"zhangsan"</span>,<span class="string">"lisi"</span>,<span class="string">"wangwu"</span>];</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br></pre></td></tr></table></figure><p>变量names就是一个list。用len()函数可以获得list元素的个数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>len(names)</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p>用索引来访问list中每一个位置的元素，记得索引是从0开始的,如果超出索引会报越界异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">0</span>]</span><br><span class="line"><span class="string">'zhangsan'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">1</span>]</span><br><span class="line"><span class="string">'lisi'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">2</span>]</span><br><span class="line"><span class="string">'wangwu'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">3</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br></pre></td></tr></table></figure><p>如果要取最后一个元素，除了计算索引位置外，还可以用-1做索引，直接获取最后一个元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">-1</span>]</span><br><span class="line"><span class="string">'wangwu'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">-2</span>]</span><br><span class="line"><span class="string">'lisi'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">-3</span>]</span><br><span class="line"><span class="string">'zhangsan'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names[<span class="number">-4</span>]</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">IndexError: list index out of range</span><br></pre></td></tr></table></figure><p>当然，倒数第4个就越界了。</p><p>注意：在python中列表中可以放多种不同的数据类型，比如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>mytypes=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="string">"hello"</span>];</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>mytypes</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'hello'</span>]</span><br></pre></td></tr></table></figure><h3><span id="zeng-shan-gai-cha">增删改查</span><a href="#zeng-shan-gai-cha" class="header-anchor">#</a></h3><p><strong>增加</strong></p><p>list是一个可变的有序表，所以，可以往list中追加元素到末尾：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names.append(<span class="string">"zhaoliu"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br></pre></td></tr></table></figure><p>总结：append方法是向列表最后插入</p><p>也可以把元素插入到指定的位置，比如索引号为1的位置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names.insert(<span class="number">1</span>,<span class="string">"helloworld"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'helloworld'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br></pre></td></tr></table></figure><p>insert方法是在列表指定位置插入insert(index,”带插入字符串”);</p><p>2个列表也可以进行合并,使用+号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1=[<span class="string">"zhangsan"</span>,<span class="string">"lisi"</span>];</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names2=[<span class="string">"wangwu"</span>,<span class="string">"zhaoliu"</span>];</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3=names1+names2</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br></pre></td></tr></table></figure><p>+号是将2个列表合并,也可以使用另外一个方法：extends</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names2</span><br><span class="line">[<span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1.extend(names2);</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br></pre></td></tr></table></figure><p><strong>删除</strong></p><p>要删除list末尾的元素，用pop()方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1.pop();</span><br><span class="line"><span class="string">'zhaoliu'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br></pre></td></tr></table></figure><p>删除指定的元素 remove</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhangsan'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1.remove(<span class="string">'zhangsan'</span>);</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names1</span><br><span class="line">[<span class="string">'wangwu'</span>, <span class="string">'zhangsan'</span>]</span><br></pre></td></tr></table></figure><p>remove只列表中指定的一个，多余的不会删除</p><p>按照索引删除，列表也支持切片和索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'zhangsan'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>name</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3[<span class="number">0</span>]</span><br><span class="line"><span class="string">'zhangsan'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3[<span class="number">1</span>]</span><br><span class="line"><span class="string">'lisi'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3[<span class="number">2</span>]</span><br><span class="line"><span class="string">'wangwu'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3[<span class="number">3</span>]</span><br><span class="line"><span class="string">'zhaoliu'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> names3[<span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3</span><br><span class="line">[<span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p><strong>修改</strong></p><p>直接采用下标进行修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3[<span class="number">0</span>]=<span class="string">"hahaha"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>names3</span><br><span class="line">[<span class="string">'hahaha'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br></pre></td></tr></table></figure><p><strong>查询</strong></p><p>in或者not in进行查询</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> <span class="string">"zhaoliu"</span> <span class="keyword">in</span> names3 :</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'找到了'</span>);</span><br><span class="line">...</span><br><span class="line">找到了</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#zi-fu-chuan-lie-biao-yuan-zu-zi-dian&quot;&gt;字符串、列表、元组、字典&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#zi-fu-chuan&quot;&gt;字符串
      
    
    </summary>
    
      <category term="Python" scheme="http://baofengketang.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://baofengketang.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础(三)</title>
    <link href="http://baofengketang.com/2018/04/23/python_base/python_03/"/>
    <id>http://baofengketang.com/2018/04/23/python_base/python_03/</id>
    <published>2018-04-23T08:23:30.000Z</published>
    <updated>2018-04-25T03:14:18.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#liu-cheng-kong-zhi">流程控制</a><ul><li><a href="#fen-zhi-jie-gou">分支结构</a><ul><li><a href="#ji-ben-if">基本if</a></li><li><a href="#if-else">if…else</a></li><li><a href="#elif-de-gong-neng-duo-chong-if">elif的功能(多重if)</a></li><li><a href="#qian-tao-if">嵌套if</a></li></ul></li><li><a href="#xun-huan-jie-gou">循环结构</a><ul><li><a href="#while-xun-huan">while循环</a></li><li><a href="#for-xun-huan">for循环</a></li><li><a href="#break-he-continue">break和continue</a></li><li><a href="#gong-gu-lian-xi">巩固练习</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="liu-cheng-kong-zhi">流程控制</span><a href="#liu-cheng-kong-zhi" class="header-anchor">#</a></h1><h2><span id="fen-zhi-jie-gou">分支结构</span><a href="#fen-zhi-jie-gou" class="header-anchor">#</a></h2><h3><span id="ji-ben-if">基本if</span><a href="#ji-ben-if" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 要判断的条件:</span><br><span class="line">        条件成立时，要做的事情</span><br></pre></td></tr></table></figure><p>案例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gradestr=input(<span class="string">"请输入你的等级："</span>);</span><br><span class="line">grade =int(gradestr);</span><br><span class="line"><span class="keyword">if</span> grade&gt;=<span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'等级大于4级，可以出去浪'</span>);</span><br></pre></td></tr></table></figure><p><strong>小结：</strong>代码的缩进为一个tab键，或者4个空格</p><p><strong>练一练</strong></p><p>从键盘获取自己的年龄，判断是否大于或者等于18岁，如果满足就输出“哥，已成年，网吧可以去了“</p><blockquote><p>使用input从键盘中获取数据，并且存入到一个变量中<br>使用if语句，来判断 age&gt;=18是否成立</p></blockquote><h3><span id="if-else">if…else</span><a href="#if-else" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件:</span><br><span class="line">        满足条件时要做的事情<span class="number">1</span></span><br><span class="line">        满足条件时要做的事情<span class="number">2</span></span><br><span class="line">        满足条件时要做的事情<span class="number">3</span></span><br><span class="line">        ...(省略)...</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">        不满足条件时要做的事情<span class="number">1</span></span><br><span class="line">        不满足条件时要做的事情<span class="number">2</span></span><br><span class="line">        不满足条件时要做的事情<span class="number">3</span></span><br><span class="line">        ...(省略)...</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gradestr=input(<span class="string">"请输入你的等级："</span>);</span><br><span class="line">grade =int(gradestr);</span><br><span class="line"><span class="keyword">if</span> grade&gt;=<span class="number">4</span>:</span><br><span class="line">    print(<span class="string">'等级大于4级，可以出去浪'</span>);</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line">    print(<span class="string">'猥琐发育，别浪！！！'</span>);</span><br></pre></td></tr></table></figure><p><strong>练一练：</strong></p><p>要求：从键盘输入露娜的考试成绩，如果大于等于100分，可以释放无限连，否则，好好练习微操作</p><h3><span id="elif-de-gong-neng-duo-chong-if">elif的功能(多重if)</span><a href="#elif-de-gong-neng-duo-chong-if" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> xxx1:</span><br><span class="line">    事情<span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> xxx2:</span><br><span class="line">    事情<span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> xxx3:</span><br><span class="line">    事情<span class="number">3</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    事情<span class="number">4</span></span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scorestr=input(<span class="string">"请输入你的考试分数："</span>);</span><br><span class="line">score =int(scorestr);</span><br><span class="line"><span class="keyword">if</span> score&gt;<span class="number">90</span>:</span><br><span class="line">    print(<span class="string">'奖励苹果笔记本一台'</span>);</span><br><span class="line"><span class="keyword">elif</span> score&gt;<span class="number">80</span>:</span><br><span class="line">    print(<span class="string">'奖励iphone5一个'</span>);</span><br><span class="line"><span class="keyword">elif</span> score&gt;<span class="number">70</span>:</span><br><span class="line">    print(<span class="string">'奖励音像一个'</span>);</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'洗洗回家睡觉'</span>);</span><br></pre></td></tr></table></figure><h3><span id="qian-tao-if">嵌套if</span><a href="#qian-tao-if" class="header-anchor">#</a></h3><p>需求：</p><p>坐火车或者地铁的实际情况是：先进行安检如果安检通过才会判断是否有车票，或者是先检查是否有车票之后才会进行安检，即实际的情况某个判断是再另外一个判断成立的基础上进行的，这样的情况该怎样解决呢？－&gt;嵌套if</p><p>if嵌套的格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span>:</span><br><span class="line">        满足条件<span class="number">1</span> 做的事情<span class="number">1</span></span><br><span class="line">        满足条件<span class="number">1</span> 做的事情<span class="number">2</span></span><br><span class="line">        ...(省略)...</span><br><span class="line">        <span class="keyword">if</span> 条件<span class="number">2</span>:</span><br><span class="line">            满足条件<span class="number">2</span> 做的事情<span class="number">1</span></span><br><span class="line">            满足条件<span class="number">2</span> 做的事情<span class="number">2</span></span><br><span class="line">            ...(省略)...</span><br></pre></td></tr></table></figure><p>说明<br>    外层的if判断，也可以是if-else<br>    内层的if判断，也可以是if-else<br>    根据实际开发的情况，进行选择</p><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">chePiao = <span class="number">1</span>     <span class="comment"># 用1代表有车票，0代表没有车票</span></span><br><span class="line">daoLenght = <span class="number">9</span>     <span class="comment"># 刀子的长度，单位为cm</span></span><br><span class="line"><span class="keyword">if</span> chePiao == <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">"有车票，可以进站"</span>);</span><br><span class="line">    <span class="keyword">if</span> daoLenght &lt; <span class="number">10</span>:</span><br><span class="line">        print(<span class="string">"通过安检"</span>);</span><br><span class="line">        print(<span class="string">"终于可以见到Ta了，美滋滋~~~"</span>);</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"没有通过安检"</span>);</span><br><span class="line">        print(<span class="string">"刀子的长度超过规定，等待警察处理..."</span>);</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"没有车票，不能进站"</span>);</span><br><span class="line">    print(<span class="string">"亲爱的，那就下次见了，一票难求啊~~~~(&gt;_&lt;)~~~~"</span>);</span><br></pre></td></tr></table></figure><p><strong>练一练：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">情节描述：上公交车，并且可以有座位坐下</span><br><span class="line">要求：输入公交卡当前的余额，只要超过2元，就可以上公交车；如果空座位的数量大于0，就可以坐下</span><br></pre></td></tr></table></figure><p><strong>猜拳游戏</strong></p><p>参考代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">player = input(<span class="string">'请输入：剪刀(0)  石头(1)  布(2):'</span>)</span><br><span class="line">player = int(player)</span><br><span class="line">computer = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> ((player == <span class="number">0</span>) <span class="keyword">and</span> (computer == <span class="number">2</span>)) <span class="keyword">or</span> ((player ==<span class="number">1</span>) <span class="keyword">and</span> (computer == <span class="number">0</span>)) <span class="keyword">or</span> ((player == <span class="number">2</span>) <span class="keyword">and</span> (computer == <span class="number">1</span>)):</span><br><span class="line">    print(<span class="string">'获胜，哈哈，你太厉害了'</span>)</span><br><span class="line"><span class="keyword">elif</span> player == computer:</span><br><span class="line">    print(<span class="string">'平局，要不再来一局'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'输了，不要走，洗洗手接着来，决战到天亮'</span>)</span><br></pre></td></tr></table></figure><h2><span id="xun-huan-jie-gou">循环结构</span><a href="#xun-huan-jie-gou" class="header-anchor">#</a></h2><h3><span id="while-xun-huan">while循环</span><a href="#while-xun-huan" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件:</span><br><span class="line">       条件满足时，做的事情<span class="number">1</span></span><br><span class="line">       条件满足时，做的事情<span class="number">2</span></span><br><span class="line">       条件满足时，做的事情<span class="number">3</span></span><br><span class="line">       ...(省略)...</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   语句;</span><br></pre></td></tr></table></figure><p>注意：循环中加入else是其他语言不具备的特点，不过基本上不建议使用</p><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="number">5</span>:</span><br><span class="line">    print(<span class="string">'当前是第%d次执行循环'</span>%i);</span><br><span class="line">    i=i+<span class="number">1</span>;</span><br><span class="line">print(<span class="string">'循环退出'</span>);</span><br></pre></td></tr></table></figure><p><strong>练一练</strong></p><p>1、计算1~100的累积和（包含1和100）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算1~100的累积和（包含1和100）</span></span><br><span class="line">i =<span class="number">1</span>;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">100</span>:</span><br><span class="line">    sum=sum+i;</span><br><span class="line">    i=i+<span class="number">1</span>;</span><br><span class="line">print(<span class="string">'100以内的所有数何为%d'</span>%sum);</span><br></pre></td></tr></table></figure><p>2、计算1~100之间偶数的累积和（包含1和100）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算1~100之间偶数的累积和（包含1和100）</span></span><br><span class="line">i =<span class="number">1</span>;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> i&lt;=<span class="number">100</span>:</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        sum = sum + i;</span><br><span class="line">    i=i+<span class="number">1</span>;</span><br><span class="line">print(<span class="string">'100以内的所有偶数和为%d'</span>%sum);</span><br></pre></td></tr></table></figure><h3><span id="for-xun-huan">for循环</span><a href="#for-xun-huan" class="header-anchor">#</a></h3><p>像while循环一样，for可以完成循环的功能。</p><p>在Python中 for循环可以遍历任何序列的项目，如一个列表或者一个字符串等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 临时变量 <span class="keyword">in</span> 列表或者字符串等:</span><br><span class="line">        循环满足条件时执行的代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">        循环不满足条件时执行的代码</span><br></pre></td></tr></table></figure><p>案例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'kingdom'</span>:</span><br><span class="line"><span class="meta">... </span>    print(i);</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">k</span><br><span class="line">i</span><br><span class="line">n</span><br><span class="line">g</span><br><span class="line">d</span><br><span class="line">o</span><br><span class="line">m</span><br></pre></td></tr></table></figure><p>案例2:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">'kingdom'</span>:</span><br><span class="line"><span class="meta">... </span>    print(i);</span><br><span class="line"><span class="meta">... </span><span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">'测试数据'</span>);</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">k</span><br><span class="line">i</span><br><span class="line">n</span><br><span class="line">g</span><br><span class="line">d</span><br><span class="line">o</span><br><span class="line">m</span><br><span class="line">测试数据</span><br></pre></td></tr></table></figure><h3><span id="break-he-continue">break和continue</span><a href="#break-he-continue" class="header-anchor">#</a></h3><p>break的作用：用来结束整个循环</p><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="number">10</span>:</span><br><span class="line">  i = i+<span class="number">1</span></span><br><span class="line">  print(<span class="string">'----'</span>)</span><br><span class="line">  <span class="keyword">if</span> i==<span class="number">5</span>:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  print(i);</span><br></pre></td></tr></table></figure><p>continue的作用：用来结束本次循环，紧接着执行下一次的循环</p><p>案例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="number">10</span>:</span><br><span class="line">  i = i+<span class="number">1</span>;</span><br><span class="line">  print(<span class="string">'----'</span>);</span><br><span class="line">  <span class="keyword">if</span> i==<span class="number">5</span>:</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">  print(i);</span><br></pre></td></tr></table></figure><h3><span id="gong-gu-lian-xi">巩固练习</span><a href="#gong-gu-lian-xi" class="header-anchor">#</a></h3><p>1.从键盘获取用户名、密码，如果用户名和密码都正确（预先设定一个用户名和密码），那么就显示“欢迎进入xxx的世界”，否则提示密码或者用户名错误</p><p>2、打印三角形</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">* *</span><br><span class="line">* * *</span><br><span class="line">* * * *</span><br><span class="line">* * * * *</span><br></pre></td></tr></table></figure><p>参考代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="number">5</span> :</span><br><span class="line">    j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> j&lt;=i:</span><br><span class="line">        print(<span class="string">'*'</span>,end=<span class="string">''</span>);</span><br><span class="line">        j=j+<span class="number">1</span>;</span><br><span class="line">    print(<span class="string">''</span>);</span><br><span class="line">    i=i+<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>3.使用循环完成以下练习</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">* *</span><br><span class="line">* * *</span><br><span class="line">* * * *</span><br><span class="line">* * * * *</span><br><span class="line">* * * *</span><br><span class="line">* * *</span><br><span class="line">* *</span><br><span class="line">*</span><br></pre></td></tr></table></figure><p>4、打印99乘法表</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524556481.png?imageMogr2/thumbnail/!70p" alt=""></p><p>5、小明身高1.75，体重80.5kg。请根据BMI公式（体重除以身高的平方）帮小明计算他的BMI指数，并根据BMI指数：</p><ul><li>低于18.5：过轻</li><li>18.5-25：正常</li><li>25-28：过重</li><li>28-32：肥胖</li><li>高于32：严重肥胖</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#liu-cheng-kong-zhi&quot;&gt;流程控制&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#fen-zhi-jie-gou&quot;&gt;分支结构&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=
      
    
    </summary>
    
      <category term="Python" scheme="http://baofengketang.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://baofengketang.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础(二)</title>
    <link href="http://baofengketang.com/2018/04/20/python_base/python_02/"/>
    <id>http://baofengketang.com/2018/04/20/python_base/python_02/</id>
    <published>2018-04-20T05:08:49.000Z</published>
    <updated>2018-04-25T03:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#bian-xie-di-yi-ge-python-cheng-xu">编写第一个python程序</a><ul><li><a href="#bian-xie-python-cheng-xu-de-fang-shi-yi">编写Python程序的方式一：</a></li><li><a href="#bian-xie-python-cheng-xu-de-fang-shi-er">编写Python程序的方式二</a></li><li><a href="#python-zhong-de-zhu-shi">Python中的注释</a></li><li><a href="#python-cheng-xu-zhong-zhong-wen-zhi-chi">python程序中，中文支持</a></li><li><a href="#bian-liang-yu-lei-xing">变量与类型</a></li><li><a href="#biao-shi-fu-he-guan-jian-zi">标示符和关键字</a></li><li><a href="#shu-chu">输出</a></li><li><a href="#shu-ru">输入</a></li><li><a href="#yun-suan-fu">运算符</a></li><li><a href="#shu-ju-lei-xing-zhuan-huan">数据类型转换</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="bian-xie-di-yi-ge-python-cheng-xu">编写第一个python程序</span><a href="#bian-xie-di-yi-ge-python-cheng-xu" class="header-anchor">#</a></h1><h2><span id="bian-xie-python-cheng-xu-de-fang-shi-yi">编写Python程序的方式一：</span><a href="#bian-xie-python-cheng-xu-de-fang-shi-yi" class="header-anchor">#</a></h2><p><strong>交互模式</strong></p><p>打开终端，输入<strong>python3</strong> ，输入python3表示用的python这门编程语言的第3个版本，如果只输入python的话表示用的是python的第2个版本 </p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524201256.png?imageMogr2/thumbnail/!70p" alt=""></p><p>输出”helloworld”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">'helloworld'</span>);</span><br><span class="line">helloworld</span><br></pre></td></tr></table></figure><p>交互模式可以用来进行测试知识点,测试完毕后可以使用exit()，进行退出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jinzhongdeMacBook-Pro:bin jinzhong$ python</span><br><span class="line">Python 2.7.10 (default, Oct 23 2015, 19:19:21) </span><br><span class="line">[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">print</span>(<span class="string">'hello'</span>)</span><br><span class="line">hello</span><br><span class="line">&gt;&gt;&gt; <span class="built_in">exit</span>()</span><br><span class="line">jinzhongdeMacBook-Pro:bin jinzhong$</span><br></pre></td></tr></table></figure><h2><span id="bian-xie-python-cheng-xu-de-fang-shi-er">编写Python程序的方式二</span><a href="#bian-xie-python-cheng-xu-de-fang-shi-er" class="header-anchor">#</a></h2><p>使用常用的编辑器，可以选择sublime或者vi等等，这里选择vi,创建一个文件，后缀名选择.py</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi hello.py;</span><br></pre></td></tr></table></figure><p>在hello.py文件中编写如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'helloworld'</span>);</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinzhongdeMacBook-Pro:~ jinzhong$ python3 hello.py</span><br><span class="line">helloworld</span><br><span class="line">jinzhongdeMacBook-Pro:~ jinzhong$</span><br></pre></td></tr></table></figure><p>有同学问，能不能像.exe文件那样直接运行.py文件呢？在Windows上是不行的，但是，在Mac和Linux上是可以的，方法是在.py文件的第一行加上一个特殊的注释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">print(<span class="string">'helloworld'</span>);</span><br></pre></td></tr></table></figure><p>然后，通过命令给<code>hello.py</code>以执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+x hello.py;</span><br></pre></td></tr></table></figure><p>就可以直接运行<code>hello.py</code>了，比如在Mac下运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jinzhongdeMacBook-Pro:~ jinzhong$ ./hello.py</span><br><span class="line">helloworld</span><br></pre></td></tr></table></figure><h2><span id="python-zhong-de-zhu-shi">Python中的注释</span><a href="#python-zhong-de-zhu-shi" class="header-anchor">#</a></h2><p><strong>单行注释</strong></p><p>以#开头，#右边的所有东西当做说明，而不是真正要执行的程序，起辅助说明作用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这是一个注释</span></span><br><span class="line">print(<span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure><p>多行注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">    这是多行注释</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">    这也是多行注释</span></span><br><span class="line"><span class="string">"""</span></span><br></pre></td></tr></table></figure><h2><span id="python-cheng-xu-zhong-zhong-wen-zhi-chi">python程序中，中文支持</span><a href="#python-cheng-xu-zhong-zhong-wen-zhi-chi" class="header-anchor">#</a></h2><p>如果直接在程序中用到了中文，比如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'你好世界'</span>);</span><br></pre></td></tr></table></figure><p>那么接下来我们直接运行</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524455449.png?imageMogr2/thumbnail/!70p" alt=""></p><p>我们发现使用python3命令程序能够正常运行，但是使用python命令程序无法处理中文</p><p>如何解决？在程序的开头写入以下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line">print(<span class="string">'你好世界'</span>);</span><br></pre></td></tr></table></figure><p>接下来继续运行</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524455684.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>注意：</strong></p><p>在python的语法规范中推荐使用的方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line">print(<span class="string">'你好世界'</span>);</span><br></pre></td></tr></table></figure><p>运行结果如上图</p><h2><span id="bian-liang-yu-lei-xing">变量与类型</span><a href="#bian-liang-yu-lei-xing" class="header-anchor">#</a></h2><p><strong>变量:</strong></p><p>在程序中，有时我们需要对2个数据进行求和，那么该怎样做呢？</p><p>大家类比一下现实生活中，比如去超市买东西，往往咱们需要一个菜篮子，用来进行存储物品，等到所有的物品都购买完成后，在收银台进行结账即可</p><p>如果在程序中，需要把2个数据，或者多个数据进行求和的话，那么就需要把这些数据先存储起来，然后把它们累加起来即可</p><p>在Python中，存储一个数据，需要一个叫做变量的东西，如下示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line">print(<span class="string">'你好世界'</span>);</span><br><span class="line">num1 = <span class="number">100</span> ;</span><br><span class="line">num2 = <span class="number">87</span> ;</span><br><span class="line">result = num1+num2;</span><br><span class="line">print(result);</span><br></pre></td></tr></table></figure><p><strong>说明:</strong></p><p>所谓变量，可以理解为菜篮子，如果需要存储多个数据，最简单的方式是有多个变量，当然了也可以使用一个</p><p><strong>程序就是用来处理数据的，而变量就是用来存储数据的</strong></p><p><strong>变量的类型：</strong></p><p>Python中变量的数据类型有如下几种：</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524457704.png?imageMogr2/thumbnail/!70p" alt="">怎样知道一个变量的类型呢？</p><p>在python中，只要定义了一个变量，而且它有数据，那么它的类型就已经确定了，不需要咱们开发者主动的去说明它的类型，系统会自动辨别<br><strong>可以使用type(变量的名字)，来查看变量的类型</strong></p><h2><span id="biao-shi-fu-he-guan-jian-zi">标示符和关键字</span><a href="#biao-shi-fu-he-guan-jian-zi" class="header-anchor">#</a></h2><p><strong>标示符</strong></p><p>什么是标示符，看下图</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524459671.png?imageMogr2/thumbnail/!70p" alt=""></p><p>开发人员在程序中自定义的一些符号和名称</p><p>标示符是自己定义的,如变量名 、函数名等</p><p><strong>标示符的规则</strong></p><p>标示符由字母、下划线和数字组成，且数字不能开头</p><p>python中的标识符是区分大小写的</p><p><strong>命名规则</strong></p><p>见名知意:起一个有意义的名字，尽量做到看一眼就知道是什么意思(提高代码可 读性) 比如: 名字 就定义为 name , 定义学生 用 student</p><p>驼峰命名法</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524459818.png?imageMogr2/thumbnail/!70p" alt=""></p><p>小驼峰式命名法（lower camel case）： 第一个单词以小写字母开始；第二个单词的首字母大写，例如：myName、aDog</p><p>大驼峰式命名法（upper camel case）： 每一个单字的首字母都采用大写字母，例如：FirstName、LastName</p><p>不过在程序员中还有一种命名法比较流行，就是用下划线“_”来连接所有的单词，比如send_buf</p><p><strong>关键字</strong></p><p>什么是关键字?</p><p>python一些具有特殊功能的标示符，这就是所谓的关键字</p><p>关键字，是python已经使用的了，所以不允许开发者自己定义和关键字相同的名字的标示符</p><p>查看关键字:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">False               def                 if                  raise</span><br><span class="line">None                del                 import              return</span><br><span class="line">True                elif                in                  try</span><br><span class="line">and                 else                is                  while</span><br><span class="line">   as                  except              lambda              with</span><br><span class="line">   assert              finally             nonlocal            yield</span><br><span class="line">   break               for                 not                 </span><br><span class="line">   class               from                or                  </span><br><span class="line">   continue            global              pass</span><br></pre></td></tr></table></figure><p>可以通过以下命令进行查看当前系统中python的关键字</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524460068.png?imageMogr2/thumbnail/!70p" alt=""></p><p>关键字的学习以及使用，我们在后面的文章中插入讲解</p><h2><span id="shu-chu">输出</span><a href="#shu-chu" class="header-anchor">#</a></h2><p><strong>普通的输出</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'hello world'</span>)</span><br></pre></td></tr></table></figure><p>print()函数也可以接受多个字符串，用逗号“,”隔开，就可以连成一串输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">"helloworld"</span>,<span class="string">"kingdom"</span>)</span><br><span class="line">helloworld kingdom</span><br></pre></td></tr></table></figure><p>print()函数遇到逗号“,”会输出一个空格，因此，输出的字符串是这样拼起来的</p><p>也可以打印整数，或者计算结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'10+20='</span>,(<span class="number">10</span>+<span class="number">20</span>))</span><br><span class="line"><span class="number">10</span>+<span class="number">20</span>= <span class="number">30</span></span><br></pre></td></tr></table></figure><p><strong>格式化输出</strong></p><p>在程序中，看到了%这样的操作符，这就是Python中格式化输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line">name = <span class="string">"xiaohua"</span></span><br><span class="line">print(<span class="string">"我的姓名是%s,年龄是%d"</span>%(name,age))</span><br></pre></td></tr></table></figure><p><strong>常用的格式符号</strong></p><table><thead><tr><th style="text-align:center">格式符号</th><th style="text-align:center">转换</th></tr></thead><tbody><tr><td style="text-align:center">％c</td><td style="text-align:center">字符</td></tr><tr><td style="text-align:center">％s</td><td style="text-align:center">通过str() 字符串转换来格式化</td></tr><tr><td style="text-align:center">%i</td><td style="text-align:center">有符号十进制整数</td></tr><tr><td style="text-align:center">%d</td><td style="text-align:center">有符号十进制整数</td></tr><tr><td style="text-align:center">%u</td><td style="text-align:center">无符号十进制整数</td></tr><tr><td style="text-align:center">%o</td><td style="text-align:center">八进制整数</td></tr><tr><td style="text-align:center">%x</td><td style="text-align:center">十六进制整数（小写字母）</td></tr><tr><td style="text-align:center">%X</td><td style="text-align:center">十六进制整数（大写字母）</td></tr><tr><td style="text-align:center">%e</td><td style="text-align:center">索引符号（小写’e’）</td></tr><tr><td style="text-align:center">%E</td><td style="text-align:center">索引符号（大写“E”）</td></tr><tr><td style="text-align:center">%f</td><td style="text-align:center">浮点实数</td></tr><tr><td style="text-align:center">%g</td><td style="text-align:center">％f和％e 的简写</td></tr><tr><td style="text-align:center">%G</td><td style="text-align:center">％f和％E的简写</td></tr></tbody></table><p><strong>换行输出</strong></p><p>在输出的时候，如果有\n那么，此时\n后的内容会在另外一行显示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line">print(<span class="string">"1234567890-------"</span>) <span class="comment"># 会在一行显示</span></span><br><span class="line">print(<span class="string">"1234567890\n-------"</span>) <span class="comment"># ---会另起一行显示</span></span><br></pre></td></tr></table></figure><h2><span id="shu-ru">输入</span><a href="#shu-ru" class="header-anchor">#</a></h2><p><strong>python2版本中使用raw_input()</strong></p><p>在Python中，获取键盘输入的数据的方法是采用 raw_input 函数,那么这个 raw_input 怎么用呢?</p><p>看如下示例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line">password = raw_input(<span class="string">"请输入密码:"</span>);</span><br><span class="line"><span class="keyword">print</span> <span class="string">'您刚刚输入的密码是:'</span>, password</span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524463461.png?imageMogr2/thumbnail/!70p" alt=""></p><p>注意:</p><p>raw_input()的小括号中放入的是，提示信息，用来在获取数据之前给用户的一个简单提示<br>raw_input()在从键盘获取了数据以后，会存放到等号右边的变量中<br>raw_input()会把用户输入的任何值都作为字符串来对待</p><p><strong>python2版本中input()</strong></p><p>input()函数与raw_input()类似，但其接受的输入必须是表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = input() </span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(a)</span><br><span class="line">&lt;type <span class="string">'int'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = input()</span><br><span class="line">abc</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">"&lt;string&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">'abc'</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = input()</span><br><span class="line"><span class="string">"abc"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">'abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(a)</span><br><span class="line">&lt;type <span class="string">'str'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = input()</span><br><span class="line"><span class="number">1</span>+<span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = input()</span><br><span class="line"><span class="string">"abc"</span>+<span class="string">"def"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="string">'abcdef'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>value = <span class="number">100</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = input()</span><br><span class="line">value</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><p>input()接受表达式输入，并把表达式的结果赋值给等号左边的变量</p><p><strong>python3版本中</strong></p><p>没有raw_input()函数，只有input()</p><p>并且 python3中的input与python2中的raw_input()功能一样</p><h2><span id="yun-suan-fu">运算符</span><a href="#yun-suan-fu" class="header-anchor">#</a></h2><p><strong>算术运算符</strong></p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th style="text-align:center">实例</th></tr></thead><tbody><tr><td style="text-align:center">＋</td><td style="text-align:center">加</td><td style="text-align:center">两个对象相加 a + b 输出结果 30</td></tr><tr><td style="text-align:center">－</td><td style="text-align:center">减</td><td style="text-align:center">得到负数或是一个数减去另一个数 a - b 输出结果 -10</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘</td><td style="text-align:center">两个数相乘或是返回一个被重复若干次的字符串 a * b 输出结果 200</td></tr><tr><td style="text-align:center">／</td><td style="text-align:center">除</td><td style="text-align:center">x除以y b / a 输出结果 2</td></tr><tr><td style="text-align:center">//</td><td style="text-align:center">取整除</td><td style="text-align:center">返回商的整数部分 9//2 输出结果 4 , 9.0//2.0 输出结果 4.0</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">取余</td><td style="text-align:center">返回除法的余数 b % a 输出结果 0</td></tr><tr><td style="text-align:center">**</td><td style="text-align:center">幂</td><td style="text-align:center">返回x的y次幂 a**b 为10的20次方， 输出结果 100000000000000000000</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span>+<span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span>/<span class="number">3</span></span><br><span class="line"><span class="number">1.6666666666666667</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span>//<span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">5</span>%<span class="number">3</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">2</span>**<span class="number">3</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p><strong>赋值运算符</strong></p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>＝</td><td>赋值运算符</td><td>把=号右边的结果给左边的变量, num=1+2*3 结果num的值为7</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a,b=<span class="number">3</span>,<span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><p><strong>复合赋值运算符</strong></p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>+=</td><td>加法赋值运算符</td><td>c += a 等效于 c = c + a</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>c -= a 等效于 c = c - a</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>c <em>= a 等效于 c = c </em> a</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>c /= a 等效于 c = c / a</td></tr><tr><td>%=</td><td>取模赋值运算符</td><td>c %= a 等效于 c = c % a</td></tr><tr><td>**=</td><td>幂赋值运算符</td><td>c *<em>= a 等效于 c = c\</em>*a</td></tr><tr><td>//=</td><td>取整除赋值运算符</td><td>c //=a 等效于 c = c // a</td></tr></tbody></table><p>**比较(即关系)运算符</p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>==</td><td>检查两个操作数的值是否相等，如果是则条件变为真。</td><td>如a=3,b=3则（a == b) 为 true.</td></tr><tr><td>!=</td><td>检查两个操作数的值是否相等，如果值不相等，则条件变为真。</td><td>如a=1,b=3则(a != b) 为 true.</td></tr><tr><td>&lt;&gt;</td><td>检查两个操作数的值是否相等，如果值不相等，则条件变为真。</td><td>如a=1,b=3则(a &lt;&gt; b) 为 true。这个类似于 != 运算符</td></tr><tr><td>&gt;</td><td>检查左操作数的值是否大于右操作数的值，如果是，则条件成立。</td><td>如a=7,b=3则(a &gt; b) 为 true.</td></tr><tr><td>&lt;</td><td>检查左操作数的值是否小于右操作数的值，如果是，则条件成立。</td><td>如a=7,b=3则(a &lt; b) 为 false.</td></tr><tr><td>&gt;=</td><td>检查左操作数的值是否大于或等于右操作数的值，如果是，则条件成立。</td><td>如a=3,b=3则(a &gt;= b) 为 true.</td></tr><tr><td>&lt;=</td><td>检查左操作数的值是否小于或等于右操作数的值，如果是，则条件成立。</td><td>如a=3,b=3则(a &lt;= b) 为 true.</td></tr></tbody></table><p><strong>逻辑运算符</strong></p><table><thead><tr><th>运算符</th><th>逻辑表达式</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>and</td><td>x and y</td><td>布尔”与” - 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。</td><td>(a and b) 返回 20。</td></tr><tr><td>or</td><td>x or y</td><td>布尔”或” - 如果 x 是 True，它返回 True，否则它返回 y 的计算值。</td><td>(a or b) 返回 10。</td></tr><tr><td>not</td><td>not x</td><td>布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td>not(a and b) 返回 False</td></tr></tbody></table><h2><span id="shu-ju-lei-xing-zhuan-huan">数据类型转换</span><a href="#shu-ju-lei-xing-zhuan-huan" class="header-anchor">#</a></h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>int(x [,base ])</td><td>将x转换为一个整数</td></tr><tr><td>long(x [,base ])</td><td>将x转换为一个长整数</td></tr><tr><td>float(x )</td><td>将x转换到一个浮点数</td></tr><tr><td>complex(real [,imag ])</td><td>创建一个复数</td></tr><tr><td>str(x )</td><td>将对象 x 转换为字符串</td></tr><tr><td>repr(x )</td><td>将对象 x 转换为表达式字符串</td></tr><tr><td>eval(str )</td><td>用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td>tuple(s )</td><td>将序列 s 转换为一个元组</td></tr><tr><td>list(s )</td><td>将序列 s 转换为一个列表</td></tr><tr><td>chr(x )</td><td>将一个整数转换为一个字符</td></tr><tr><td>unichr(x )</td><td>将一个整数转换为Unicode字符</td></tr><tr><td>ord(x )</td><td>将一个字符转换为它的整数值</td></tr><tr><td>hex(x )</td><td>将一个整数转换为一个十六进制字符串</td></tr><tr><td>oct(x )</td><td>将一个整数转换为一个八进制字符串</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#bian-xie-di-yi-ge-python-cheng-xu&quot;&gt;编写第一个python程序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#bian-xie-python-ch
      
    
    </summary>
    
      <category term="Python" scheme="http://baofengketang.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://baofengketang.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python基础(一)</title>
    <link href="http://baofengketang.com/2018/04/19/python_base/python_01/"/>
    <id>http://baofengketang.com/2018/04/19/python_base/python_01/</id>
    <published>2018-04-19T03:49:29.000Z</published>
    <updated>2018-04-23T14:26:26.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#python-jie-shao">Python介绍</a><ul><li><a href="#qi-yuan">起源</a></li><li><a href="#yi-men-yu-yan-de-dan-sheng">一门语言的诞生</a></li><li><a href="#python-de-you-dian">Python的优点</a></li><li><a href="#python-de-que-dian">Python的缺点</a></li><li><a href="#python-de-ying-yong-chang-jing">Python的应用场景</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="python-jie-shao">Python介绍</span><a href="#python-jie-shao" class="header-anchor">#</a></h1><h2><span id="qi-yuan">起源</span><a href="#qi-yuan" class="header-anchor">#</a></h2><p>Python的作者，Guido von Rossum（吉多·范罗苏姆），荷兰人。1982年，Guido从阿姆斯特丹大学获得了数学和计算机硕士学位。然而，尽管他算得上是一位数学家，但他更加享受计算机带来的乐趣。用他的话说，尽管拥有数学和计算机双料资质，他总趋向于做计算机相关的工作，并热衷于做任何和编程相关的活儿。</p><p>在那个时候，Guido接触并使用过诸如Pascal、C、Fortran等语言。这些语言的基本设计原则是让机器能更快运行。在80年代，虽然IBM和苹果已经掀起了个人电脑浪潮，但这些个人电脑的配置很低。比如早期的Macintosh，只有8MHz的CPU主频和128KB的RAM，一个大的数组就能占满内存。所有的编译器的核心是做优化，以便让程序能够运行。为了增进效率，语言也迫使程序员像计算机一样思考，以便能写出更符合机器口味的程序。在那个时代，程序员恨不得用手榨取计算机每一寸的能力。有人甚至认为C语言的指针是在浪费内存。至于动态类型，内存自动管理，面向对象…… 别想了，那会让你的电脑陷入瘫痪。</p><p>这种编程方式让Guido感到苦恼。Guido知道如何用C语言写出一个功能，但整个编写过程需要耗费大量的时间，即使他已经准确的知道了如何实现。他的另一个选择是shell。Bourne Shell作为UNIX系统的解释器已经长期存在。UNIX的管理员们常常用shell去写一些简单的脚本，以进行一些系统维护的工作，比如定期备份、文件系统管理等等。shell可以像胶水一样，将UNIX下的许多功能连接在一起。许多C语言下上百行的程序，在shell下只用几行就可以完成。然而，shell的本质是调用命令。它并不是一个真正的语言。比如说，shell没有数值型的数据类型，加法运算都很复杂。总之，shell不能全面的调动计算机的功能。</p><p><strong>Guido希望有一种语言，这种语言能够像C语言那样，能够全面调用计算机的功能接口，又可以像shell那样，可以轻松的编程</strong>。ABC语言让Guido看到希望。ABC是由荷兰的数学和计算机研究所开发的。Guido在该研究所工作，并参与到ABC语言的开发。ABC语言以教学为目的。与当时的大部分语言不同，ABC语言的目标是“让用户感觉更好”。ABC语言希望让语言变得容易阅读，容易使用，容易记忆，容易学习，并以此来激发人们学习编程的兴趣。</p><p>尽管已经具备了良好的可读性和易用性，ABC语言最终没有流行起来。在当时，ABC语言编译器需要比较高配置的电脑才能运行。而这些电脑的使用者通常精通计算机，他们更多考虑程序的效率，而非它的学习难度。除了硬件上的困难外，ABC语言的设计也存在一些致命的问题： 可拓展性差。ABC语言不是模块化语言。如果想在ABC语言中增加功能，比如对图形化的支持，就必须改动很多地方。 不能直接进行IO。ABC语言不能直接操作文件系统。尽管你可以通过诸如文本流的方式导入数据，但ABC无法直接读写文 件。输入输出的困难对于计算机语言来说是致命的。你能想像一个打不开车门的跑车么？ 过度革新。ABC用自然语言的方式来表达程序的意义。然而对于程序员来说，他们更习惯 用function或者define来定义一个函数。同样，程序员更习惯用等号来分配变量。尽管ABC语言很特别，但学习难度也很大。 传播困难。ABC编译器很大，必须被保存在磁带上。当时Guido在访问的时候，就必须有一个大磁带来给别人安装ABC编译器。 这样，ABC语言就很难快速传播。 <strong>1989年，为了打发圣诞节假期，Guido开始写Python语言的编译器</strong>。Python这个名字，来自Guido所挚爱的电视剧Monty Python’s Flying Circus。他希望这个新的叫做Python的语言，能符合他的理想：创造一种C和shell之间，功能全面，易学易用，可拓展的语言。Guido作为一个语言设计爱好者，已经有过设计语言的尝试。这一次，也不过是一次纯粹的hacking行为</p><h2><span id="yi-men-yu-yan-de-dan-sheng">一门语言的诞生</span><a href="#yi-men-yu-yan-de-dan-sheng" class="header-anchor">#</a></h2><p>1991年，第一个Python编译器诞生。它是用C语言实现的，并能够调用C语言的库文件。从一出生，Python已经具有了 ：类，函数，异常处理，包含表和词典在内的核心数据类型，以及模块为基础的拓展系统。 Python语法很多来自C，但又受到ABC语言的强烈影响。来自ABC语言的一些规定直到今天还富有争议，比如强制缩进。 但这些语法规定让Python容易读。另一方面，Python聪明的选择服从一些惯例，特别是C语言的惯例，比如回归等号赋值。Guido认为，如果“常识”上确立的东西，没有必要过度纠结。 Python从一开始就特别在意可拓展性。Python可以在多个层次上拓展。从高层上，你可以直接引入. py文件。在底层，你可以引用C语言的库。Python程序员可以快速的使用Python写. py文件作为拓展模块。但当性能是考虑的重要因素时，Python程序员可以深入底层，写C程序，编译为.so文件引入到Python中使用。Python就好像是使用钢构建房一样，先规定好大的框架。而程序员可以在此框架下相当自由的拓展或更改。 最初的Python完全由Guido本人开发。Python得到Guido同事的欢迎。他们迅速的反馈使用意见，并参与到Python的改进。Guido和一些同事构成Python的核心团队。他们将自己大部分的业余时间用于hack Python。随后，Python拓展到研究所之外。Python将许多机器层面上的细节隐藏，交给编译器处理，并凸显出逻辑层面的编程思考。Python程序员可以花更多的时间用于思考程序的逻辑，而不是具体的实现细节。这一特征吸引了广大的程序员。</p><h2><span id="python-de-you-dian">Python的优点</span><a href="#python-de-you-dian" class="header-anchor">#</a></h2><p><strong>简单</strong>—Python是一种代表简单主义思想的语言。阅读一个良好的Python程序就感觉像是在读英语一样，尽管这个英语的要求非常严格！Python的这种伪代码本质是它最大的优点之一。它使你能够专注于解决问题而不是去搞明白语言本身。</p><p><strong>易学</strong>—就如同你即将看到的一样，Python极其容易上手。前面已经提到了，Python有极其简单的语法。</p><p><strong>免费、开源</strong>—Python是FLOSS（自由/开放源码软件）之一。简单地说，你可以自由地发布这个软件的拷贝、阅读它的源代码、对它做改动、把它的一部分用于新的自由软件中。FLOSS是基于一个团体分享知识的概念。这是为什么Python如此优秀的原因之一——它是由一群希望看到一个更加优秀的Python的人创造并经常改进着的。</p><p><strong>高层语言</strong>—当你用Python语言编写程序的时候，你无需考虑诸如如何管理你的程序使用的内存一类的底层细节。</p><p><strong>可移植性</strong>—由于它的开源本质，Python已经被移植在许多平台上（经过改动使它能够工作在不同平台上）。如果你小心地避免使用依赖于系统的特性，那么你的所有Python程序无需修改就可以在下述任何平台上面运行。这些平台包括Linux、Windows、FreeBSD、Macintosh、Solaris、OS/2、Amiga、AROS、AS/400、BeOS、OS/390、z/OS、Palm OS、QNX、VMS、Psion、Acom RISC OS、VxWorks、PlayStation、Sharp Zaurus、Windows CE甚至还有PocketPC、Symbian以及Google基于linux开发的Android平台！</p><p><strong>解释性</strong>—这一点需要一些解释。一个用编译性语言比如C或C++写的程序可以从源文件（即C或C++语言）转换到一个你的计算机使用的语言（二进制代码，即0和1）。这个过程通过编译器和不同的标记、选项完成。当你运行你的程序的时候，连接/转载器软件把你的程序从硬盘复制到内存中并且运行。而Python语言写的程序不需要编译成二进制代码。你可以直接从源代码运行程序。在计算机内部，Python解释器把源代码转换成称为字节码的中间形式，然后再把它翻译成计算机使用的机器语言并运行。事实上，由于你不再需要担心如何编译程序，如何确保连接转载正确的库等等，所有这一切使得使用Python更加简单。由于你只需要把你的Python程序拷贝到另外一台计算机上，它就可以工作了，这也使得你的Python程序更加易于移植。</p><p><strong>面向对象</strong>—Python既支持面向过程的编程也支持面向对象的编程。在“面向过程”的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在“面向对象”的语言中，程序是由数据和功能组合而成的对象构建起来的。与其他主要的语言如C++和Java相比，Python以一种非常强大又简单的方式实现面向对象编程。</p><p><strong>可扩展性</strong>—如果你需要你的一段关键代码运行得更快或者希望某些算法不公开，你可以把你的部分程序用C或C++编写，然后在你的Python程序中使用它们。</p><p><strong>丰富的库</strong>—Python标准库确实很庞大。它可以帮助你处理各种工作，包括正则表达式、文档生成、单元测试、线程、数据库、网页浏览器、CGI、FTP、电子邮件、XML、XML-RPC、HTML、WAV文件、密码系统、GUI（图形用户界面）、Tk和其他与系统有关的操作。记住，只要安装了Python，所有这些功能都是可用的。这被称作Python的“功能齐全”理念。除了标准库以外，还有许多其他高质量的库，如wxPython、Twisted和Python图像库等等。</p><p><strong>规范的代码</strong>—Python采用强制缩进的方式使得代码具有极佳的可读性</p><h2><span id="python-de-que-dian">Python的缺点</span><a href="#python-de-que-dian" class="header-anchor">#</a></h2><p>运行速度，有速度要求的话，用C++改写关键部分吧。<br>国内市场较小（国内以python来做主要开发的，目前只有一些web2.0公司）。但时间推移，目前很多国内软件公司，尤其是游戏公司，也开始规模使用他。<br>中文资料匮乏（好的python中文资料屈指可数）。托社区的福，有几本优秀的教材已经被翻译了，但入门级教材多，高级内容还是只能看英语版。<br>构架选择太多（没有像C#这样的官方.net构架，也没有像ruby由于历史较短，构架开发的相对集中。Ruby on Rails 构架开发中小型web程序天下无敌）。不过这也从另一个侧面说明，python比较优秀，吸引的人才多，项目也多</p><h2><span id="python-de-ying-yong-chang-jing">Python的应用场景</span><a href="#python-de-ying-yong-chang-jing" class="header-anchor">#</a></h2><p><strong>Web应用开发</strong></p><p>Python经常被用于Web开发。比如，通过mod_wsgi模块，Apache可以运行用Python编写的Web程序。Python定义了WSGI标准应用接口来协调Http服务器与基于Python的Web程序之间的通信。一些Web框架，如Django,TurboGears,web2py,Zope等，可以让程序员轻松地开发和管理复杂的Web程序。</p><p><strong>操作系统管理、服务器运维的自动化脚本</strong></p><p>在很多操作系统里，Python是标准的系统组件。 大多数Linux发行版以及NetBSD、OpenBSD和Mac OS X都集成了Python，可以在终端下直接运行Python。有一些Linux发行版的安装器使用Python语言编写，比如Ubuntu的Ubiquity安装器,Red Hat Linux和Fedora的Anaconda安装器。Gentoo Linux使用Python来编写它的Portage包管理系统。Python标准库包含了多个调用操作系统功能的库。通过pywin32这个第三方软件 包，Python能够访问Windows的COM服务及其它Windows API。使用IronPython，Python程序能够直接调用.Net Framework。一般说来，Python编写的系统管理脚本在可读性、性能、代码重用度、扩展性几方面都优于普通的shell脚本。</p><p><strong>科学计算</strong></p><p>NumPy,SciPy,Matplotlib可以让Python程序员编写科学计算程序。</p><p><strong>桌面软件</strong></p><p>PyQt、PySide、wxPython、PyGTK是Python快速开发桌面应用程序的利器。</p><p><strong>服务器软件（网络软件）</strong></p><p>Python对于各种网络协议的支持很完善，因此经常被用于编写服务器软件、网络爬虫。第三方库Twisted支持异步网络编程和多数标准的网络协议(包含客户端和服务器)，并且提供了多种工具，被广泛用于编写高性能的服务器软件。</p><p><strong>游戏</strong></p><p>很多游戏使用C++编写图形显示等高性能模块，而使用Python或者Lua编写游戏的逻辑、服务器。相较于Python，Lua的功能更简单、体积更小；而Python则支持更多的特性和数据类型。</p><p><strong>构思实现，产品早期原型和迭代</strong></p><p>YouTube、Google、Yahoo!、NASA都在内部大量地使用Python。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#python-jie-shao&quot;&gt;Python介绍&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#qi-yuan&quot;&gt;起源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#yi-men
      
    
    </summary>
    
      <category term="Python" scheme="http://baofengketang.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://baofengketang.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>编辑器之神－VIM</title>
    <link href="http://baofengketang.com/2018/04/17/vim/vim_01/"/>
    <id>http://baofengketang.com/2018/04/17/vim/vim_01/</id>
    <published>2018-04-16T16:10:01.000Z</published>
    <updated>2018-05-04T08:05:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="vim-jian-jie">VIM简介</span><a href="#vim-jian-jie" class="header-anchor">#</a></h1><p>vi是“Visual interface”的简称，它在Linux上的地位就仿佛Edit程序在DOS上一样。它可以执行输出、删除、查找、替换、块操作等众多文本操作，而且用户可以根据自己的需要对其进行定制。Vi不是一个排版程序，它不象Word或WPS那样可以对字体、格式、段落等其他属性进行编排，它只是一个文本编辑程序。 vi没有菜单，只有命令，且命令繁多。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vi有三种基本工作模式：</span><br><span class="line">+  命令模式</span><br><span class="line">+  文本输入模式</span><br><span class="line">+  末行模式。</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1524928023.png?imageMogr2/thumbnail/!70p" alt=""></p><h2><span id="ming-ling-xing-mo-shi">命令行模式</span><a href="#ming-ling-xing-mo-shi" class="header-anchor">#</a></h2><p>任何时候，不管用户处于何种模式，只要按一下ESC键，即可使Vi进入命令模式；我们在shell环境(提示符为$)下输入启动Vi命令，进入编辑器时，也是处于该模式下。在该模式下，用户可以输入各种合法的Vi命令，用于管理自己的文档。此时从键盘上输入的任何字符都被当做编辑命令来解释，若输入的字符是合法的Vi命令，则Vi在接受用户命令之后完成相应的动作。但需注意的是，所输入的命令并不在屏幕上显示出来。若输入的字符不是Vi的合法命令，vi会响铃报警</p><h2><span id="wen-ben-shu-ru-mo-shi">文本输入模式</span><a href="#wen-ben-shu-ru-mo-shi" class="header-anchor">#</a></h2><p>在命令模式下输入插入命令i、附加命令a 、打开命令o、修改命令c、取代命令r或替换命令s都可以进入文本输入模式。在该模式下，用户输入的任何字符都被Vi当做文件内容保存起来，并将其显示在屏幕上。在文本输入过程中，若想回到命令模式下，按键ESC即可</p><h2><span id="mo-xing-mo-shi">末行模式</span><a href="#mo-xing-mo-shi" class="header-anchor">#</a></h2><p>末行模式也称ex转义模式。在命令模式下，用户按“:”键即可进入末行模式下，此时Vi会在显示窗口的最后一行(通常也是屏幕的最后一行)显示一个“:”作为末行模式的提示符，等待用户输入命令。多数文件管理命令都是在此模式下执行的(如把编辑缓冲区的内容写到文件中等)。末行命令执行完后，Vi自动回到命令模式。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:sp newfile</span><br></pre></td></tr></table></figure><p>则分出一个窗口编辑newfile文件。如果要从命令模式转换到编辑模式，可以键入命令a或者i；如果需要从文本模式返回，则按Esc键即可。在命令模式下输入“:”即可切换到末行模式，然后输入命令</p><h1><span id="vim-ji-chu-cao-zuo">vim基础操作</span><a href="#vim-ji-chu-cao-zuo" class="header-anchor">#</a></h1><p>vim是从 vi 发展出来的一个文本编辑器 。代码补完、编译及错误跳转等方便编程的功能特别丰富</p><p><strong>进入插入模式:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i: 在光标前插入一个字符</span><br><span class="line">a: 在光标后插入一个字符 </span><br><span class="line">o: 向下新开一行,插入行首 </span><br><span class="line">I: 插入行首 </span><br><span class="line">A: 插入行未 </span><br><span class="line">O: 向上新开一行,插入行首</span><br></pre></td></tr></table></figure><p><strong>进⼊命令模式:</strong> ESC:从插⼊模式或末⾏模式进⼊命令模式</p><p><strong>移动光标:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">h: 左移</span><br><span class="line">l: 右移</span><br><span class="line">j: 下移</span><br><span class="line">k: 上移</span><br><span class="line"></span><br><span class="line">H: 光标移动到当前屏幕上方</span><br><span class="line">M: 光标移动到当前屏幕中间⾏</span><br><span class="line">L: 光标移动到屏幕下方</span><br><span class="line"></span><br><span class="line">Ctr-f: 向下翻⼀屏</span><br><span class="line">Ctr-b: 向上翻⼀屏</span><br><span class="line">Ctr-d: 向下翻半屏</span><br><span class="line">Ctr-u: 向上翻半屏</span><br><span class="line"></span><br><span class="line">G:快速回到整个代码行的最后一行</span><br><span class="line">gg:快速回到整个代码的第一行</span><br><span class="line">20G:快速定位到第20行代码</span><br><span class="line"></span><br><span class="line">w: 向后跳一个单词的长度，即跳到下一个单词的开始处</span><br><span class="line">b: 向前跳一个单词的长度，即跳到上一个单词的开始处</span><br><span class="line">&#123;: 按段移动,上移</span><br><span class="line">&#125;: 按段移动,下移</span><br><span class="line"></span><br><span class="line">gg: 光标移动⽂件开头</span><br><span class="line">G: 光标移动到⽂件末尾</span><br></pre></td></tr></table></figure><p> <strong>删除（剪切）命令:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dd: 删除光标所在⾏,n dd 删除指定的⾏数 </span><br><span class="line">D: 从当前光标开始前切，一直到行末</span><br><span class="line">d0: 从当前光标开始前切，一只到行首</span><br><span class="line">dw: 删除光标开始位置的单词,包含光标所在字符</span><br><span class="line">x: 删除光标后⼀个字符,相当于 Del</span><br><span class="line">X: 删除光标前⼀个字符,相当于 Backspace</span><br><span class="line">u: ⼀步⼀步撤销</span><br><span class="line">Ctr-r: 反撤销</span><br></pre></td></tr></table></figure><p><strong>复制粘贴:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yy: 复制当前行,</span><br><span class="line">n yy: 复制 n 行 </span><br><span class="line">p: 在光标所在位置向下新开辟一行,粘贴</span><br></pre></td></tr></table></figure><p><strong>文本行移动:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v,V:选中一片</span><br><span class="line">&gt;&gt;: ⽂本⾏右移</span><br><span class="line">&lt;&lt;: ⽂本⾏左移</span><br><span class="line">.: 重复上一次操作的命令</span><br></pre></td></tr></table></figure><p><strong>替换操作:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r: 替换当前字符 </span><br><span class="line">R: 替换当前行光标后的字符</span><br></pre></td></tr></table></figure><p><strong>查找命令:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/: str查找</span><br><span class="line">n: 下一个</span><br><span class="line">N：上一个</span><br></pre></td></tr></table></figure><p><strong>替换命令:</strong></p><p>把abc全部替换成123</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">末行模式下，将当前文件中的所有abc替换成123</span><br><span class="line">:%s/abc/123/g</span><br><span class="line">末行模式下，将第一行至第10行之间的abc替换成123</span><br><span class="line">:1, 10s/abc/123/g</span><br></pre></td></tr></table></figure><p>末行模式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">w:保存</span><br><span class="line">q:退出</span><br><span class="line">wq:保存并且退出</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;vim-jian-jie&quot;&gt;VIM简介&lt;/span&gt;&lt;a href=&quot;#vim-jian-jie&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;vi是“Visual interface”的简称，它在Linux上的地位就仿佛Ed
      
    
    </summary>
    
      <category term="vim" scheme="http://baofengketang.com/categories/vim/"/>
    
    
      <category term="vim" scheme="http://baofengketang.com/tags/vim/"/>
    
      <category term="编辑器" scheme="http://baofengketang.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>古诗词（一）</title>
    <link href="http://baofengketang.com/2018/04/13/jinhaoze/number1/"/>
    <id>http://baofengketang.com/2018/04/13/jinhaoze/number1/</id>
    <published>2018-04-13T13:04:43.000Z</published>
    <updated>2018-04-23T14:38:57.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="jing-ye-si-li-bai-shi-zuo">静夜思(李白诗作)</span><a href="#jing-ye-si-li-bai-shi-zuo" class="header-anchor">#</a></h1><h3><span id="chuang-qian-ming-yue-guang-yi-shi-di-shang-shuang">床前明月光，疑是地上霜。</span><a href="#chuang-qian-ming-yue-guang-yi-shi-di-shang-shuang" class="header-anchor">#</a></h3><h3><span id="ju-tou-wang-ming-yue-di-tou-si-gu-xiang">举头望明月，低头思故乡。</span><a href="#ju-tou-wang-ming-yue-di-tou-si-gu-xiang" class="header-anchor">#</a></h3><hr><h1><span id="chun-xiao-tang-dai-meng-hao-ran-shi-zuo">春晓（唐代孟浩然诗作）</span><a href="#chun-xiao-tang-dai-meng-hao-ran-shi-zuo" class="header-anchor">#</a></h1><h3><span id="chun-mian-bu-jue-xiao-chu-chu-wen-ti-niao">春眠不觉晓，处处闻啼鸟。</span><a href="#chun-mian-bu-jue-xiao-chu-chu-wen-ti-niao" class="header-anchor">#</a></h3><h3><span id="ye-lai-feng-yu-sheng-hua-luo-zhi-duo-shao">夜来风雨声，花落知多少。</span><a href="#ye-lai-feng-yu-sheng-hua-luo-zhi-duo-shao" class="header-anchor">#</a></h3><hr><h1><span id="cun-ju-qing-dai-shi-ren-gao-ding">村居（清代诗人高鼎）</span><a href="#cun-ju-qing-dai-shi-ren-gao-ding" class="header-anchor">#</a></h1><h3><span id="cao-chang-ying-fei-er-yue-tian-fu-di-yang-liu-zui-chun-yan">草长莺飞二月天，拂堤杨柳醉春烟。</span><a href="#cao-chang-ying-fei-er-yue-tian-fu-di-yang-liu-zui-chun-yan" class="header-anchor">#</a></h3><h3><span id="er-tong-san-xue-gui-lai-zao-mang-chen-dong-feng-fang-zhi-yuan">儿童散学归来早，忙趁东风放纸鸢</span><a href="#er-tong-san-xue-gui-lai-zao-mang-chen-dong-feng-fang-zhi-yuan" class="header-anchor">#</a></h3><hr><h1><span id="suo-jian-qing-dai-shi-ren-yuan-mei">所见（清代诗人袁枚）</span><a href="#suo-jian-qing-dai-shi-ren-yuan-mei" class="header-anchor">#</a></h1><h3><span id="mu-tong-qi-huang-niu-ge-sheng-zhen-lin-yue">牧童骑黄牛，歌声振林樾。</span><a href="#mu-tong-qi-huang-niu-ge-sheng-zhen-lin-yue" class="header-anchor">#</a></h3><h3><span id="yi-yu-bu-ming-chan-hu-ran-bi-kou-li">意欲捕鸣蝉，忽然闭口立。</span><a href="#yi-yu-bu-ming-chan-hu-ran-bi-kou-li" class="header-anchor">#</a></h3><hr><h1><span id="xiao-chi-song-dai-shi-ren-yang-wan-li">小池（宋代诗人杨万里）</span><a href="#xiao-chi-song-dai-shi-ren-yang-wan-li" class="header-anchor">#</a></h1><h3><span id="quan-yan-wu-sheng-xi-xi-liu-shu-yin-zhao-shui-ai-qing-rou">泉眼无声惜细流，树阴照水爱晴柔。</span><a href="#quan-yan-wu-sheng-xi-xi-liu-shu-yin-zhao-shui-ai-qing-rou" class="header-anchor">#</a></h3><h3><span id="xiao-he-cai-lu-jian-jian-jiao-zao-you-qing-ting-li-shang-tou">小荷才露尖尖角，早有蜻蜓立上头。</span><a href="#xiao-he-cai-lu-jian-jian-jiao-zao-you-qing-ting-li-shang-tou" class="header-anchor">#</a></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;jing-ye-si-li-bai-shi-zuo&quot;&gt;静夜思(李白诗作)&lt;/span&gt;&lt;a href=&quot;#jing-ye-si-li-bai-shi-zuo&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;h3&gt;&lt;span id=&quot;
      
    
    </summary>
    
      <category term="诗词" scheme="http://baofengketang.com/categories/%E8%AF%97%E8%AF%8D/"/>
    
    
      <category term="诗词" scheme="http://baofengketang.com/tags/%E8%AF%97%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础（二）</title>
    <link href="http://baofengketang.com/2018/04/13/linux/linux_02/"/>
    <id>http://baofengketang.com/2018/04/13/linux/linux_02/</id>
    <published>2018-04-13T09:39:43.000Z</published>
    <updated>2018-05-03T03:27:56.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#linux-xi-tong-de-chang-yong-ming-ling-cao-zuo">Linux系统的常用命令操作</a><ul><li><a href="#ming-ling-de-ge-shi">命令的格式</a></li><li><a href="#cha-kan-bang-zhu-wen-dang">查看帮助文档</a></li><li><a href="#wen-jian-yu-mu-lu">文件与目录</a></li><li><a href="#linux-ming-ling">Linux命令</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="linux-xi-tong-de-chang-yong-ming-ling-cao-zuo">Linux系统的常用命令操作</span><a href="#linux-xi-tong-de-chang-yong-ming-ling-cao-zuo" class="header-anchor">#</a></h1><h2><span id="ming-ling-de-ge-shi">命令的格式</span><a href="#ming-ling-de-ge-shi" class="header-anchor">#</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">command [-options] [parameter1] …</span><br></pre></td></tr></table></figure><p>说明：</p><p>command: 命令名,相应功能的英⽂单词或单词的缩写 [-options]： 选项,可⽤来对命令进⾏控制， 也可以省略， []代表可选 parameter1 …： 传给命令的参数： 可以是零个⼀个或多个</p><p>案例：</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523885414.png?imageMogr2/thumbnail/!70p" alt=""></p><h2><span id="cha-kan-bang-zhu-wen-dang">查看帮助文档</span><a href="#cha-kan-bang-zhu-wen-dang" class="header-anchor">#</a></h2><p><strong>–help</strong></p><p>⼀般是linux命令⾃带的帮助信息</p><p>如： ls –help</p><p><strong>man( manual)</strong></p><p>man是linux提供的⼀个⼿册， 包含了绝⼤部分的命令、 函数使⽤说明该⼿册分成很多章节（section） ， 使⽤man时可以指定不同的章节来浏览。</p><p>例： man ls ; man 2 printf</p><p>man中各个section意义如下：</p><ol><li>Standard commands（标准命令）</li><li>System calls（系统调⽤， 如open,write）</li><li>Library functions（库函数， 如printf,fopen）</li><li>Special devices（设备⽂件的说明， /dev下各种设备）</li><li>File formats（⽂件格式， 如passwd）</li><li>Games and toys（游戏和娱乐）</li><li>Miscellaneous（杂项、 惯例与协定等， 例如Linux档案系统、 ⽹络协定、 ASCII 码；environ全局变量）</li><li>Administrative Commands（管理员命令， 如ifconfig）</li></ol><p>man是按照⼿册的章节号的顺序进⾏搜索的</p><p> man设置了如下的功能键：</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523887426.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>自动补全</strong></p><p>在敲出命令的前⼏个字⺟的同时， 按下<strong>tab</strong>键， 系统会⾃动帮我们补全命令</p><p><strong>历史命令</strong></p><p>当系统执⾏过⼀些命令后， 可按上下键翻看以前的命令， <strong>history</strong>将执⾏过的命令列举出来</p><h2><span id="wen-jian-yu-mu-lu">文件与目录</span><a href="#wen-jian-yu-mu-lu" class="header-anchor">#</a></h2><p>在 windows 平台下， 打开“计算机”， 我们看到的是⼀个个的驱动器盘， 每个驱动器都有⾃⼰的根⽬录结构， 这样形成了多个树并列的情形。在 Linux 下， 我们是看不到这些驱动器盘符， 我们看到的是⽂件夹（⽬录） </p><p><strong>Unix系统的目录结构（了解）</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523583223.png?imageMogr2/thumbnail/!70p" alt=""></p><ul><li><p>/： 根⽬录， ⼀般根⽬录下只存放⽬录， 在Linux下有且只有⼀个根⽬录。 所有的东⻄都是从这⾥开始。 当你在终端⾥输⼊“/home”， 你其实是在告诉电脑， 先从/（根⽬录） 开始， 再进⼊到home⽬录。</p></li><li><p>/bin、 /usr/bin: 可执⾏⼆进制⽂件的⽬录， 如常⽤的命令ls、 tar、 mv、 cat等。</p></li><li><p>/boot： 放置linux系统启动时⽤到的⼀些⽂件， 如Linux的内核⽂件： /boot/vmlinuz，系统引导管理器： /boot/grub。</p></li><li><p>/dev： 存放linux系统下的设备⽂件， 访问该⽬录下某个⽂件， 相当于访问某个设备，常⽤的是挂载光驱 mount /dev/cdrom /mnt。</p></li><li><p>/etc： 系统配置⽂件存放的⽬录， 不建议在此⽬录下存放可执⾏⽂件</p></li><li><p>/home： 系统默认的⽤户家⽬录， 新增⽤户账号时， ⽤户的家⽬录都存放在此⽬下， ~表示当前⽤户的家⽬录， ~edu 表示⽤户 edu 的家⽬录。</p></li><li><p>/lib、 /usr/lib、 /usr/local/lib： 系统使⽤的函数库的⽬录， 程序在执⾏过程中， 需要调⽤⼀些额外的参数时需要函数库的协助。</p></li><li><p>/lost+fount： 系统异常产⽣错误时， 会将⼀些遗失的⽚段放置于此⽬录下。/mnt: /media： 光盘默认挂载点， 通常光盘挂载于 /mnt/cdrom 下， 也不⼀定， 可以选择任意位置进⾏挂载。</p></li><li><p>/opt： 给主机额外安装软件所摆放的⽬录。</p></li><li><p>/proc： 此⽬录的数据都在内存中， 如系统核⼼， 外部设备， ⽹络状态， 由于数据都存放于内存中， 所以不占⽤磁盘空间， ⽐较重要的⽬录有/proc/cpuinfo、 /proc/interrupts、 /proc/dma、 /proc/ioports、/proc/net/* 等。</p></li><li><p>/root： 系统管理员root的家⽬录。</p></li><li><p>/sbin、 /usr/sbin、 /usr/local/sbin： 放置系统管理员使⽤的可执⾏命令， 如fdisk、shutdown、 mount 等。 与 /bin 不同的是， 这⼏个⽬录是给系统管理员 root使⽤的命令， ⼀般⽤户只能”查看”⽽不能设置和使⽤。</p></li><li><p>/tmp： ⼀般⽤户或正在执⾏的程序临时存放⽂件的⽬录， 任何⼈都可以访问， 重要数据不可放置在此⽬下。</p></li><li><p>/srv： 服务启动之后需要访问的数据⽬录， 如 www 服务需要访问的⽹⻚数据存放在/srv/www 内。</p></li><li><p>/usr： 应⽤程序存放⽬录， /usr/bin 存放应⽤程序， /usr/share 存放共享数据， /usr/lib存放不能直接运⾏的， 却是许多程序运⾏所必需的⼀些函数库⽂件。 /usr/local: 存放软件升级包。 /usr/share/doc: 系统说明⽂件存放⽬录。 /usr/share/man: 程序说明⽂件存放⽬录。</p></li><li><p>/var： 放置系统执⾏过程中经常变化的⽂件， 如随时更改的⽇志⽂件</p></li><li><p>/var/log， /var/log/message： 所有的登录⽂件存放⽬录， /var/spool/mail： 邮件存放的⽬录， /var/run:程序或服务启动后， 其PID存放在该⽬录下</p><p><strong>用户目录（重点）</strong></p><p>位于/home/user， 称之为⽤户⼯作⽬录或家⽬录,表示⽅式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinzhong@ubuntu:~$ <span class="built_in">cd</span> ~</span><br><span class="line">jinzhong@ubuntu:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/jinzhong</span><br></pre></td></tr></table></figure><p>​</p><p><strong>相对路径与绝对路径</strong></p><p>绝对路径： 从/⽬录开始描述的路径为绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinzhong@ubuntu:~$ <span class="built_in">cd</span> /home/jinzhong/</span><br><span class="line">jinzhong@ubuntu:~$ <span class="built_in">pwd</span></span><br><span class="line">/home/jinzhong</span><br></pre></td></tr></table></figure><p> 相对路径: 从当前位置开始描述的路径为相对路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jinzhong@ubuntu:~$ cd .</span><br><span class="line">jinzhong@ubuntu:~$ pwd</span><br><span class="line">/home/jinzhong</span><br><span class="line">jinzhong@ubuntu:~$ cd ..</span><br><span class="line">jinzhong@ubuntu:/home$ pwd</span><br><span class="line">/home</span><br><span class="line">jinzhong@ubuntu:/home$</span><br></pre></td></tr></table></figure><p><strong>.和..</strong></p><p> 每个⽬录下都有.和..</p><p>. 表示当前⽬录</p><p>.. 表示上⼀级⽬录， 即⽗⽬录</p><p>根⽬录下的.和..都表示当前⽬录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd:切换工作目录</span><br><span class="line">cd ~ :切换到家目录</span><br><span class="line">cd .:切换到当前目录</span><br><span class="line">cd ..:切换到上级目录</span><br><span class="line">cd -:切换到上次所在目录</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h2><span id="linux-ming-ling">Linux命令</span><a href="#linux-ming-ling" class="header-anchor">#</a></h2><p><strong>打开终端：</strong></p><p>​    放大：ctrl+shift++</p><p>​    缩小：ctrl+-</p><p><strong>ls命令:显示目录中的文件</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523594563.png?imageMogr2/thumbnail/!70p" alt=""></p><p>ls支持通配符</p><table><thead><tr><th style="text-align:center">通配符</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">＊</td><td style="text-align:center">⽂件代表⽂件名中所有字符</td></tr><tr><td style="text-align:center">ls te*</td><td style="text-align:center">查找以te开头的⽂</td></tr><tr><td style="text-align:center">ls *html</td><td style="text-align:center">查找结尾为html的⽂件</td></tr><tr><td style="text-align:center">？</td><td style="text-align:center">代表⽂件名中任意⼀个字符</td></tr><tr><td style="text-align:center">ls ?.c</td><td style="text-align:center">只找第⼀个字符任意， 后缀为.c的⽂件</td></tr><tr><td style="text-align:center">ls a.?</td><td style="text-align:center">只找只有3个字符， 前2字符为a.， 最后⼀个字符任意的文件</td></tr><tr><td style="text-align:center">[]</td><td style="text-align:center">[”和“]”将字符组括起来， 表示可以匹配字符组中的任意⼀个。 “-”⽤于表示字符范围。</td></tr><tr><td style="text-align:center">[abc]</td><td style="text-align:center">匹配a、 b、 c中的任意⼀个</td></tr><tr><td style="text-align:center">[a-f]</td><td style="text-align:center">匹配从a到f范围内的的任意⼀个字符</td></tr><tr><td style="text-align:center">ls [a-f]*</td><td style="text-align:center">找到从a到f范围内的的任意⼀个字符开头的⽂件</td></tr><tr><td style="text-align:center">ls a-f</td><td style="text-align:center">查找⽂件名为a-f的⽂件,当“-”处于⽅括号之外失去通配符的作用</td></tr><tr><td style="text-align:center">\</td><td style="text-align:center">如果要使通配符作为普通字符使⽤， 可以在其前⾯加上转义字符。 “?”和“*”处于⽅括号内时不⽤使⽤转义字符就失去通配符的作⽤。</td></tr><tr><td style="text-align:center">ls *</td><td style="text-align:center">查找⽂件名为*a的⽂件</td></tr><tr><td style="text-align:center"></td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls ：显示目录中的文件</span><br><span class="line">ls -a:显示目录中所有的文件，包含隐藏文件</span><br><span class="line">ls -al:显示目录中的所有文件，以列表形式显示</span><br><span class="line">clear:清屏</span><br><span class="line">pwd:显示当前路径</span><br></pre></td></tr></table></figure><p><strong>输出重定向命令</strong></p><p>Linux允许将命令执行结果重定向到一个文件，本应显示在终端上的内容保存到指定文件中。</p><p>如：ls &gt; test.txt ( test.txt 如果不存在，则创建，存在则覆盖其内容 )</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523893055.png?imageMogr2/thumbnail/!70p" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls &gt;hello.txt:将显示的内容放在文件中</span><br><span class="line">ls&gt;&gt;world.txt:将显示的内容追加到文件中</span><br><span class="line">&gt;：会将文件原有的内容删除，而&gt;&gt;不会</span><br></pre></td></tr></table></figure><p>重定向可以和more结合使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将ls的内容放入到文件中，然后在采用more进行查看</span><br><span class="line">ls /bin -alh -&gt;hello.txt</span><br><span class="line">more hello.txt</span><br></pre></td></tr></table></figure><p><strong>分屏显示（more）</strong></p><p>查看内容时， 在信息过⻓⽆法在⼀屏上显示时， 会出现快速滚屏， 使得⽤户⽆法看清⽂件的内容， 此时可以使⽤more命令， 每次只显示⼀⻚， 按下空格键可以显示下⼀⻚， 按下q键退出显示， 按下h键可以获取帮助。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">more hello.txt</span><br><span class="line">f:forward</span><br><span class="line">b:back</span><br><span class="line">q:退出</span><br></pre></td></tr></table></figure><p><strong>创建目录</strong></p><p>通过mkdir命令可以创建一个新的目录。参数-p可递归创建目录。</p><p>需要注意的是新建目录的名称不能与当前目录中已有的目录或文件同名，并且目录创建者必须对当前目录具有写权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir 目录名：创建一个目录</span><br><span class="line">mkdir a/b/c/e -p:创建多级目录</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523594765.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>删除目录</strong></p><p>可通过rm删除文件或目录。使用rm命令要小心，因为文件删除后不能恢复。为了防止文件误删，可以在rm后使用-i参数以逐个确认要删除的文件。</p><p>常用参数及含义如下表所示：</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-i</td><td>以进行交互式方式执行</td></tr><tr><td>-f</td><td>强制删除，忽略不存在的文件，无需提示</td></tr><tr><td>-r</td><td>递归地删除目录下的内容，删除文件夹时必须加此参数</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rmdir 目录：删除目录，但是注意该目录中不能存在文件</span><br><span class="line">rm -rf 目录:递归删除目录</span><br><span class="line">rm:既可以删除文件，也可以删除文件夹</span><br></pre></td></tr></table></figure><p><strong>创建文件（在kingdom目录下）</strong></p><p>linux中如果文件以.开头，则这个文件为隐藏文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch 文件：创建一个文件</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523594926.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>查看文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 文件名：查看文件的内容</span><br></pre></td></tr></table></figure><p><strong>管道</strong></p><p>管道：一个命令的输出可以通过管道做为另一个命令的输入。</p><p>管道我们可以理解现实生活中的管子，管子的一头塞东西进去，另一头取出来，这里“ | ”的左右分为两端，左端塞东西(写)，右端取东西(读)。</p><p>改写上面的案例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /bin -alh -&gt;hello.txt ｜more</span><br></pre></td></tr></table></figure><p><strong>链接</strong></p><p>Linux链接文件类似于Windows下的快捷方式。</p><p>链接文件分为软链接和硬链接。</p><p>软链接：软链接不占用磁盘空间，源文件删除则软链接失效。</p><p>硬链接：硬链接只能链接普通文件，不能链接目录。</p><p>使用格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln 源文件 链接文件</span><br><span class="line">ln -s 源文件 链接文件</span><br></pre></td></tr></table></figure><p>软连接：类比windows中的快捷方式，软连接不会增加硬连接的连接数量，源文件删除会影响到软连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">创建一个1.txt的软连接，</span><br><span class="line">ln -s 1.txt 1_softlink.txt</span><br></pre></td></tr></table></figure><p>硬连接：会增加硬连接的连接数量,原文件删除不会影响到影连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln 1.txt 1_hardlink.txt</span><br></pre></td></tr></table></figure><p><strong>通过cat与重定向可以合并多个文件</strong></p><p>将文件1与文件2的内容合并到new.txt文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat 文件1 文件2 &gt; new.txt</span><br></pre></td></tr></table></figure><p><strong>拷贝文件复制cp命令</strong></p><p>cp命令的功能是将给出的文件或目录复制到另一个文件或目录中，相当于DOS下的copy命令。</p><p>常用选项说明：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>该选项通常在复制目录时使用，它保留链接、文件属性，并递归地复制目录，简单而言，保持文件原有属性。</td></tr><tr><td>-f</td><td>已经存在的目标文件而不提示</td></tr><tr><td>-i</td><td>交互式复制，在覆盖目标文件之前将给出提示要求用户确认</td></tr><tr><td>-r</td><td>若给出的源文件是目录文件，则cp将递归复制该目录下的所有子目录和文件，目标文件必须为一个目录名。</td></tr><tr><td>-v</td><td>显示拷贝进度</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp 文件 /home/jinzhong -r</span><br></pre></td></tr></table></figure><p><strong>移动文件mv</strong></p><p>用户可以使用mv命令来移动文件或目录，也可以给文件或目录重命名。</p><p>常用选项说明：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>禁止交互式操作，如有覆盖也不会给出提示</td></tr><tr><td>-i</td><td>确认交互方式操作，如果mv操作将导致对已存在的目标文件的覆盖，系统会询问是否重写，要求用户回答以避免误覆盖文件</td></tr><tr><td>-v</td><td>显示移动进度</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">剪切:mv 111.txt /home/jinzhong</span><br><span class="line">重命名:mv 源文件名 新文件名</span><br></pre></td></tr></table></figure><p><strong>文本搜索</strong></p><p>Linux系统中grep命令是一种强大的文本搜索工具，grep允许对文本文件进行模式查找。如果找到匹配模式， grep打印包含模式的所有行。</p><p>grep一般格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [-选项] ‘搜索内容串’文件名</span><br></pre></td></tr></table></figure><p>在grep命令中输入字符串参数时，最好引号或双引号括起来。例如：grep‘a ’1.txt。</p><p>常用选项说明：</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-v</td><td>显示不包含匹配文本的所有行（相当于求反)</td></tr><tr><td>-n</td><td>显示匹配行及行号</td></tr><tr><td>-i</td><td>忽略大小写</td></tr></tbody></table><p>grep搜索内容串可以是正则表达式。</p><p>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;ntfs&quot; hello.txt:查找文件中包含ntfs的文本</span><br><span class="line">grep -n &quot;ntfs&quot; hello.txt :显示位于哪一行</span><br><span class="line">grep &quot;^ntfs&quot; hello.txt:查找以ntfs开头的文本</span><br></pre></td></tr></table></figure><p><strong>查找文件：find</strong></p><p>find命令功能非常强大，通常用来在特定的目录下搜索符合条件的文件，也可以用来搜索特定用户属主的文件。</p><p>常用用法：</p><table><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>find ./ -name test.sh</td><td>查找当前目录下所有名为test.sh的文件</td></tr><tr><td>find ./ -name ‘*.sh’</td><td>查找当前目录下所有后缀为.sh的文件</td></tr><tr><td>find ./ -name “[A-Z]*”</td><td>查找当前目录下所有以大写字母开头的文件</td></tr><tr><td>find /tmp -size 2M</td><td>查找在/tmp 目录下等于2M的文件</td></tr><tr><td>find /tmp -size +2M</td><td>查找在/tmp 目录下大于2M的文件</td></tr><tr><td>find /tmp -size -2M</td><td>查找在/tmp 目录下小于2M的文件</td></tr><tr><td>find ./ -size +4k -size -5M</td><td>查找当前目录下大于4k，小于5M的文件</td></tr><tr><td>find ./ -perm 777</td><td>查找当前目录下权限为 777 的文件或目录</td></tr></tbody></table><p><strong>归档与解压</strong></p><p>计算机中的数据经常需要备份，tar是Unix/Linux中最常用的备份工具，此命令可以把一系列文件归档到一个大文件中，也可以把档案文件解开以恢复数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将所有以txt结尾的文件打包称test.tar文件</span><br><span class="line">tar -cvf test.tar *.txt</span><br><span class="line">解包</span><br><span class="line">tar -xvf test.tar</span><br></pre></td></tr></table></figure><p>压缩与解压缩</p><p>gz方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">压缩</span><br><span class="line">tar -zcvf test.tar.gz *.txt</span><br><span class="line">解压缩</span><br><span class="line">tar -zxvf test.tar.gz</span><br></pre></td></tr></table></figure><p>bz2方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">压缩</span><br><span class="line">tar -jcvf test.tar.bz2 *.txt</span><br><span class="line">解压缩</span><br><span class="line">tar -jxvf test.tar.bz2</span><br></pre></td></tr></table></figure><p>zip方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">压缩</span><br><span class="line">zip hello.zip *.txt</span><br><span class="line">解压缩</span><br><span class="line">unzip hello.zip</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#linux-xi-tong-de-chang-yong-ming-ling-cao-zuo&quot;&gt;Linux系统的常用命令操作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ming-
      
    
    </summary>
    
      <category term="linux" scheme="http://baofengketang.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://baofengketang.com/tags/linux/"/>
    
      <category term="操作系统" scheme="http://baofengketang.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis源码解析</title>
    <link href="http://baofengketang.com/2018/04/13/mybatis/mybatis_01/"/>
    <id>http://baofengketang.com/2018/04/13/mybatis/mybatis_01/</id>
    <published>2018-04-13T07:48:19.000Z</published>
    <updated>2018-04-16T12:05:38.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="mybatis-ru-men">MyBatis入门</span><a href="#mybatis-ru-men" class="header-anchor">#</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;mybatis-ru-men&quot;&gt;MyBatis入门&lt;/span&gt;&lt;a href=&quot;#mybatis-ru-men&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
      
    
    </summary>
    
      <category term="mybatis" scheme="http://baofengketang.com/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="http://baofengketang.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Maven项目构建</title>
    <link href="http://baofengketang.com/2018/04/11/maven/maven_01/"/>
    <id>http://baofengketang.com/2018/04/11/maven/maven_01/</id>
    <published>2018-04-11T02:39:13.000Z</published>
    <updated>2018-04-16T12:05:29.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#maven-xiang-mu-gou-jian">Maven项目构建</a><ul><li><a href="#wei-shi-me-yao-shi-yong-maven">为什么要使用Maven</a><ul><li><a href="#fang-bian-wo-men-tian-jia-jar-bao">方便我们添加jar包</a></li><li><a href="#jar-bao-zhi-jian-de-yi-lai-wen-ti">jar包之间的依赖问题</a></li><li><a href="#geng-jia-fang-bian-de-huo-qu-di-san-fang-jar-bao">更加方便的获取第三方jar包</a></li><li><a href="#jiang-xiang-mu-chai-fen-wei-duo-ge-gong-cheng-mo-kuai">将项目拆分为多个工程模块</a></li></ul></li><li><a href="#shi-me-shi-maven">什么是Maven</a><ul><li><a href="#shi-me-shi-gou-jian">什么是构建</a></li><li><a href="#gou-jian-de-guo-cheng">构建的过程</a></li><li><a href="#zi-dong-hua-gou-jian">自动化构建</a></li></ul></li><li><a href="#maven-huan-jing-da-jian">Maven环境搭建</a><ul><li><a href="#xia-zai-he-xin-maven-cheng-xu">下载核心maven程序</a></li><li><a href="#jian-ce-java-huan-jing">检测Java环境</a></li><li><a href="#pei-zhi-maven-de-huan-jing-bian-liang">配置Maven的环境变量</a></li><li><a href="#yan-zheng-huan-jing-shi-fou-da-jian-cheng-gong">验证环境是否搭建成功</a></li></ul></li></ul></li></ul><!-- tocstop --><p></div></p><h1><span id="maven-xiang-mu-gou-jian">Maven项目构建</span><a href="#maven-xiang-mu-gou-jian" class="header-anchor">#</a></h1><p>Maven 是干什么用的？这是刚开始接触Maven 时最大的问题。之所以会提出这个问题，是因为即使不使用Maven，我们依然可以进行B/S 结构项目的开发。从表述层、业务逻辑层到持久化层再到数据库都有成熟的解决方案——不使用Maven我们一样可以开发项目</p><h2><span id="wei-shi-me-yao-shi-yong-maven">为什么要使用Maven</span><a href="#wei-shi-me-yao-shi-yong-maven" class="header-anchor">#</a></h2><h3><span id="fang-bian-wo-men-tian-jia-jar-bao">方便我们添加jar包</span><a href="#fang-bian-wo-men-tian-jia-jar-bao" class="header-anchor">#</a></h3><p>在今天JavaEE的开发领域，有大量的第三方框架和工具可以供我们使用，要使用这些jar包最简单的方法就是复制粘贴到WEB-INF/lib目录下，但是这会导致每次创建一个新的工程就需要将jar包重复复制lib目录下，从而造成工作区中存在大量重复的文件，让我们的工程显得很臃肿，而使用maven后每个jar包本身只在本地仓库保存一份，需要jar包的工程只需要以坐标的方式简单的引用一下就可以了，不仅极大的节约了存储空间，让项目更轻巧，更避免了重复文件太多而造成的混乱</p><h3><span id="jar-bao-zhi-jian-de-yi-lai-wen-ti">jar包之间的依赖问题</span><a href="#jar-bao-zhi-jian-de-yi-lai-wen-ti" class="header-anchor">#</a></h3><p>项目中jar包往往不是孤立存在的，很多jar包都需要在其他jar包的支持下才能够正常工作，我们称之为jar包之间的依赖关系，最典型的案例是：commons-fileupload-1.3.jar 依赖于commons-io-2.0.1.jar,如果没有io包，那么FileUpload包就不能够正常工作。</p><p>那么问题来了，你知道你所使用的jar包的依赖关系吗？当你拿到一个新的从未使用过的jar包，你如何知道它需要哪些jar包的支持呢?如果不了解这个情况，导入的jar包不够，那么现有的程序将不能正常工作，当你的项目中需要使用上百个jar包时，你还会认为的手工的逐一确认他们依赖的其他jar包吗？</p><p>这简直不敢想象,而引入maven后，maven就可以替我们自动的将当前jar包所依赖的其他所有的jar包全部导入进来，无需人工参与，节约了我们大量的时间和精力，用实际例子来说明就是：通过 Maven导入commons-fileupload-1.3.jar 后commons-io-2.0.1.jar会被自动导入，程序员不必了解这个依赖关系</p><h3><span id="geng-jia-fang-bian-de-huo-qu-di-san-fang-jar-bao">更加方便的获取第三方jar包</span><a href="#geng-jia-fang-bian-de-huo-qu-di-san-fang-jar-bao" class="header-anchor">#</a></h3><p>JavaEE开发中需要使用到的jar包种类繁多，几乎每个jar包在其本身的官网上的获取方式都不尽相同，为了查找一个jar包找遍整个互联网，身心俱惫，没有经历的人获取体会不到这种折磨，不仅如此费劲心血找的jar包里面有的时候并没有你需要的那个类，又或者有同名的类但是没没有你要的方法，以不规范的方式获得的jar包也是不规范的</p><p>使用maven我们可以享受到一个完全统一规范的jar包管理体系，你只需要在你的项目中以坐标的方式依赖一个jar包，maven就会自动从中央仓库进行下载，并同时下载这个jar包所依赖的其他jar包–&gt;规范、完整、准确！一次性解决所有问题</p><p>关于规范：统一的规范几乎可以说是程序员的最高信仰，如果没有规范，就意味着每个具体的技术都各自为政，需要以诸多不同的方式加入到项目中，好不容易加入进来后，可能还会与其他技术各个不入，最终受苦的是我们，而任何一个领域统一的规范可以极大的降低程序员的工作难度，减少工作量</p><p>在java中，我们一直提倡面向接口编程，而接口就是一种标准，一种规范。例如usb接口可以外接各种设备，如果每个设备都有自己独特的接口，那么不仅制造商需要维护各个接口的设计方案，使用者也需要详细了解每个设备</p><h3><span id="jiang-xiang-mu-chai-fen-wei-duo-ge-gong-cheng-mo-kuai">将项目拆分为多个工程模块</span><a href="#jiang-xiang-mu-chai-fen-wei-duo-ge-gong-cheng-mo-kuai" class="header-anchor">#</a></h3><p>随着J2EE的项目的规模越来越大，开发团队的规模也与日剧增，一个项目上千人的团队开发很多年对于J2EE项目来说在正常不过了，那么我们想象一下：几百上千的人开发的项目是统一个web工程，那么架构师、项目经理该如何划分项目的模块、如何分工呢？这么大的项目已经不可能通过package结构来划分模块了，必须将项目拆分为多个工程协同开发，多个模块工程中有的是java工程，有的是web工程，那么工程拆分为后如何进行互相调用和访问呢？这就需要使用maven的依赖管理机制</p><h2><span id="shi-me-shi-maven">什么是Maven</span><a href="#shi-me-shi-maven" class="header-anchor">#</a></h2><p>Maven是Apache软件基金会组织维护的一款自动化构建工具，专注服务于java平台的项目构建和依赖管理，maven这个单词的本意是：专家、内行。构建工具的历程：Ant-Maven(大部分项目中依然使用)-Gradle</p><h3><span id="shi-me-shi-gou-jian">什么是构建</span><a href="#shi-me-shi-gou-jian" class="header-anchor">#</a></h3><p>构建并不是创建，创建一个工程并不等同于构建一个项目，要了解构建的含义，我们从以下几个层面来阐述</p><h4><span id="java-gong-cheng">Java工程</span><a href="#java-gong-cheng" class="header-anchor">#</a></h4><p>大家都知道，java是一门编译型语言，.java的扩展名的源文件需要编译成.class扩展名的字节码文件才能够执行，所以编写任何java代码想要执行的话就必须经过编译得到对应的class文件</p><h4><span id="web-gong-cheng">web工程</span><a href="#web-gong-cheng" class="header-anchor">#</a></h4><p>当我们需要通过浏览器访问java程序时就必须将包含java程序的web工程编译的结果放到服务器上的指定目录下，并启动服务器才行，这个过程我们称之为”部署”</p><h4><span id="zong-jie">总结</span><a href="#zong-jie" class="header-anchor">#</a></h4><p>在实际项目中整合第三方框架，web工程中除了java程序和jsp页面、图片等静态资源外，还包括第三方框架的jar包以及各种各样的配置文件，所有这些资源都必须按照正确的目录部署到服务器上才能够运行。所以综上所述：构建就是以我们编写的java的代码、框架配置文件、国家化等其他资源文件、jsp页面和图片静态资源作为原材料，去生产出一个可以运行的的项目过程。</p><h3><span id="gou-jian-de-guo-cheng">构建的过程</span><a href="#gou-jian-de-guo-cheng" class="header-anchor">#</a></h3><p>①清理：删除以前的编译结果，为重新编译做好准备</p><p>②编译：将java源程序编译为字节码文件</p><p>③测试：针对项目中的关键点进行测试，确保项目在迭代开发过程中关键点的正确性</p><p>④报告：在每次测试后以标准的格式记录和展示测试结果</p><p>⑤打包：在一个包含诸多文件的工程封装为一个压缩文件用于安装或部署，java工程对应jar包，web工程对应war包</p><p>⑥安装：在maven环境下特指将打包的结果–jar包或者war包安装到本地仓库中</p><p>⑦部署：将打包的结果部署到远程仓库或者war包部署到服务器上运行</p><h3><span id="zi-dong-hua-gou-jian">自动化构建</span><a href="#zi-dong-hua-gou-jian" class="header-anchor">#</a></h3><p>综上所述，我们在eclipse中都可以找到对应的操作，只是不太标准，那么既然IDE已经可以进行构建了，我们为什么还要使用maven这样的构建工具呢？，下面我们来看一个小故事：张三在工作中，某天，测试项目中跟他说系统中有一个bug，这个时候，张三需要进入IDE,运行自己的程序、编译、打包、部署到服务器、在进行测试–&gt;确立问题，接下来开始修复bug，修复完毕后，他又要重新开始编译、打包、部署、测试，确认没有问题了，在通知项目组进行测试</p><p>在这个过程中，我们发现了张三的工作大部分花在了“编译、打包、部署、测试”这些固定化的工作上面，而真正需要由“人”的智慧实现的分析问题和编码却只占了很少一部分，我们能否将这些固定的工作交给机器自动完成–&gt;当然可以，这就是自动化构建，此时maven的意义就体现出来了，它可以自动的从构建过的程序起点一直执行到终点。</p><h2><span id="maven-huan-jing-da-jian">Maven环境搭建</span><a href="#maven-huan-jing-da-jian" class="header-anchor">#</a></h2><h3><span id="xia-zai-he-xin-maven-cheng-xu">下载核心maven程序</span><a href="#xia-zai-he-xin-maven-cheng-xu" class="header-anchor">#</a></h3><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523413494.png?imageMogr2/thumbnail/!70p" alt=""></p><h3><span id="jian-ce-java-huan-jing">检测Java环境</span><a href="#jian-ce-java-huan-jing" class="header-anchor">#</a></h3><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523413929.png?imageMogr2/thumbnail/!70p" alt=""></p><h3><span id="pei-zhi-maven-de-huan-jing-bian-liang">配置Maven的环境变量</span><a href="#pei-zhi-maven-de-huan-jing-bian-liang" class="header-anchor">#</a></h3><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523414063.png?imageMogr2/thumbnail/!70p" alt=""></p><h3><span id="yan-zheng-huan-jing-shi-fou-da-jian-cheng-gong">验证环境是否搭建成功</span><a href="#yan-zheng-huan-jing-shi-fou-da-jian-cheng-gong" class="header-anchor">#</a></h3><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1523414230.png?imageMogr2/thumbnail/!70p" alt=""><br>好了，如果看到上图就表示，我们就可以使用maven来构建项目了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#maven-xiang-mu-gou-jian&quot;&gt;Maven项目构建&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#wei-shi-me-yao-shi-yong-maven&quot;&gt;为
      
    
    </summary>
    
      <category term="项目构建" scheme="http://baofengketang.com/categories/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/"/>
    
    
      <category term="maven" scheme="http://baofengketang.com/tags/maven/"/>
    
      <category term="项目构建" scheme="http://baofengketang.com/tags/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Java入门第一讲</title>
    <link href="http://baofengketang.com/2018/04/10/java/java01/"/>
    <id>http://baofengketang.com/2018/04/10/java/java01/</id>
    <published>2018-04-10T05:11:58.000Z</published>
    <updated>2018-05-02T02:55:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="java">Java</span><a href="#java" class="header-anchor">#</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;java&quot;&gt;Java&lt;/span&gt;&lt;a href=&quot;#java&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;
      
    
    </summary>
    
      <category term="Java" scheme="http://baofengketang.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://baofengketang.com/tags/Java/"/>
    
  </entry>
  
</feed>
