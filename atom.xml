<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>靳中</title>
  
  <subtitle>靳中的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://baofengketang.com/"/>
  <updated>2018-07-19T15:40:29.000Z</updated>
  <id>http://baofengketang.com/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义JSP标签</title>
    <link href="http://baofengketang.com/2018/07/09/Servlet/jsptag/"/>
    <id>http://baofengketang.com/2018/07/09/Servlet/jsptag/</id>
    <published>2018-07-09T09:56:34.000Z</published>
    <updated>2018-07-19T15:40:29.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#iteration-tag-jie-kou-xiang-jie">Iteration Tag接口详解</a></li><li><a href="#bian-xie-yi-ge-xun-huan-biao-qian">编写一个循环标签</a><ul><li><a href="#zi-ding-yi-biao-qian-chu-li-lei">自定义标签处理类</a></li><li><a href="#biao-qian-de-miao-shu-wen-jian-tld">标签的描述文件tld</a></li><li><a href="#ye-mian-dai-ma">页面代码</a></li><li><a href="#xian-shi-xiao-guo-ru-xia">显示效果如下</a></li></ul></li><li><a href="#bodytag-jie-kou-xiang-jie">BodyTag接口详解</a></li><li><a href="#xiu-gai-zhu-ti-nei-rong-de-biao-qian">修改主体内容的标签</a><ul><li><a href="#biao-qian-chu-li-lei">标签处理类</a></li><li><a href="#biao-qian-de-miao-shu-wen-jian">标签的描述文件</a></li><li><a href="#ye-mian-duan">页面端</a></li><li><a href="#fang-wen">访问</a></li></ul></li><li><a href="#ji-zhu-jiao-liu">技术交流</a></li></ul><!-- tocstop --></div><h1><span id="iteration-tag-jie-kou-xiang-jie">Iteration Tag接口详解</span><a href="#iteration-tag-jie-kou-xiang-jie" class="header-anchor">#</a></h1><p>IteratorTag接口继承自Tag接口,Iterator接口增加了重复执行标签主体内容的功能</p><p>IteratorTag接口定义了一个doAfterBody()方法，Servlet容器在执行完标签主体内容后，会调用此方法，如果Servlet容器未执行标签主体内容，那么就不会掉用此方法,doAfterBody方法也会返回一个整数值，用来决定程序后续流程它又两个可选值Tag.SKIP_BODY和IterationTag.EVAL_BODY_AGAIN,Tag.SKIP_BODY表示不再执行标签主体内容；IterationTag.EVAL_BODY_AGAIN表示重复执行标签主体</p><p>Servlet容器在处理jsp文件中的这种标签时，会寻找缓存中的相关的IterationTag对象，如果还不存在，就会创建一个IterationTag对象，把它存放在缓存中，以便下次处理自定义标签时重复使用，Servlet容器在得到IterationTag对象后，就会如下的相关方法</p><p>1、Servlet容器调用IterationTag对象的setPageContext()和setParent()方法，把当前jsp页面的PageContext对象及父标签处理对象传递给当前的IterationTag对象，如果不存在父标签，则把父标签处理对象设置为null</p><p>2、Servlet容器调用IterationTag对象的一系列set方法，设置IterationTag对象的属性，如果标签没有属性，则无需此步骤</p><p>3、Servlet容器调用IterationTag对象的doStartTag()方法</p><p>4、如果doStartTag方法返回Tag.SKIP_BODY,就不执行标签体的内容，如果doStartTag()方法返回Tag.EVAL_BODY_INCLUDE,就执行标签主体的内容</p><p>5、如果在步骤4中Servlet容器执行了标签主体的内容，那么就调用doAfterBody方法</p><p>6、如果doAfterBody方法返回Tag.SKIP_BODY，就不会执行标签主体的内容；如果doAfterBody()方法返回IterationTag.EVAL_BODY_AGAIN，就继续重复执行标签主体的内容</p><p>7、Servlet容器调用IterationTag对象的doEndTag()方法</p><p>8、如果doEndTag()方法返回Tag.SKIP_PAGE,就不执行后续的jsp代码，如果doEndTag()方法返回Tag.EVAL_PAGE,就执行标签后续的jsp代码</p><p>由此可以发现IterationTag和Tag对象仅仅增加了步骤5与步骤6</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1531140583.png?imageMogr2/thumbnail/!70p" alt=""></p><p>我们观察了一下发现TagSupport类依然实现了IterationTag接口，那么接下来我们编写一个能够循环的输出helloworld的标签</p><h1><span id="bian-xie-yi-ge-xun-huan-biao-qian">编写一个循环标签</span><a href="#bian-xie-yi-ge-xun-huan-biao-qian" class="header-anchor">#</a></h1><h2><span id="zi-ding-yi-biao-qian-chu-li-lei">自定义标签处理类</span><a href="#zi-ding-yi-biao-qian-chu-li-lei" class="header-anchor">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.org.kingdom.tag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.IterationTag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.Tag;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.TagSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCount</span><span class="params">(<span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.count = count;</span><br><span class="line"><span class="keyword">this</span>.temp=count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line"><span class="comment">//此处必须返回EVAL_BODY_INCLUDE</span></span><br><span class="line"><span class="keyword">return</span> Tag.EVAL_BODY_INCLUDE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doAfterBody</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line">count--;</span><br><span class="line"><span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> IterationTag.EVAL_BODY_AGAIN;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">count=temp;</span><br><span class="line"><span class="keyword">return</span> Tag.SKIP_BODY;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="biao-qian-de-miao-shu-wen-jian-tld">标签的描述文件tld</span><a href="#biao-qian-de-miao-shu-wen-jian-tld" class="header-anchor">#</a></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">version</span>=<span class="string">"2.1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>jinzhong<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uri</span>&gt;</span>http://kingdom.io/jinzhong<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.MyTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>skip_body<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.MyTag2<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>SKIP_PAGE<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.MyTag3<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>morehello<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.HelloTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>count<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--属性是必须的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 支持el或者java表达式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="ye-mian-dai-ma">页面代码</span><a href="#ye-mian-dai-ma" class="header-anchor">#</a></h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;!-- 引入自己定义的标签库 --&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://kingdom.io/jinzhong"</span> prefix=<span class="string">"jinzhong"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;jinzhong:morehello count="5"&gt;helloworld&lt;/jinzhong:morehello&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2><span id="xian-shi-xiao-guo-ru-xia">显示效果如下</span><a href="#xian-shi-xiao-guo-ru-xia" class="header-anchor">#</a></h2><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1531758171.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="bodytag-jie-kou-xiang-jie">BodyTag接口详解</span><a href="#bodytag-jie-kou-xiang-jie" class="header-anchor">#</a></h1><p>BodyTag接口继承自IteratorTag接口，增加了直接访问和操作标签主体内容的功能，BodyTag接口中定义了2个方法</p><p>setBodyContent(BodyContent bc):Servlet容器通过此方法向BodyTag对象传递一个用于缓存标签主体内容的执行结果的BodyContent对象</p><p>doInitBody():当Servlet容器调用完setContentBody()方法后，在第一次执行标签主体之前，先调用此方法，该方法用于为执行标签主体做初始化工作</p><p>只要符合以下条件之一，setBodyContent和doInitBody就不会被Servlet容器执行</p><blockquote><p>1.标签主体为空</p><p>2.doStartTag方法的返回值为Tag.SKIP_BODY或者Tag.EVAL_BODY_INCLUDE</p></blockquote><p>只有同时满足以下条件，Servlet容器才会调用setBodyContent和doInitBody方法</p><blockquote><p>1.标签体不为空</p><p>2.doStartTag方法的返回值为BodyTag.EVAL_BODY_BUFFERED</p></blockquote><p>其中BodyTag.EVAL_BODY_BUFFERED是在BodyTag接口中定义的int类型的常量，它可以作为doStartTag()方法的返回值，提示Servlet容器调用BodyTag对象的SetBodyContent方法和doInitBody()方法</p><p>Servlet容器在处理jsp文件中的这种标签时，会寻找缓存中相关的BodyTag对象，如果不存在，就创建一个BodyTag对象，把它放在缓存中，以便下次处理自定义标签时重复使用，Servlet容器在得到了BodyTag对象后，会以下流程执行相关方法</p><p>1.Servlet容器调用BodyTag对象的setPageContext()和setParent()方法，把当前jsp页面的PageContext对象及父标签处理对象传递给当前的BodyTag对象，如果不存在父标签,则把父标签处理对象设置为null</p><p>2.Servlet容器调用BodyTag对象的一系列set方法，设置BodyTag对象的属性，如果标签没有属性，则无需这个步骤</p><p>3.Servlet容器调用BodyTag对象的doStartTag()方法</p><p>4.如果doStartTag()方法返回 Tag.SKIP_BODY,就不执行标签体主体的内容；如果doStartTag()方法返回Tag.EVAL_BODY_INCLUDE，就执行标签主体的内容；如果doStartTag()方法返回BODY.EVAL_BODY_BUFFERED，就先调用setBodyContent()和initBody()方法，在执行标签主体的内容</p><p>5.如果步骤4中执行了标签主体的内容，那么就调用doAfterBody方法</p><p>6、如果doAfterBody方法返回Tag.SKIP_BODY，就不会执行标签主体的内容；如果doAfterBody()方法返回IterationTag.EVAL_BODY_AGAIN，就继续重复执行标签主体的内容</p><p>7、Servlet容器调用BodyTag对象的doEndTag()方法</p><p>8、如果doEndTag()方法返回Tag.SKIP_PAGE,就不执行后续的jsp代码，如果doEndTag()方法返回Tag.EVAL_PAGE,就执行标签后续的jsp代码</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1531177701.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="xiu-gai-zhu-ti-nei-rong-de-biao-qian">修改主体内容的标签</span><a href="#xiu-gai-zhu-ti-nei-rong-de-biao-qian" class="header-anchor">#</a></h1><h2><span id="biao-qian-chu-li-lei">标签处理类</span><a href="#biao-qian-chu-li-lei" class="header-anchor">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.org.kingdom.tag;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.JspException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.jsp.tagext.BodyTagSupport;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateTagContent</span> <span class="keyword">extends</span> <span class="title">BodyTagSupport</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line"><span class="comment">//必须返回EVAL_BODY_BUFFERED</span></span><br><span class="line"><span class="keyword">return</span> BodyTagSupport.EVAL_BODY_BUFFERED;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doEndTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pageContext.getOut().print(<span class="keyword">this</span>.getBodyContent().getString().toUpperCase());</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">super</span>.doEndTag();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="biao-qian-de-miao-shu-wen-jian">标签的描述文件</span><a href="#biao-qian-de-miao-shu-wen-jian" class="header-anchor">#</a></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8" ?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">      http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">version</span>=<span class="string">"2.1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>jinzhong<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uri</span>&gt;</span>http://kingdom.io/jinzhong<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.MyTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>empty<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>skip_body<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.MyTag2<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>SKIP_PAGE<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.MyTag3<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>morehello<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.HelloTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>count<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--属性是必须的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span><span class="comment">&lt;!-- 支持el或者java表达式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>updateContent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>cn.org.kingdom.tag.UpdateTagContent<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="ye-mian-duan">页面端</span><a href="#ye-mian-duan" class="header-anchor">#</a></h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;!-- 引入自己定义的标签库 --&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">"http://kingdom.io/jinzhong"</span> prefix=<span class="string">"jinzhong"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;jinzhong:updateContent&gt;helloworld&lt;/jinzhong:updateContent&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2><span id="fang-wen">访问</span><a href="#fang-wen" class="header-anchor">#</a></h2><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1531779002.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="ji-zhu-jiao-liu">技术交流</span><a href="#ji-zhu-jiao-liu" class="header-anchor">#</a></h1><p>欢迎添加我的微信号进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1531748862.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#iteration-tag-jie-kou-xiang-jie&quot;&gt;Iteration Tag接口详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#bian-xie-yi-ge-
      
    
    </summary>
    
      <category term="自定义jsp标签" scheme="http://baofengketang.com/categories/%E8%87%AA%E5%AE%9A%E4%B9%89jsp%E6%A0%87%E7%AD%BE/"/>
    
    
      <category term="自定义jsp标签" scheme="http://baofengketang.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89jsp%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>灵活的JavaScript语言</title>
    <link href="http://baofengketang.com/2018/06/29/javascript/js02/"/>
    <id>http://baofengketang.com/2018/06/29/javascript/js02/</id>
    <published>2018-06-29T04:50:53.000Z</published>
    <updated>2018-06-29T05:14:41.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#js-zhong-ding-yi-han-shu-de-zui-yuan-shi-de-fang-shi">js中定义函数的最原始的方式</a></li><li><a href="#yong-bian-liang-shou-bian-bian-liang">用变量收编变量</a></li></ul><!-- tocstop --></div><h1><span id="js-zhong-ding-yi-han-shu-de-zui-yuan-shi-de-fang-shi">js中定义函数的最原始的方式</span><a href="#js-zhong-ding-yi-han-shu-de-zui-yuan-shi-de-fang-shi" class="header-anchor">#</a></h1><p>在开始学习javascript的时候，我们通过定义函数的往往是这样的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">//验证姓名</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkEmail</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">//验证电子邮箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这样的方式，实际上就是这样的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> checkName=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="comment">//验证姓名</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> checkEmail=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//验证电子邮箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么问题来了，这样的代码定义了太多的全局变量，在开发中，我们不能只考虑自己，也要考虑不影响到别人，如果别人也定义了一个和你同样的方法就有可能将原来的方法覆盖掉</p><h1><span id="yong-bian-liang-shou-bian-bian-liang">用变量收编变量</span><a href="#yong-bian-liang-shou-bian-bian-liang" class="header-anchor">#</a></h1><p>我们知道对于变量而言，它有属性和方法，而如果我们要访问它的属性或者方法时，可以通过点语法向下遍历查询得到，我们可以创建一个检测对象，然后把我们的方法放在里面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> checkObject=&#123;</span><br><span class="line">    checkName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"验证姓名"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    checkEmail:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"验证邮箱"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">checkObject.checkEmail();</span><br><span class="line">checkObject.checkName();</span><br></pre></td></tr></table></figure><p>现在我们调用方法只需要在方法名称上面加上一个对象的名称即可调用，好了，那么既然我们可以通过点语法来使用方法，我们是不是也可以换一种方式来创建呢</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> CheckObj = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">CheckObj.checkName=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"检测用户"</span>);</span><br><span class="line">&#125;;</span><br><span class="line">CheckObj.checkEmail=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"检测邮箱"</span>)</span><br><span class="line">&#125;;</span><br><span class="line">CheckObj.checkName();</span><br><span class="line">CheckObj.checkEmail();</span><br></pre></td></tr></table></figure><p>使用方法和前面是一样的，但是又出现了一个问题，这个对象不能够复制一份或者说这个对象类在用new关键字创建新的对象时，新创建的对象是不能继承这些方法的，如果我们想很简单的复制一下，我们可以采用如下的做法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#js-zhong-ding-yi-han-shu-de-zui-yuan-shi-de-fang-shi&quot;&gt;js中定义函数的最原始的方式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://baofengketang.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://baofengketang.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式</title>
    <link href="http://baofengketang.com/2018/06/27/javascript/reg_02/"/>
    <id>http://baofengketang.com/2018/06/27/javascript/reg_02/</id>
    <published>2018-06-27T14:23:26.000Z</published>
    <updated>2018-06-27T15:22:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="he-wei-zheng-ze-biao-da-shi">何为正则表达式</span><a href="#he-wei-zheng-ze-biao-da-shi" class="header-anchor">#</a></h1><p>在中文语境里，「正则」两个字有点让人发怵，仿佛高深数学或物理中的「正则化」和「归一化」，抽象而难懂。其实放到英文里，它是regular expression，而regular有「规律、规范、整齐、合格、正规」等意味，「正则」只是其中一种翻译。不把它翻译成一个词组，而翻译成一句话，大致是：表达规范和规则的句子。这里的规范和规则，指的是一个字符串的形式规则。至于JavaScript里的 RegExp 构造函数，是Regular Expression的前三个字母缩写。</p><h1><span id="zheng-ze-biao-da-shi-de-gui-ze">正则表达式的规则</span><a href="#zheng-ze-biao-da-shi-de-gui-ze" class="header-anchor">#</a></h1><p>在JavaScript里，正则表达式有两个构造方式，一个是通过RegExp这个构造函数创建实例，另一个是正则表达式字面量写法。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> regexp1 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'hello regular expression'</span>);</span></span><br><span class="line"><span class="javascript">       <span class="keyword">var</span> regexp2 = <span class="regexp">/hello regular expression/</span>;</span></span><br><span class="line"><span class="javascript">       <span class="comment">// test 方法，测试给定的字符串是否符合正则表达式所描述的字符串格式</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(regexp1.test(<span class="string">'hello regular expression'</span>));<span class="comment">// -&gt; true</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(regexp1.test(<span class="string">'hello word'</span>)); <span class="comment">// -&gt; false</span></span></span><br><span class="line"><span class="undefined">       /*</span></span><br><span class="line"><span class="undefined">           exec方法，是execute这个单词的缩写，</span></span><br><span class="line"><span class="undefined">           返回给定的字符串中符合正则表达式所描述的字符串格式的部分</span></span><br><span class="line"><span class="undefined">       */</span></span><br><span class="line"><span class="javascript">       <span class="comment">//返回hello regular expression</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(regexp2.exec(<span class="string">'hello regular expression'</span>));</span></span><br><span class="line"><span class="javascript">       <span class="comment">//只返回'hello regular expression'，其它部分不匹配</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(regexp2.exec(<span class="string">'hello regular expression, more words'</span>));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1><span id="zheng-ze-biao-da-shi-zhong-de-yuan-zi-fu">正则表达式中的元字符</span><a href="#zheng-ze-biao-da-shi-zhong-de-yuan-zi-fu" class="header-anchor">#</a></h1><p>元字符听起来也很抽象，实际上就是描述字符的字符，比如，数字，字母，空格，换行等。列举几个元字符。元字符大多以反斜杠开头\，因为前面展示的正则表达式字面量写法里，用的是两个斜杠包裹，所以得用反斜杠或其他标识符。</p><table><thead><tr><th>元字符</th><th>含义</th></tr></thead><tbody><tr><td>\d</td><td>匹配0-9单个数字；d 是 digit 这个单词的缩写，它的中文意思就是「数字」</td></tr><tr><td>\w</td><td>匹配单个单词字符，w 是 word 的缩写，就是字母 a-z，数字 0-9，不包括逗号、句号、加减乘除号、括号等</td></tr><tr><td>\s</td><td>匹配单个空白字符，s 是 space 的缩写，就是空白的意思。</td></tr><tr><td>\n</td><td>匹配换行符，n 是 newline 的缩写，中文就是换行</td></tr><tr><td>\r</td><td>匹配回车符，r 就是 return 的缩写，回车在这里就是它的中文意思</td></tr><tr><td>\t</td><td>匹配制表符，就是 tab 键打出来的一串用以缩进的空白字符，tab 是 tabel 的缩写，table 就有表格和制表的意思。</td></tr><tr><td>\b</td><td>匹配单词的开头和结尾也就是单词边界，b 是 boundary 的缩写，中文就是边界的意思</td></tr></tbody></table><p>如你所见，所谓的元字符，就是反斜杠加单词缩写，来表征某个字符类型。这就是它们的设计原则。</p><h1><span id="zheng-ze-biao-da-shi-li-de-liang-ci">正则表达式里的量词</span><a href="#zheng-ze-biao-da-shi-li-de-liang-ci" class="header-anchor">#</a></h1><p>元字符大多只能表示单个字符的类型。我们还需要量词，以表示「有，有0到多个，有至少一个，有n个以上，有n到m个，以某个字符开头，以某个字符结尾等,这时你可以停下来，稍作思考，让你来设计，你会设计成什么样？</p><table><thead><tr><th>量词</th><th>含义</th></tr></thead><tbody><tr><td>n+</td><td>至少1个n类型的字符</td></tr><tr><td>n*</td><td>0到多个n类型的字符</td></tr><tr><td>n?</td><td>0到1个n类型的字符</td></tr><tr><td>n{x}</td><td>x个n类型的字符</td></tr><tr><td>n{x,y}</td><td>x到y个n类型的字符</td></tr><tr><td>n{x,}</td><td>至少x个n类型的字符</td></tr><tr><td>n$</td><td>以n类型的字符结尾</td></tr><tr><td>^n</td><td>以n类型的字符开头</td></tr></tbody></table><p>如你所见，大致是一些类似数学里表达区间的意思</p><h1><span id="zheng-ze-biao-da-shi-li-de-biao-da-shi">正则表达式里的表达式</span><a href="#zheng-ze-biao-da-shi-li-de-biao-da-shi" class="header-anchor">#</a></h1><p>你可以戏谑地说它是「元表达式」。其实，它们也是描述范围的，只是不是所有范围都是关于某个字符类型n 的数量和出现位置，有些范围跟多个字符组成的集合有关。比如，在这几个字符类型之内，在这几个字符类型之外的，便利地表示 26 个字母，便利地表示 10 个数字字符。</p><p>Javascript的设计如下：</p><table><thead><tr><th>表达式</th><th>含义</th></tr></thead><tbody><tr><td>[abc]</td><td>匹配单个字符，它是abc的集合的元素</td></tr><tr><td>[^abc]</td><td>匹配单个字符，它不是abc的集合的元素</td></tr><tr><td>[0-9]</td><td>匹配单个字符，它是从0到9这个集合的元素</td></tr><tr><td>[a-z]</td><td>匹配单个字符，它是26 字母这个集合的元素</td></tr><tr><td>(red\</td><td>blue\</td><td>green)</td><td>匹配多个连续字符，它是 red blue green 这三个词的集合的元素</td></tr></tbody></table><h1><span id="an-li-si-kao">案例思考</span><a href="#an-li-si-kao" class="header-anchor">#</a></h1><p>匹配一个电话号码，形式如 020-88813243。</p><p>简单版本，(开头)三个数字+一个横杠+八个数字（结尾），就是/^\d{3}-\d{8}$/。</p><p>需求变化，只匹配 020 开头的电话号码，就是/^020-\d{8}$/。</p><p>需求变化，支持分机，分机为 5 个数字，加后缀，就是/^020-\d{8}-\d{5}$/。</p><p>需求变化，电话号码可以是7个，用区间量词，就是/^020-\d{7,8}-\d{5}$/。</p><p>需求变化，有可能没有分机，用区间量词，中括号包裹住分机为一组，后面加个问号，表示0或多个，就是/^020-\d{7,8}(-\d{5})?$/。</p><p>需求变化，区隔符可能是横杠，也可能是星号或空格，用集合表达式，就是/^020[-<em>\s]\d{7,8}([-</em>\s]\d{5})?$/</p><h1><span id="jie-yu">结语</span><a href="#jie-yu" class="header-anchor">#</a></h1><p>在我们理解了正则表达式的概念和设计思路之后，剩下的，就是查文档和寻找模式的工作了。实在有难题，网上也可以搜索到现成的坚实的正则表达式可用。这里面的门道还是很多的，在此我们入个门，打个基础即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;he-wei-zheng-ze-biao-da-shi&quot;&gt;何为正则表达式&lt;/span&gt;&lt;a href=&quot;#he-wei-zheng-ze-biao-da-shi&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;在中文语境里，「正
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://baofengketang.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://baofengketang.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>css学习笔记</title>
    <link href="http://baofengketang.com/2018/06/27/css/css01/"/>
    <id>http://baofengketang.com/2018/06/27/css/css01/</id>
    <published>2018-06-27T14:05:23.000Z</published>
    <updated>2018-06-27T14:05:23.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#css">css</a><ul><li><a href="#gai-shu">概述</a></li><li><a href="#css-zheng-ti-gan-zhi">css整体感知</a></li><li><a href="#chang-jian-shu-xing-jie-shao">常见属性介绍</a><ul><li><a href="#wen-ben-shu-xing">文本属性</a></li><li><a href="#bei-jing-shu-xing">背景属性</a></li></ul></li><li><a href="#ji-chu-xuan-ze-qi">基础选择器</a><ul><li><a href="#biao-qian-xuan-ze-qi">标签选择器</a></li><li><a href="#id-xuan-ze-qi">ID选择器</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="css">css</span><a href="#css" class="header-anchor">#</a></h1><h2><span id="gai-shu">概述</span><a href="#gai-shu" class="header-anchor">#</a></h2><p>现在的互联网的前端三层</p><p>html:超文本标记语言，从语义的角度来描述页面结构</p><p>css:层叠样式表，从审美的角度负责页面样式</p><p>js:JavaScript，从交互的角度来描述页面的行为</p><h2><span id="css-zheng-ti-gan-zhi">css整体感知</span><a href="#css-zheng-ti-gan-zhi" class="header-anchor">#</a></h2><p>css是层叠样式表cascading style sheet 层叠样式表的简写，css最新的版本是3，目前主要讲解的是2，因为css3和css2不矛盾，必须先学习2然后再学习3</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>01-css基本认识<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p&#123;</span></span><br><span class="line"><span class="undefined">            color:blue;</span></span><br><span class="line"><span class="undefined">            font-size:30px;</span></span><br><span class="line"><span class="undefined">            text-decoration: underline;</span></span><br><span class="line"><span class="undefined">            font-weight: bold;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">            font-style: italic;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们写css的地方就是style标签，就是样式的意思，写在head里面，在后面的内容中，我们知道css也可以写在一个单独的文件中，这里我们为了讲解我们先在style标签里面</p><p>选择器的语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">选择器｛</span><br><span class="line">k:v;</span><br><span class="line">k:v;</span><br><span class="line">..</span><br><span class="line">｝</span><br></pre></td></tr></table></figure><p>css对换行不敏感，对空格也不敏感，但是一定要有标准的语法，冒号，分号不能省略</p><h2><span id="chang-jian-shu-xing-jie-shao">常见属性介绍</span><a href="#chang-jian-shu-xing-jie-shao" class="header-anchor">#</a></h2><h3><span id="wen-ben-shu-xing">文本属性</span><a href="#wen-ben-shu-xing" class="header-anchor">#</a></h3><p>color:字体颜色</p><p>font-family:什么字体</p><p>font-weight:字体是否加粗</p><p>font-size:字体大小(单位像素)</p><p>font-style:italic|normal</p><p>text-decoration:underline|none</p><h3><span id="bei-jing-shu-xing">背景属性</span><a href="#bei-jing-shu-xing" class="header-anchor">#</a></h3><p>background-color:背景颜色</p><p>background-image:url(路径):背景图</p><p>background-position:偏移量</p><p>background-repeat:平铺方式（no-repeat|repeat-x|repeat-y|repeat）</p><h2><span id="ji-chu-xuan-ze-qi">基础选择器</span><a href="#ji-chu-xuan-ze-qi" class="header-anchor">#</a></h2><h3><span id="biao-qian-xuan-ze-qi">标签选择器</span><a href="#biao-qian-xuan-ze-qi" class="header-anchor">#</a></h3><p>就是以标签的名字命名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>01-css基本认识<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        span&#123;</span></span><br><span class="line"><span class="undefined">            color:red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><p>所有的标签，都可以是选择器，比如ul,li,label,dt,input等</p><p>无论这个标签藏的多深，一定能够被选择上</p><p>标签选择器，选择的是页面上所有的这种类型的标签，所以经常描述“共性”,无法描述某个元素“个性”</p></blockquote><h3><span id="id-xuan-ze-qi">ID选择器</span><a href="#id-xuan-ze-qi" class="header-anchor">#</a></h3><p>ID选择器的选择符为“＃”，对于任何的html标签都可以有id属性，表示这个标签的名字，这个标签的名字可以任取的，但是</p><p>只能有字母，数字，下划线</p><p>必须以字母开头</p><p>不能和标签同名，比如id不能叫body，img,a</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>01-css基本认识<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        span&#123;</span></span><br><span class="line"><span class="undefined">            color:red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        #divContainer&#123;</span></span><br><span class="line"><span class="undefined">            width:300px;</span></span><br><span class="line"><span class="undefined">            height:300px;</span></span><br><span class="line"><span class="undefined">            background-color: azure;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"divContainer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在html页面中，不能出现相同的id，哪怕她们不是一个类型，比如页面中有一个id为hello的p元素，一个id为hello的div，都是非法的～</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#css&quot;&gt;css&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#gai-shu&quot;&gt;概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#css-zheng-ti-gan-zhi&quot;&gt;c
      
    
    </summary>
    
      <category term="css" scheme="http://baofengketang.com/categories/css/"/>
    
    
      <category term="css" scheme="http://baofengketang.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript面向对象</title>
    <link href="http://baofengketang.com/2018/06/27/javascript/js01/"/>
    <id>http://baofengketang.com/2018/06/27/javascript/js01/</id>
    <published>2018-06-27T13:54:15.000Z</published>
    <updated>2018-06-27T13:54:15.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#javascript-mian-xiang-dui-xiang">JavaScript面向对象</a><ul><li><a href="#javascript-zhong-chuang-jian-dui-xiang-de-fang-shi">JavaScript中创建对象的方式</a><ul><li><a href="#pu-tong-chuang-jian-fang-shi">普通创建方式</a></li><li><a href="#tong-guo-json-ge-shi-chuang-jian-dui-xiang">通过json格式创建对象</a></li><li><a href="#gong-han-fang-fa-chuang-jian-dui-xiang">工厂方法创建对象</a></li><li><a href="#gou-zao-han-shu-chuang-jian-de-dui-xiang">构造函数创建的对象</a></li><li><a href="#cai-yong-yuan-xing-chuang-jian-dui-xiang">采用原型创建对象</a></li></ul></li><li><a href="#javascript-zhong-de-ji-cheng-ji-zhi">JavaScript中的继承机制</a><ul><li><a href="#dui-xiang-mou-chong">对象冒充</a></li><li><a href="#apply-he-call-fang-fa">apply和call方法</a></li><li><a href="#yuan-xing-hun-he-fang-shi">原型混合方式</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="javascript-mian-xiang-dui-xiang">JavaScript面向对象</span><a href="#javascript-mian-xiang-dui-xiang" class="header-anchor">#</a></h1><h2><span id="javascript-zhong-chuang-jian-dui-xiang-de-fang-shi">JavaScript中创建对象的方式</span><a href="#javascript-zhong-chuang-jian-dui-xiang-de-fang-shi" class="header-anchor">#</a></h2><h3><span id="pu-tong-chuang-jian-fang-shi">普通创建方式</span><a href="#pu-tong-chuang-jian-fang-shi" class="header-anchor">#</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        var obj = new Object();</span></span><br><span class="line"><span class="undefined">        //动态添加属性</span></span><br><span class="line"><span class="undefined">        obj.name="张三";</span></span><br><span class="line"><span class="undefined">        obj.age = 15 ;</span></span><br><span class="line"><span class="undefined">        obj["addr"]="铜锣湾";</span></span><br><span class="line"><span class="undefined">        obj.sayHello=function()&#123;</span></span><br><span class="line"><span class="undefined">            console.log("姓名："+this.name+",年龄"+this.age+",地址:"+this.addr);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        obj.sayHello();</span></span><br><span class="line"><span class="undefined">        //动态删除属性</span></span><br><span class="line"><span class="undefined">        delete obj.addr;</span></span><br><span class="line"><span class="undefined">        obj.sayHello();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在js中，属性可以动态添加，也可以动态删除</strong></p><h3><span id="tong-guo-json-ge-shi-chuang-jian-dui-xiang">通过json格式创建对象</span><a href="#tong-guo-json-ge-shi-chuang-jian-dui-xiang" class="header-anchor">#</a></h3><p><strong>json的格式的表现形式</strong></p><p><strong>表现形式1</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180627/mfk7cmb9Jb.png?imageslim" alt="mark"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        var obj=&#123;"name":"zhangsan","age":15,"addr":"南京"&#125;;</span></span><br><span class="line"><span class="undefined">        console.log(obj.name,obj.age,obj.addr);</span></span><br><span class="line"><span class="undefined">        console.log(typeof obj);</span></span><br><span class="line"><span class="undefined"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>表现形式2</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180627/alKGj7Ac23.png?imageslim" alt="mark"></p><p>注意：value的取值可以是以下内容</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180627/3eg7j5aL7a.png?imageslim" alt="mark"></p><p>对于以上的结构，那么json的变种就非常丰富</p><p>案例1:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=[<span class="string">"张三"</span>,<span class="number">15</span>,<span class="literal">true</span>,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">"fatherName"</span>:<span class="string">"张无忌"</span>,</span><br><span class="line">                    <span class="string">"motherName"</span>:<span class="string">"无忌张"</span>, </span><br><span class="line">                    children:[<span class="string">"张飞"</span>,<span class="string">"张亮"</span>,<span class="string">"张靓颖"</span>]</span><br><span class="line">                &#125;</span><br><span class="line">        ];</span><br><span class="line">alert(<span class="keyword">typeof</span> obj)</span><br><span class="line">alert(obj[<span class="number">0</span>]);</span><br><span class="line">alert(obj[<span class="number">3</span>][<span class="string">"children"</span>])</span><br></pre></td></tr></table></figure><p>案例2：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> obj3= &#123;</span><br><span class="line">            <span class="string">"name"</span>:<span class="string">"zhangsan"</span>,</span><br><span class="line">            <span class="string">"age"</span>:<span class="number">15</span>,</span><br><span class="line">            children:[</span><br><span class="line">                &#123;</span><br><span class="line">                  name:<span class="string">"张一"</span>,</span><br><span class="line">                  age:<span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name:<span class="string">"lisi"</span>,</span><br><span class="line">                    age:<span class="number">10</span></span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    name:<span class="string">"wangwu"</span>,</span><br><span class="line">                    age:<span class="number">12</span></span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            sayInfo:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age);</span><br><span class="line">            &#125;</span><br><span class="line"> &#125;;</span><br><span class="line">obj3.sayInfo();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ;i&lt;obj3.children.length;i++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(obj3.children[i].name,obj3.children[i].age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="gong-han-fang-fa-chuang-jian-dui-xiang">工厂方法创建对象</span><a href="#gong-han-fang-fa-chuang-jian-dui-xiang" class="header-anchor">#</a></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createObject</span>(<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">            obj.name = name ;</span><br><span class="line">            obj.age = age</span><br><span class="line">            obj.sayHello=sayHello;</span><br><span class="line">            <span class="keyword">return</span> obj ;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">var</span> sayHello=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = createObject(<span class="string">"张三"</span>,<span class="number">12</span>);</span><br><span class="line">obj1.sayHello();</span><br><span class="line"><span class="keyword">var</span> obj2 = createObject(<span class="string">"李四"</span>,<span class="number">20</span>);</span><br><span class="line">obj2.sayHello();</span><br></pre></td></tr></table></figure><h3><span id="gou-zao-han-shu-chuang-jian-de-dui-xiang">构造函数创建的对象</span><a href="#gou-zao-han-shu-chuang-jian-de-dui-xiang" class="header-anchor">#</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">this</span>.name = name ;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">this</span>.age  =age ;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">this</span>.sayHello= sayHello;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age)</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="comment">//隐藏了一个创建的对象的过程</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> p1 =<span class="keyword">new</span> Person(<span class="string">"张三"</span>,<span class="number">12</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person(<span class="string">"李四"</span>,<span class="number">15</span>);</span></span><br><span class="line"><span class="undefined">p1.sayHello();</span></span><br><span class="line"><span class="undefined">p2.sayHello();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="cai-yong-yuan-xing-chuang-jian-dui-xiang">采用原型创建对象</span><a href="#cai-yong-yuan-xing-chuang-jian-dui-xiang" class="header-anchor">#</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.name = name ;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.age = age ;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        Person.prototype.sayHello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> p1  = <span class="keyword">new</span> Person(<span class="string">"张三"</span>,<span class="number">15</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> p2  = <span class="keyword">new</span> Person(<span class="string">"lisi"</span>,<span class="number">16</span>);</span></span><br><span class="line"><span class="undefined">        p1.sayHello();</span></span><br><span class="line"><span class="undefined">        p2.sayHello();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用原型+构造函数方式来定义对象，对象之间的属性互不干扰，各个对象间共享同一个方法 </p><p>优化上面的案例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.name = name ;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.age = age ;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//第一次创建对象的，通过参数给原型上增加一个共享的方法</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(<span class="keyword">typeof</span> Person.prototype.flag===<span class="string">"undefined"</span>) &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">"invoked..."</span>);</span></span><br><span class="line"><span class="javascript">                Person.prototype.sayInfo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age)</span></span><br><span class="line"><span class="undefined">                &#125;;</span></span><br><span class="line"><span class="javascript">                Person.prototype.flag = <span class="literal">true</span> ;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span>  p1 = <span class="keyword">new</span> Person(<span class="string">"zhangsan"</span>,<span class="number">12</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span>  p2 = <span class="keyword">new</span> Person(<span class="string">"lisi"</span>,<span class="number">15</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        p1.sayInfo();</span></span><br><span class="line"><span class="undefined">        p2.sayInfo()</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="javascript-zhong-de-ji-cheng-ji-zhi">JavaScript中的继承机制</span><a href="#javascript-zhong-de-ji-cheng-ji-zhi" class="header-anchor">#</a></h2><h3><span id="dui-xiang-mou-chong">对象冒充</span><a href="#dui-xiang-mou-chong" class="header-anchor">#</a></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span>(<span class="params">name,age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name= name ;</span><br><span class="line">  <span class="keyword">this</span>.age = age ;</span><br><span class="line">  <span class="keyword">this</span>.sayInfo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age) ;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">name,age,addr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.method=Parent;</span><br><span class="line">  <span class="keyword">this</span>.method(name,age);</span><br><span class="line">  <span class="keyword">this</span>.addr = addr ;</span><br><span class="line">  <span class="comment">//将自定义的method方法删除掉</span></span><br><span class="line">  <span class="keyword">delete</span> <span class="keyword">this</span>.method;</span><br><span class="line">  <span class="keyword">this</span>.sayInfo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age,<span class="keyword">this</span>.addr) ;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="apply-he-call-fang-fa">apply和call方法</span><a href="#apply-he-call-fang-fa" class="header-anchor">#</a></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Parent</span>(<span class="params">name,age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name ;</span><br><span class="line">  <span class="keyword">this</span>.age = age ;</span><br><span class="line">  <span class="keyword">this</span>.sayInfo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">name,age,addr</span>) </span>&#123;</span><br><span class="line">  <span class="comment">//call接受的离散的值,apply的参数为数组</span></span><br><span class="line">  <span class="comment">//Parent.call(this,name,age);</span></span><br><span class="line">  Parent.apply(<span class="keyword">this</span>,<span class="keyword">new</span> <span class="built_in">Array</span>(name,age));</span><br><span class="line">  <span class="keyword">this</span>.addr = addr ;</span><br><span class="line">  <span class="keyword">this</span>.sayInfo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age,<span class="keyword">this</span>.addr);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> Son(<span class="string">"张三"</span>,<span class="number">15</span>,<span class="string">"北京"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(s)</span><br><span class="line">s.sayInfo();</span><br></pre></td></tr></table></figure><h3><span id="yuan-xing-hun-he-fang-shi">原型混合方式</span><a href="#yuan-xing-hun-he-fang-shi" class="header-anchor">#</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//apply|call+原型混合方式</span></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Parent</span>(<span class="params">name,age</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.name = name ;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.age = age ;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        Parent.prototype.sayInfo=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,<span class="keyword">this</span>.age);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">Son</span>(<span class="params">name,age,addr</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//只能做属性复制</span></span></span><br><span class="line"><span class="javascript">            Parent.apply(<span class="keyword">this</span>,<span class="keyword">new</span> <span class="built_in">Array</span>(name,age));</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.addr = addr ;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//拿原型中方法</span></span></span><br><span class="line"><span class="javascript">        Son.prototype=<span class="keyword">new</span> Parent();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> s = <span class="keyword">new</span> Son(<span class="string">"zhangsan"</span>,<span class="number">12</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(s)</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#javascript-mian-xiang-dui-xiang&quot;&gt;JavaScript面向对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#javascript-zhong-ch
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://baofengketang.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://baofengketang.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式</title>
    <link href="http://baofengketang.com/2018/06/26/javascript/reg_01/"/>
    <id>http://baofengketang.com/2018/06/26/javascript/reg_01/</id>
    <published>2018-06-26T11:29:13.000Z</published>
    <updated>2018-06-26T14:13:37.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#fu-xi-string-de-ji-ge-fang-fa">复习String的几个方法</a><ul><li><a href="#string-dui-xiang-de-search-fang-fa">String对象的search方法</a></li><li><a href="#string-dui-xiang-substring-fang-fa">String对象-substring方法</a></li><li><a href="#string-charat">String-charAt()</a></li><li><a href="#string-split">String-split</a></li></ul></li><li><a href="#wei-shi-me-yao-shi-yong-zheng-ze-biao-da-shi-ni">为什么要使用正则表达式呢</a><ul><li><a href="#tong-guo-chuan-tong-de-fang-shi-wan-cheng">通过传统的方式完成</a></li><li><a href="#tong-guo-zheng-ze-biao-da-shi-wan-cheng">通过正则表达式完成</a></li></ul></li><li><a href="#shi-me-shi-zheng-ze-biao-da-shi">什么是正则表达式</a></li><li><a href="#string-lei-dui-zheng-ze-biao-da-shi-de-zhi-chi">String类对正则表达式的支持</a><ul><li><a href="#string-search-fang-fa">String-search方法</a></li><li><a href="#string-match-fang-fa">String-match方法</a></li><li><a href="#string-replace-fang-fa">String-replace方法</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="fu-xi-string-de-ji-ge-fang-fa">复习String的几个方法</span><a href="#fu-xi-string-de-ji-ge-fang-fa" class="header-anchor">#</a></h1><h2><span id="string-dui-xiang-de-search-fang-fa">String对象的search方法</span><a href="#string-dui-xiang-de-search-fang-fa" class="header-anchor">#</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">'abcdef'</span>;</span><br><span class="line">alert(str.search(<span class="string">'g'</span>));</span><br></pre></td></tr></table></figure><h2><span id="string-dui-xiang-substring-fang-fa">String对象-substring方法</span><a href="#string-dui-xiang-substring-fang-fa" class="header-anchor">#</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">'abcdef'</span>;</span><br><span class="line"><span class="comment">//alert(str.substring(1, 4));</span></span><br><span class="line">alert(str.substring(<span class="number">1</span>));</span><br></pre></td></tr></table></figure><h2><span id="string-charat">String-charAt()</span><a href="#string-charat" class="header-anchor">#</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">'abcdef'</span>;</span><br><span class="line">alert(str.charAt(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><h2><span id="string-split">String-split</span><a href="#string-split" class="header-anchor">#</a></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">'abc-12-u-qw'</span>;</span><br><span class="line"><span class="keyword">var</span> arr=str.split(<span class="string">'-'</span>);</span><br><span class="line">alert(arr[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h1><span id="wei-shi-me-yao-shi-yong-zheng-ze-biao-da-shi-ni">为什么要使用正则表达式呢</span><a href="#wei-shi-me-yao-shi-yong-zheng-ze-biao-da-shi-ni" class="header-anchor">#</a></h1><p>先通过一个案例：找出字符串中的所有的数字</p><h2><span id="tong-guo-chuan-tong-de-fang-shi-wan-cheng">通过传统的方式完成</span><a href="#tong-guo-chuan-tong-de-fang-shi-wan-cheng" class="header-anchor">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str  =<span class="string">"ba14ac6d899a12233"</span>;<span class="comment">//结果为:14,6,899,12233</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> array = [];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> buffer = <span class="string">""</span> ;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ;i&lt;str.length;i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(str.charAt(i)&gt;=<span class="string">'0'</span> &amp;&amp; str.charAt(i)&lt;=<span class="string">'9'</span>)&#123;</span></span><br><span class="line"><span class="undefined">                buffer =buffer+str.charAt(i);</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(buffer) &#123;</span></span><br><span class="line"><span class="undefined">                    array.push(buffer);</span></span><br><span class="line"><span class="javascript">                    buffer=<span class="string">""</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(buffer)&#123;</span></span><br><span class="line"><span class="undefined">            array.push(buffer);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;array.length;i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(array[i]+<span class="string">"&amp;nbsp;&amp;nbsp;"</span>)</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="tong-guo-zheng-ze-biao-da-shi-wan-cheng">通过正则表达式完成</span><a href="#tong-guo-zheng-ze-biao-da-shi-wan-cheng" class="header-anchor">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str  =<span class="string">"ba14ac6d899a12233"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg = <span class="regexp">/\d+/g</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> msg = str.match(reg);</span></span><br><span class="line"><span class="undefined">        alert(msg);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1><span id="shi-me-shi-zheng-ze-biao-da-shi">什么是正则表达式</span><a href="#shi-me-shi-zheng-ze-biao-da-shi" class="header-anchor">#</a></h1><p>正则表示一种规则，它是一种强大的字符串匹配工具。</p><p>正则表达式的写法有两种</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg1 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"a"</span>,<span class="string">"i"</span>);</span><br><span class="line"><span class="keyword">var</span> reg2 = <span class="regexp">/a/i</span></span><br></pre></td></tr></table></figure><p>我们一般采用第二种方式来定义一个正则表达式</p><p>案例：创建正则表达式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str= <span class="string">"abcdedfg"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> reg1 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"a"</span>) ;</span></span><br><span class="line"><span class="undefined">        alert(reg1.test(str));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该正则表达式用于检测字符串中是否包含a,但是对于大写的A不能检测到 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str=<span class="string">'Abcdef'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//var re=new RegExp('a', 'i');</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> re=<span class="regexp">/a/i</span>;</span></span><br><span class="line"><span class="undefined">        alert(re.test(str));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1><span id="string-lei-dui-zheng-ze-biao-da-shi-de-zhi-chi">String类对正则表达式的支持</span><a href="#string-lei-dui-zheng-ze-biao-da-shi-de-zhi-chi" class="header-anchor">#</a></h1><h2><span id="string-search-fang-fa">String-search方法</span><a href="#string-search-fang-fa" class="header-anchor">#</a></h2><p>案例1:搜索第一次出现b的位置 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> str=<span class="string">'abcdef'</span>;</span></span><br><span class="line"><span class="javascript">alert(str.search(<span class="regexp">/b/</span>));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>案例2:搜索第一次出现数字的位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> str=<span class="string">'asdf 443 vczxv 55'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> re=<span class="regexp">/\d/</span>;</span></span><br><span class="line"><span class="undefined">alert(str.search(re));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>案例3:通过正则表达式，显示用户用的浏览器</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//alert(window.navigator.userAgent);</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="built_in">window</span>.navigator.userAgent.search(<span class="regexp">/firefox/i</span>)!=<span class="number">-1</span>)</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'ff'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.navigator.userAgent.search(<span class="regexp">/chrome/i</span>)!=<span class="number">-1</span>)</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'chrome'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.navigator.userAgent.search(<span class="regexp">/msie 9/i</span>)!=<span class="number">-1</span>)</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">'IE9'</span>);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="string-match-fang-fa">String-match方法</span><a href="#string-match-fang-fa" class="header-anchor">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> str=<span class="string">'sdf e443 fedef  55 66gg 333322312 dff 99'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> re=<span class="regexp">/\d+/g</span>;</span></span><br><span class="line"><span class="undefined">alert(str.match(re));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="string-replace-fang-fa">String-replace方法</span><a href="#string-replace-fang-fa" class="header-anchor">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> str=<span class="string">'abacdAef'</span>;</span></span><br><span class="line"><span class="javascript">alert(str.replace(<span class="regexp">/a/gi</span>, <span class="string">'T'</span>));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>案例：敏感词</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oTxt1=<span class="built_in">document</span>.getElementById(<span class="string">'txt1'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oTxt2=<span class="built_in">document</span>.getElementById(<span class="string">'txt2'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oBtn=<span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">oBtn.onclick=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span></span><br><span class="line"><span class="undefined">&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> re=<span class="regexp">/我们|你们|他们/g</span>; <span class="comment">//|表示或者的含义</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">oTxt2.value=oTxt1.value.replace(re, <span class="string">'***'</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">转换前<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"txt1"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"过滤"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">转换后<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"txt2"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#fu-xi-string-de-ji-ge-fang-fa&quot;&gt;复习String的几个方法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#string-dui-xiang-de-se
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://baofengketang.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://baofengketang.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Idea下建立web项目</title>
    <link href="http://baofengketang.com/2018/06/15/javaweb/web01/"/>
    <id>http://baofengketang.com/2018/06/15/javaweb/web01/</id>
    <published>2018-06-15T02:50:56.000Z</published>
    <updated>2018-06-15T03:31:21.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#chuang-jian-yi-ge-web-xiang-mu">创建一个web项目</a></li><li><a href="#pei-zhi-gong-cheng-mu-lu">配置工程目录</a></li><li><a href="#pei-zhi-wen-jian-jia-lu-jing">配置文件夹路径</a></li><li><a href="#pei-zhi-wai-bu-yi-lai">配置外部依赖</a></li><li><a href="#pei-zhi-tomcat-fu-wu-qi">配置tomcat服务器</a></li><li><a href="#qi-dong-fu-wu-qi">启动服务器</a></li></ul><!-- tocstop --></div><h1><span id="chuang-jian-yi-ge-web-xiang-mu">创建一个web项目</span><a href="#chuang-jian-yi-ge-web-xiang-mu" class="header-anchor">#</a></h1><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1529031628.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="pei-zhi-gong-cheng-mu-lu">配置工程目录</span><a href="#pei-zhi-gong-cheng-mu-lu" class="header-anchor">#</a></h1><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1529031836.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="pei-zhi-wen-jian-jia-lu-jing">配置文件夹路径</span><a href="#pei-zhi-wen-jian-jia-lu-jing" class="header-anchor">#</a></h1><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1529032592.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="pei-zhi-wai-bu-yi-lai">配置外部依赖</span><a href="#pei-zhi-wai-bu-yi-lai" class="header-anchor">#</a></h1><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1529033355.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="pei-zhi-tomcat-fu-wu-qi">配置tomcat服务器</span><a href="#pei-zhi-tomcat-fu-wu-qi" class="header-anchor">#</a></h1><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1529033441.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="qi-dong-fu-wu-qi">启动服务器</span><a href="#qi-dong-fu-wu-qi" class="header-anchor">#</a></h1><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1529033477.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#chuang-jian-yi-ge-web-xiang-mu&quot;&gt;创建一个web项目&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#pei-zhi-gong-cheng-mu-lu
      
    
    </summary>
    
      <category term="javaweb" scheme="http://baofengketang.com/categories/javaweb/"/>
    
    
      <category term="javaweb" scheme="http://baofengketang.com/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>webstrom的安装</title>
    <link href="http://baofengketang.com/2018/06/15/tools/webstrom/"/>
    <id>http://baofengketang.com/2018/06/15/tools/webstrom/</id>
    <published>2018-06-15T02:21:06.000Z</published>
    <updated>2018-06-15T02:25:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="webstorm-de-an-zhuang-yu-shi-yong">webstorm的安装与使用</span><a href="#webstorm-de-an-zhuang-yu-shi-yong" class="header-anchor">#</a></h1><h2><span id="jian-jie">简介</span><a href="#jian-jie" class="header-anchor">#</a></h2><p>WebStorm 是jetbrains公司旗下一款JavaScript 开发工具。被广大中国JS开发者誉为”Web前端开发神器”、”最强大的HTML5编辑器”、”最智能的JavaScript IDE”等。</p><h2><span id="an-zhuang">安装</span><a href="#an-zhuang" class="header-anchor">#</a></h2><p><a href="http://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">点击进入官网</a>下载最新版本进行安装.</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180605/5DbFBbja34.png?imageslim" alt="mark"></p><p>下载之后进行安装</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180605/4fcELc4C8l.png?imageslim" alt="mark"></p><p>一路next即可</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180605/g1ef0fFEJc.png?imageslim" alt="mark"></p><h2><span id="ji-huo">激活</span><a href="#ji-huo" class="header-anchor">#</a></h2><p>下载相关jar包：JetbrainsCrack-2.6.10-release-enc.jar，将jar包拷贝到C:\Program Files\JetBrains\WebStorm 2017.3.3\bin目录中</p><p>还是在bin目录下，找到idea.exe.vmoptions和idea64.exe.vmoptions，用记事本打开它们，在两个文件最后分别加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:C:\Program Files\JetBrains\WebStorm 2017.3.3\bin\JetbrainsCrack-2.6.10-release-enc.jar</span><br></pre></td></tr></table></figure><p>重新启动webstrom，然后输入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">ThisCrackLicenseId-&#123;</span><br><span class="line">&quot;licenseId&quot;:&quot;ThisCrackLicenseId&quot;,</span><br><span class="line">&quot;licenseeName&quot;:&quot;你想要的用户名&quot;,</span><br><span class="line">&quot;assigneeName&quot;:&quot;&quot;,</span><br><span class="line">&quot;assigneeEmail&quot;:&quot;随便填一个邮箱(我填的:183588002@qq.com)&quot;,</span><br><span class="line">&quot;licenseRestriction&quot;:&quot;For This Crack, Only Test! Please support genuine!!!&quot;,</span><br><span class="line">&quot;checkConcurrentUse&quot;:false,</span><br><span class="line">&quot;products&quot;:[</span><br><span class="line">&#123;&quot;code&quot;:&quot;II&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;DM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;AC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;RS0&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;WS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;DPN&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;RC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;PS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;DC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;RM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;CL&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class="line">&#123;&quot;code&quot;:&quot;PC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;</span><br><span class="line">],</span><br><span class="line">&quot;hash&quot;:&quot;2911276/0&quot;,</span><br><span class="line">&quot;gracePeriodDays&quot;:7,</span><br><span class="line">&quot;autoProlongated&quot;:false&#125;</span><br></pre></td></tr></table></figure><p>至此，webstrom就安装完毕了~，下面就可以开始骚气的玩耍了~~~</p><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;webstorm-de-an-zhuang-yu-shi-yong&quot;&gt;webstorm的安装与使用&lt;/span&gt;&lt;a href=&quot;#webstorm-de-an-zhuang-yu-shi-yong&quot; class=&quot;header-anchor&quot;&gt;#&lt;/
      
    
    </summary>
    
      <category term="开发工具" scheme="http://baofengketang.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="开发工具" scheme="http://baofengketang.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>jquery基础（一）</title>
    <link href="http://baofengketang.com/2018/06/07/jquery/jquery_01/"/>
    <id>http://baofengketang.com/2018/06/07/jquery/jquery_01/</id>
    <published>2018-06-07T02:54:08.000Z</published>
    <updated>2018-06-07T08:41:42.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#jquery-ji-chu">Jquery基础</a><ul><li><a href="#wei-shi-me-yao-xue-xi-jquery">为什么要学习Jquery</a></li><li><a href="#jquery-de-you-shi">Jquery的优势</a></li><li><a href="#shi-yong-jquery-jie-jue-shang-mian-de-wen-ti">使用jquery解决上面的问题</a></li><li><a href="#jquery-de-ji-ben-shi-yong">Jquery的基本使用</a><ul><li><a href="#shi-me-shi-jquery">什么是Jquery</a></li><li><a href="#xia-zai-jquery-yuan-ma">下载Jquery源码</a></li><li><a href="#yin-ru-jquery">引入jquery</a></li><li><a href="#ru-kou-han-shu">入口函数</a></li><li><a href="#shi-jian-chu-li">事件处理</a></li></ul></li><li><a href="#jquery-xiang-xi-jie-shao">Jquery详细介绍</a><ul><li><a href="#fu-hao-jie-shao">$符号介绍</a></li><li><a href="#jquery-ru-kou-han-shu">jquery入口函数</a></li></ul></li><li><a href="#jquery-zhong-xuan-ze-qi-can-kao-api">Jquery中选择器（参考api）</a><ul><li><a href="#ji-ben-xuan-ze-qi">基本选择器</a></li><li><a href="#ceng-ji-xuan-ze-qi">层级选择器</a></li><li><a href="#guo-lu-xuan-ze-qi">过滤选择器</a></li><li><a href="#shu-xing-xuan-ze-qi">属性选择器</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="jquery-ji-chu">Jquery基础</span><a href="#jquery-ji-chu" class="header-anchor">#</a></h1><h2><span id="wei-shi-me-yao-xue-xi-jquery">为什么要学习Jquery</span><a href="#wei-shi-me-yao-xue-xi-jquery" class="header-anchor">#</a></h2><p>在看这个问题前，我们先来看一段代码.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>回顾js<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background: pink;</span></span><br><span class="line"><span class="undefined">            margin-bottom: 10px;</span></span><br><span class="line"><span class="undefined">            display: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> divs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; divs.length; i++)&#123;</span></span><br><span class="line"><span class="javascript">                    divs[i].style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="javascript">                    divs[i].innerHTML = <span class="string">"javascript回顾"</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        /*window.onload = function () &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"我是第二个onload"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;*/</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"测试"</span> <span class="attr">id</span>=<span class="string">"demo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>window.onload 事件有个事件覆盖的问题，我们只能写一个，代码容错性差，浏览器兼容性问题，书写很繁琐，代码量多，动画效果实现起来也是比较复杂等</p><h2><span id="jquery-de-you-shi">Jquery的优势</span><a href="#jquery-de-you-shi" class="header-anchor">#</a></h2><p> 1、轻量级</p><p>​     JQuery非常轻巧，采用Dean Edwards编写的Packer压缩后，大小不到30KB,如果使用Min版并且在服务器端启用Gzip压缩后，大小只有18KB。</p><p> 2、强大的选择器</p><p>​    JQuery允许开发者使用从CSS1到CSS3几乎所有的选择器，以及JQuery独创的高级而且复杂的选择器，另外还可以加入插件使其支持XPath选择器，甚至开发者可以编写属于自己的选择器。由于JQuery支持选择器这一特性，因此有一定CSS经验的开发人员可以很容易的切入到JQuery的学习中来。</p><p>  3、出色的DOM操作的封装</p><p>​    JQuery封装了大量常用的DOM操作，使开发者在编写DOM操作相关程序的时候能够得心应手。JQuery轻松地完成各种原本非常复杂的操作，让JavaScript新手也能写出出色的程序。</p><p>  4、可靠的事件处理机制</p><p>​     JQuery的事件处理机制吸收了JavaScript专家Dean Edwards编写的事件处理函数的精华，是的JQuery在处理事件绑定的时候相当可靠。在预留退路、循序渐进以及非入侵式编程思想方面，JQuery也做得非常不错。</p><p>  5、完善的Ajax</p><p>​     JQuery将所有的Ajax操作封装到一个函数$.ajax()里，使得开发者处理Ajax的时候能够专心处理业务逻辑而无需关心复杂的浏览器兼容性和XMLHttpRequest对象的创建和使用的问题。</p><p>  6、不污染顶级变量</p><p>​     JQuery只建立一个名为JQuery的对象，其所有的函数方法都在这个对象之下。其别名$也可以随时交流控制权，绝对不会污染其他的对象。该特性是JQuery可以与其他JavaScript库共存，在项目中放心地引用而不需要考虑到后期的冲突。</p><p>  7、出色的浏览器兼容性</p><p>​    作为一个流行的JavaScript库，浏览器的兼容性是必须具备的条件之一。JQuery能够在IE6.0+,FF 2+,Safari2.+和Opera9.0+下正常运行。JQuery同时修复了一些浏览器之间的的差异，使开发者不必在开展项目前建立浏览器兼容库。</p><p>  8、链式操作方式</p><p>​     JQuery中最有特色的莫过于它的链式操作方式——即对发生在同一个JQuery对象上的一组动作，可以直接接连写无需要重复获取对象。这一特点使得JQuery的代码无比优雅。</p><p>  9.隐式迭代</p><p>​    当用JQuery找到带有“.myClass”类的全部元素，然后隐藏他们时。无需循环遍历每一个返回的元素。相反，JQuery里的方法都被设计成自动操作的对象集合，而不是单独的对象，这使得大量的循环结构变得不再必要，从而大幅度地减少代码量。</p><p>  10、行为层与结构层的分离</p><p>​    开发者可以使用选择器选中元素，然后直接给元素添加事件。这种将行为层与结构层完全分离的思想，可以使JQuery开发人员和HTML或其他页面开发人员各司其职，摆脱过去开发冲突或个人单干的开发模式。同时，后期维护也非常方便，不需要在HTML代码中寻找某些函数和重复修改HTML代码。</p><p>   11、丰富的插件支持</p><p>​    JQuery的易扩展性，吸引了来自全球开发者来编写JQuery的扩展插件。目前已经有超过几百种官方插件支持，而且还不断有新插件面试。</p><p>   12、完善的文档</p><p>​    JQuery的文档非常丰富，现阶段多位英文文档，中文文档相对较少。很多热爱JQuery的团队都在努力完善JQuery中文文档，例如JQuery的中文API。</p><p>   13、开源: JQuery是一个开源的产品，任何人都可以自由地使用并提出修改意见</p><h2><span id="shi-yong-jquery-jie-jue-shang-mian-de-wen-ti">使用jquery解决上面的问题</span><a href="#shi-yong-jquery-jie-jue-shang-mian-de-wen-ti" class="header-anchor">#</a></h2><p>对于这个案例目前只需要看的懂即可，后面会详细介绍</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>jQuery解决问题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background: pink;</span></span><br><span class="line"><span class="undefined">            margin-bottom: 10px;</span></span><br><span class="line"><span class="undefined">            display: none;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.11.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1. 入口函数的方式</span></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#demo"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).show(<span class="number">1000</span>).html(<span class="string">"我是内容"</span>);</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 2.函数定义的第二种方式</span></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//可以写多个入口函数</span></span></span><br><span class="line"><span class="undefined">        /*$(document).ready(function () &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"我是第二个onload"</span>);</span></span><br><span class="line"><span class="undefined">        &#125;);*/</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"我是按钮"</span> <span class="attr">id</span>=<span class="string">"demo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="jquery-de-ji-ben-shi-yong">Jquery的基本使用</span><a href="#jquery-de-ji-ben-shi-yong" class="header-anchor">#</a></h2><h3><span id="shi-me-shi-jquery">什么是Jquery</span><a href="#shi-me-shi-jquery" class="header-anchor">#</a></h3><p>jQuery就是javascript的一个库，把我们常用的一些功能进行了封装，方便我们来调用，提高我们的开发效率</p><p>Javascript是一门编程语言，我们用它来编写客户端浏览器脚本。</p><p>jQuery是javascript的一个库，包含多个可重用的函数，用来辅助我们简化javascript开发</p><p>jQuery能做的javascipt都能做到，而javascript能做的事情，jQuery不一定能做到。</p><h3><span id="xia-zai-jquery-yuan-ma">下载Jquery源码</span><a href="#xia-zai-jquery-yuan-ma" class="header-anchor">#</a></h3><p><img src="http://p6wdo7p1v.bkt.clouddn.com/blog/180606/GLJbhemFHc.png?imageslim" alt="mark"></p><p>jquery提供了2个形式</p><p>jquery-1.11.1.js主要用于开发环境，学习我们主要使用此版本</p><p>jquery-1.11.1.min.js:主要用于线上环境</p><h3><span id="yin-ru-jquery">引入jquery</span><a href="#yin-ru-jquery" class="header-anchor">#</a></h3><p>要把我们的jQuery源文件拿到我们的项目里面来，在我们的页面中引用jQuery文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.11.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="ru-kou-han-shu">入口函数</span><a href="#ru-kou-han-shu" class="header-anchor">#</a></h3><p>定义方式一：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">"helloworld"</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>定义方式二：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">alert(<span class="string">"helloworld"</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3><span id="shi-jian-chu-li">事件处理</span><a href="#shi-jian-chu-li" class="header-anchor">#</a></h3><p>JavaScript事件的处理方式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Jquery的事件处理机制</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#demo"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     alert(<span class="string">"jquery的形式"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        *&#123;</span></span><br><span class="line"><span class="undefined">            margin: 0px;</span></span><br><span class="line"><span class="undefined">            padding: 0px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            height: 200px;</span></span><br><span class="line"><span class="undefined">            background: blueviolet;</span></span><br><span class="line"><span class="undefined">            margin-bottom: 10px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.11.1.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#demo"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                $(<span class="string">"div"</span>).hide(<span class="number">1000</span>)</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"我是按钮"</span> <span class="attr">id</span>=<span class="string">"demo"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="jquery-xiang-xi-jie-shao">Jquery详细介绍</span><a href="#jquery-xiang-xi-jie-shao" class="header-anchor">#</a></h2><h3><span id="fu-hao-jie-shao">$符号介绍</span><a href="#fu-hao-jie-shao" class="header-anchor">#</a></h3><p>在js中的变量命名：下划线、字母、$、数字组成，但是不能以数字开头</p><p>在jquery中，它占用了我们js中的2个变量分别是：$ 和 jQuery</p><p>补充:模拟jquery的操作</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>模拟jquery<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        $=<span class="function"><span class="keyword">function</span>(<span class="params">dom</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                ready:<span class="function"><span class="keyword">function</span>(<span class="params">func</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 判断一下 docuemnt.onload 有没有被赋值（或者说有没有这个事件）</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 1.有：接收一个旧的函数，然后呢，我先去调用新的函数，接着再调用旧的函数</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 2.没有：直接赋值个onload事件</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(<span class="keyword">typeof</span> dom.onload===<span class="string">"function"</span>)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> oldFun=dom.onload;</span></span><br><span class="line"><span class="javascript">                        dom.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">                            func();</span></span><br><span class="line"><span class="undefined">                            oldFun();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">                        &#125;</span></span><br><span class="line"><span class="javascript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="undefined">                        dom.onload=func;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="javascript">       $(<span class="built_in">window</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           alert(<span class="string">"第一次调用"</span>)</span></span><br><span class="line"><span class="undefined">       &#125;)</span></span><br><span class="line"><span class="javascript">        $(<span class="built_in">window</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">"第二次调用"</span>)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3><span id="jquery-ru-kou-han-shu">jquery入口函数</span><a href="#jquery-ru-kou-han-shu" class="header-anchor">#</a></h3><blockquote><p>1.Js的window.onload事件是等到所有内容，以及我们的外部图片之类的文件加载完了之后，才回去执行</p><p>2.jQuery的入口函数 是在 html所有标签都加载之后，就回去执行。</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.11.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"img"</span>)[<span class="number">2</span>].clientWidth);</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined">        /*$(function () &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//alert(document.getElementsByTagName("img")[2].clientWidth);</span></span></span><br><span class="line"><span class="javascript">            alert($(<span class="string">"#img3"</span>).width());</span></span><br><span class="line"><span class="undefined">        &#125;);*/</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/01.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/02.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"img3"</span> <span class="attr">src</span>=<span class="string">"imgs/03.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="jquery-zhong-xuan-ze-qi-can-kao-api">Jquery中选择器（参考api）</span><a href="#jquery-zhong-xuan-ze-qi-can-kao-api" class="header-anchor">#</a></h2><h3><span id="ji-ben-xuan-ze-qi">基本选择器</span><a href="#ji-ben-xuan-ze-qi" class="header-anchor">#</a></h3><table><thead><tr><th><strong>符号</strong></th><th>说明</th><th>用法</th></tr></thead><tbody><tr><td><strong>$(“#demo”)</strong></td><td>选择id为demo的第一个元素</td><td>$(“#demo”).css(“background”,”red”)</td></tr><tr><td><strong>$(“.liItem”)</strong></td><td>选择所有类名（样式名）为liItem的元素</td><td>$(“.liItem”). css(“background”,”red”);</td></tr><tr><td><strong>$(“div”)</strong></td><td>选择所有标签名字为div的元素</td><td>$(“div”). css(“background”,”red”);</td></tr><tr><td><strong>$(“*”)</strong></td><td>选择所有元素  少用或配合其他选择器来使用</td><td>$(“*”). css(“background”,”red”)</td></tr><tr><td><strong>$(“.liItem,div”)</strong></td><td>选择多个指定的元素，这个地方是选择出了 .liItem元素和div元素</td><td>$(“.liItem,div”). css(“background”,”red”)</td></tr></tbody></table><h3><span id="ceng-ji-xuan-ze-qi">层级选择器</span><a href="#ceng-ji-xuan-ze-qi" class="header-anchor">#</a></h3><table><thead><tr><th><strong>符号</strong></th><th>说明</th><th>用法</th></tr></thead><tbody><tr><td>空格</td><td>后代选择器  选择所有的后代元素</td><td>$(“div span”). css(“background”,”red”);</td></tr><tr><td><strong>&gt; </strong></td><td>子代选择器  选择所有的子代元素</td><td>$(“div &gt; span”). css(“background”,”red”)</td></tr><tr><td><strong>+</strong></td><td>紧邻选择器  选择紧挨着的下一个元素</td><td>$(“div + p”). css(“background”,”red”)</td></tr><tr><td><strong>~</strong></td><td>兄弟选择器  选择后面的所有的兄弟元素</td><td>$(“div ~ p”). css(“background”,”red”)</td></tr></tbody></table><h3><span id="guo-lu-xuan-ze-qi">过滤选择器</span><a href="#guo-lu-xuan-ze-qi" class="header-anchor">#</a></h3><table><thead><tr><th><strong>符号</strong></th><th>说明</th><th>用法</th></tr></thead><tbody><tr><td><strong>:eq(index)</strong></td><td>index是从0开始的一个数字，选择序号为index的元素。选择第一个匹配的元素。</td><td>$(“li:eq(1)”). css(“background”,”red”)</td></tr><tr><td><strong>:gt(index)</strong></td><td>Index 是从0开始的一个数字，选择序号大于index的元素</td><td>$(“li:gt(2)”). css(“background”,”red”)</td></tr><tr><td><strong>:lt(index)</strong></td><td>Index是从0开始的一个数字，选择小于index  的元素</td><td>$(“li:lt(2)”). css(“background”,”red”)</td></tr><tr><td><strong>:odd</strong></td><td>选择所有序号为奇数行的元素</td><td>$(“li:odd”). css(“background”,”red”)</td></tr><tr><td><strong>:even</strong></td><td>选择所有序号为偶数的元素</td><td>$(“li:even”). css(“background”,”red”)</td></tr><tr><td><strong>:first</strong></td><td>选择匹配第一个元素</td><td>$(“li:first”). css(“background”,”red”)</td></tr><tr><td><strong>:last</strong></td><td>选择匹配的最后一个元素</td><td>$(“li:last”). css(“background”,”red”)</td></tr></tbody></table><h3><span id="shu-xing-xuan-ze-qi">属性选择器</span><a href="#shu-xing-xuan-ze-qi" class="header-anchor">#</a></h3><table><thead><tr><th><strong>符号</strong></th><th>说明</th><th>用法</th></tr></thead><tbody><tr><td><strong>$(“a[href]”)</strong></td><td>选择所有包含href属性的元素</td><td>$(“a[href]”). css(“background”,”red”)</td></tr><tr><td><strong>$(“a[href=’hello’]”)</strong></td><td>选择href属性值为hello的所有a标签</td><td>$(“a[href=’hello’]”). css(“background”,”red”)</td></tr><tr><td><strong>$(“a[href!=’baidu’]”)</strong></td><td>选择所有href属性不等baidu的所有元素，包括没有href的元素</td><td>$(“a[href!=’baidu’]”). css(“background”,”red”)</td></tr><tr><td><strong>$(“a[href^=’web’]”)</strong></td><td>选择所有以web开头的元素</td><td>$(“a[href^=’web’]”). css(“background”,”red”)</td></tr><tr><td><strong>$(“a[href\$=’cn’]”)</strong></td><td>选择所有以cn结尾的元素</td><td>$(“a[href$=’cn’]”). css(“background”,”red”)<em>**</em></td></tr><tr><td><strong>$(“a[href*=’i’]”)</strong></td><td>选择所有包含i这个字符的元素，可以是中英文</td><td>$(“a[href*=’i’]”). css(“background”,”red”)</td></tr><tr><td><strong>$(“a[href][title=’我’]”)</strong></td><td>选择所有符合指定属性规则的元素，都符合才会被选中。</td><td>$(“a[href][title=’我’]”). css(“background”,”red”)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#jquery-ji-chu&quot;&gt;Jquery基础&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#wei-shi-me-yao-xue-xi-jquery&quot;&gt;为什么要学习Jquery&lt;
      
    
    </summary>
    
      <category term="jquery" scheme="http://baofengketang.com/categories/jquery/"/>
    
    
      <category term="jquery基础" scheme="http://baofengketang.com/tags/jquery%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Spring开发实战01</title>
    <link href="http://baofengketang.com/2018/06/04/spring_anno/spring_anno_01/"/>
    <id>http://baofengketang.com/2018/06/04/spring_anno/spring_anno_01/</id>
    <published>2018-06-04T06:14:52.000Z</published>
    <updated>2018-06-05T03:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="spring-kai-fa-shi-zhan-01">Spring开发实战01</span><a href="#spring-kai-fa-shi-zhan-01" class="header-anchor">#</a></h1><h2><span id="wei-shi-me-yao-shi-yong-spring">为什么要使用spring</span><a href="#wei-shi-me-yao-shi-yong-spring" class="header-anchor">#</a></h2><h3><span id="dai-ma-ou-he-du-tai-gao">代码耦合度太高</span><a href="#dai-ma-ou-he-du-tai-gao" class="header-anchor">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeServiceImpl</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IEmployeeDAO employeeDAO = <span class="keyword">new</span> EmployeeDAOImpl();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在如果要更换实现类，就必须更改源代码，代码的耦合度太高</p><h3><span id="dui-xiang-de-yi-lai-guan-xi-bi-jiao-fan-suo">对象的依赖关系比较繁琐</span><a href="#dui-xiang-de-yi-lai-guan-xi-bi-jiao-fan-suo" class="header-anchor">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmpployeeAction</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> IEmployeeService   service;</span><br><span class="line">    <span class="keyword">private</span> IDepartmentService departmentService;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果对象过多，并且互相存在以来关系，并且有的对象需要单例模式,有的则需要多实</p><h3><span id="shi-wu-kong-zhi-fan-suo">事务控制繁琐</span><a href="#shi-wu-kong-zhi-fan-suo" class="header-anchor">#</a></h3><p>对于事务,可以使用Filter或是Struts2的拦截器实现,但这样有一些不好的地方: </p><p>1.此时事务开在表现层,事务周期太长。 </p><p>2.有的action方法没有用到数据库操作,不需要开事务。 </p><p>3.不能针对某个具体功方法配置事务是否是只读的,因为有的方法只是查询数据。 </p><p>而正确的解决方案:把事务开启在 service 层是。但是: 每个方法前都要开启事务,每个方法后都要 关闭事务，代码臃肿,开发效率低下。 如何降低业务逻辑部分之间耦合度,提高程序的可重用性,同时提高开发的效率!Spring的aop机制可以帮助我们方便的帮助我们解决</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.org.kingdom.app;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployerService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//开启事务</span></span><br><span class="line">        <span class="comment">//dao.save(...);</span></span><br><span class="line">        <span class="comment">//关闭事务</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//开启事务</span></span><br><span class="line">        <span class="comment">//dao.save(...);</span></span><br><span class="line">        <span class="comment">//关闭事务</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="spring-jian-jie">Spring简介</span><a href="#spring-jian-jie" class="header-anchor">#</a></h2><h3><span id="spring-gai-shu">Spring概述</span><a href="#spring-gai-shu" class="header-anchor">#</a></h3><p>Spring是一个轻量级的DI/IoC和AOP容器框架。存在的目的是用于构建轻量级的J2EE应用。Spring以一种非侵入式的方式来管理你的代码,Spring提倡”最少侵入”,这也就意味着你可以适当的时候安装或卸载Spring。 </p><p>◆目的:解决企业应用开发的复杂性 </p><p>◆功能:使用基本的JavaBean代替EJB,并提供了更多的企业应用功能</p><p>◆范围:任何Java应用 简单来说:Spring是一个轻量级的控制反转(IoC)和面向切面(AOP)的容器框架 </p><h3><span id="spring-ke-cheng-zhong-de-chang-yong-zhu-yu">Spring课程中的常用术语</span><a href="#spring-ke-cheng-zhong-de-chang-yong-zhu-yu" class="header-anchor">#</a></h3><p>1、应用程序:是能完成我们所需要功能的成品,比如购物网站、OA系统。 </p><p>2、框架:是能完成一定功能的半成品,比如我们可以使用框架进行购物网站开发;框架做一部分功能,我 们自己做一部分功能,这样应用程序就创建出来了。而且框架规定了你在开发应用程序时的整体架构,提 供了一些基础功能,还规定了类和对象的如何创建、如何协作等,从而简化我们开发,让我们专注于业务 逻辑开发。 </p><p>3、非侵入式设计:从框架角度可以这样理解,无需继承框架提供的类,这种设计就可以看作是非侵入式设 计,如果继承了这些框架类,就是侵入设计,如果以后想更换框架之前写过的代码几乎无法重用,如果非 侵入式设计则之前写过的代码仍然可以继续使用。 </p><p>4、轻量级及重量级:轻量级是相对于重量级而言的,轻量级一般就是非入侵性的、所依赖的东西非常少、 资源占用非常少、部署简单等等,其实就是比较容易使用,而重量级正好相反。 </p><p>5、POJO:POJO(Plain Old Java Objects)简单的Java对象,它可以包含业务逻辑或持久化逻辑, 但不担当任何特殊角色且不继承或不实现任何其它Java框架的类或接口。 </p><p>6、容器:在日常生活中容器就是一种盛放东西的器具,从程序设计角度看就是装对象的的对象,因为存在 放入、拿出等操作,所以容器还要管理对象的生命周期。 </p><h3><span id="spring-de-zu-zhi-jia-gou-tu">Spring的组织架构图</span><a href="#spring-de-zu-zhi-jia-gou-tu" class="header-anchor">#</a></h3><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1528164377.png?imageMogr2/thumbnail/!70p" alt=""></p><h3><span id="spring-de-jar-bao-fen-xi">Spring的jar包分析</span><a href="#spring-de-jar-bao-fen-xi" class="header-anchor">#</a></h3><p>spring-framework-x.x.RELEASE:Spring 核心组件。 </p><p>​    docs: Spring 开发、帮助文档。 </p><pre><code>libs: Spring 核心组件的。jar 包、源代码、文档。 </code></pre><p>​    schema: Spring 配置文件的 schema 约束文件。 </p><p>spring-framework-x.x.RELEASE-dependencies:Spring 依赖的第三方组件。 包含了各大开源组织提供的依赖 jar。比如 apache common 下的:dbcp.jar pool.jar logging.jar </p><h3><span id="spring-de-you-shi">Spring的优势</span><a href="#spring-de-you-shi" class="header-anchor">#</a></h3><p>1.低侵入/低耦合(降低组件之间的耦合度,实现软件各层之间的解耦) </p><p>2.声明式事务管理</p><p>3.方便集成其他框架</p><p>4.降低JavaEE开发难度 </p><p>5.Spring框架中包括JavaEE 三层的每一层的解决方案 (一站式)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;spring-kai-fa-shi-zhan-01&quot;&gt;Spring开发实战01&lt;/span&gt;&lt;a href=&quot;#spring-kai-fa-shi-zhan-01&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span i
      
    
    </summary>
    
      <category term="spring" scheme="http://baofengketang.com/categories/spring/"/>
    
    
      <category term="spring" scheme="http://baofengketang.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>移动互联网</title>
    <link href="http://baofengketang.com/2018/05/29/mobile/mobile01/"/>
    <id>http://baofengketang.com/2018/05/29/mobile/mobile01/</id>
    <published>2018-05-29T08:08:57.000Z</published>
    <updated>2018-05-30T02:36:02.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#yi-dong-hu-lian-fa-zhan">移动互联发展</a><ul><li><a href="#gai-shu">概述</a></li><li><a href="#yi-dong-hu-lian-suo-she-ji-de-ji-zhu-ling-yu">移动互联所涉及的技术领域</a><ul><li><a href="#cao-zuo-xi-tong">操作系统</a></li><li><a href="#wei-bo-deng-zi-mei-ti-ji-zhu">微博等自媒体技术</a></li><li><a href="#er-wei-ma-ji-zhu">二维码技术</a></li><li><a href="#html5-ji-zhu">HTML5技术</a></li><li><a href="#ding-wei-dao-hang-gps-wei-zhi-gen-zong-ji-zhu">定位、导航、GPS位置跟踪技术</a></li><li><a href="#yun-ji-zhu">“云”技术，</a></li><li><a href="#yu-yin-shi-pin-tong-xun-ji-zhu">语音、视频通讯技术</a></li><li><a href="#yao-yi-yao-ji-zhu">摇一摇 技术</a></li><li><a href="#yi-dong-zhi-fu-wang-gou-yu-ding-chong-zhi-deng">移动支付：网购、预订、充值等。</a></li><li><a href="#yu-yin-shi-bie-sou-suo">语音识别、搜索。</a></li><li><a href="#zhong-jian-jian-ji-zhu">中间件技术</a></li></ul></li><li><a href="#yi-dong-hu-lian-de-fa-zhan">移动互联的发展</a><ul><li><a href="#de-ru-kou-zhe-de-tian-xia">得入口者得天下</a></li><li><a href="#yi-dong-duan-chan-pin-de-ji-ju-zeng-duo">移动端产品的急剧增多</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="yi-dong-hu-lian-fa-zhan">移动互联发展</span><a href="#yi-dong-hu-lian-fa-zhan" class="header-anchor">#</a></h1><h2><span id="gai-shu">概述</span><a href="#gai-shu" class="header-anchor">#</a></h2><p>最初接触移动互联网是在去年谷歌的一次android推介会，之前虽然也了解过，但对移动互联网的认识仅限于手机上网。也是那次之后我对移动互联网产生了莫大的兴趣，虽然还不太清楚到底什么才是真正的移动互联网。后来和一位搞投资的朋友讨论移动互联网，我本能的说最大的特点是移动，而朋友说是小。现在想想，朋友说的要高一筹，不过这两种说法本质是相同的。所谓的移动互联网，为什么要叫移动互联网，我是从字面和本质上理解的,而朋友是载体的特征上理解的。</p><p>不过自从使用智能机后，我对移动互联网有了新的理解，越来越觉得当年的移动和小太过肤浅。或许以后我对移动互联网还会有其他新的认识，但当下我却深刻的感觉的移动互联网是应用的天下。</p><p>在电脑上上网的时候，我们要上网就会直接打开浏览器，以前上qq要打开qq客户端，现在也可以直接打开webqq，以前总是把音乐和影视剧下载的硬盘里看，现在带宽越来越大，在线看和听完全没有任何不流畅的地方。可以说大多数跟网络相关的事都能通过浏览器来搞定，这才有了互联网入口之争。</p><p>而相对于移动互联网来说，想通过浏览器来上qq，首先就要考虑打开速度，我在公司只能使用1M的点心宽带，打开webqq都会加载半天，更何况手机，况且，再加上手机屏幕限制，webqq根本就没法在手机上用，只能用qq的几个移动客户端。像人人网、京东商城、新浪微博这样的网站在手机上打开总会有各种不便，有些脚本无法执行，如果没有专门的客户端，丢掉移动领域的市场将会是必然。像各种地图、导航软件，如果是通过手机浏览器打开，有些根本就看不到地图，更不用说导航了。这些也只能通过应用来体现。还有一些像手电筒、日历、闹钟、电子琴、收音机、录音机这类也只能通过应用来体现。更多手机上需要的功能，也都只能通过应用来体现出来。</p><p>诸如各种优惠券、团购券之类的互联网传统应用在移动互联网上有着无与伦比的优势，这部分也必然会出现大量移动互联网应用，另外还有星巴克新出的手机代码取餐之类的功能相对传统互联网有些绝对优势，未来这种应用也会越来越多。</p><h2><span id="yi-dong-hu-lian-suo-she-ji-de-ji-zhu-ling-yu">移动互联所涉及的技术领域</span><a href="#yi-dong-hu-lian-suo-she-ji-de-ji-zhu-ling-yu" class="header-anchor">#</a></h2><p>对于移动互联所涉及的技术领域，我个人从开发这么多年的经验总结如下几个方面</p><h3><span id="cao-zuo-xi-tong">操作系统</span><a href="#cao-zuo-xi-tong" class="header-anchor">#</a></h3><p>这些移动智能操作系统本身包含的技术很多，可以在这些平台基础上结合其他技术开发出各式各样的移动终端应用，进而在移动互联网的大潮中占住一席之地。 </p><h3><span id="wei-bo-deng-zi-mei-ti-ji-zhu">微博等自媒体技术</span><a href="#wei-bo-deng-zi-mei-ti-ji-zhu" class="header-anchor">#</a></h3><p>微博已经盛行很久，积累了数以亿计的用户量，很多人利用微博途径来推广相关的一些信息，起到了类似媒体宣传的效果。我们也可以借助微博大的用户量，用微博等账号作为我们app的登录账号，可免去用户注册之烦，同时还可直接将app相关信息分享到微博，进行一定地宣传。</p><h3><span id="er-wei-ma-ji-zhu">二维码技术</span><a href="#er-wei-ma-ji-zhu" class="header-anchor">#</a></h3><p>二维码中可以包含文本、链接、图片等信息。广泛应用于：二维码产品推广（包含产品信息，免去用户通过上网搜索产品）、二维码防伪、二维码电子优惠券、二维码名片、二维码微博营销、二维码墓碑等等。</p><h3><span id="html5-ji-zhu">HTML5技术</span><a href="#html5-ji-zhu" class="header-anchor">#</a></h3><p>通过HTML5和JavaScript可以开发移动Web应用，同时可以利用通过这几种途径将HTML5编写的内容转化成android应用：</p><blockquote><p>Android中的WebView控件</p><p>使用PhoneGap（它是基于HTML、CSS、JavaScript，创建移动跨平台应用的快速开发平台）</p><p>使用Rexsee在线生成android apk。Rexsee是开源的android开发平台，它支持开发以Web模式开发移动应用，所以说会HTML就会android</p><p>使用appMobi HTML5 XDK在线生成android应用</p></blockquote><h3><span id="ding-wei-dao-hang-gps-wei-zhi-gen-zong-ji-zhu">定位、导航、GPS位置跟踪技术</span><a href="#ding-wei-dao-hang-gps-wei-zhi-gen-zong-ji-zhu" class="header-anchor">#</a></h3><p>用的比较多的是百度map、Google map等开放的API来实现第三方应用的定位、导航等功能。可以有以下用途：</p><blockquote><p>a、定位目前所在位置，计算出发地与目的地之间的距离。</p><p>b、告诉用户从A到B怎么走，为用户出行导航。</p><p>c、移动物联网中可以通过GPS或者物品条形码知道物品所到达的位置。</p></blockquote><h3><span id="yun-ji-zhu">“云”技术，</span><a href="#yun-ji-zhu" class="header-anchor">#</a></h3><p>云推送、云备份、云下载、输入法的云联想、云盘等。“云”技术简单理解就是客户端通过网络与服务器（一般都是到达了一定数据量或者说数以万计、亿计的大数据量）相连获取与之相关的信息。用的比较多场合如下：</p><blockquote><p>a、推送：服务端向客户端主动下行内容，客户端接收到并提示用户，这一技术广泛用户移动应用中。</p><p>b、备份：将本地文件上传到服务器保存，让服务器为我们本地文件做一个备份。</p><p>c、下载：客户端与服务器相连，下载服务器端的文件内容。</p></blockquote><h3><span id="yu-yin-shi-pin-tong-xun-ji-zhu">语音、视频通讯技术</span><a href="#yu-yin-shi-pin-tong-xun-ji-zhu" class="header-anchor">#</a></h3><p>A与B进行语音、视频通讯的过程：A发送的语音、视频数据通过压缩算法进行压缩，然后通过app中定的通讯协议经网络把压缩后的语音、视频数据信息传给B，B接收到这些数据后，解压缩、将这些串起来还原成的语音、视频信息。如：应用中的语音、视频聊天等。</p><h3><span id="yao-yi-yao-ji-zhu">摇一摇 技术</span><a href="#yao-yi-yao-ji-zhu" class="header-anchor">#</a></h3><p>智能机时代到来，智能机硬件都有重力加速感应模块，可以实现摇一摇手机通过网络从服务端获取所需的内容，例如：获取同一时刻摇手机的人、获取自己周围的人等。</p><h3><span id="yi-dong-zhi-fu-wang-gou-yu-ding-chong-zhi-deng">移动支付：网购、预订、充值等。</span><a href="#yi-dong-zhi-fu-wang-gou-yu-ding-chong-zhi-deng" class="header-anchor">#</a></h3><p>用户、厂商、银行将客户端与银行卡相关联，通过一定协议和网络实现移动在线支付。例如：支付宝、酒店预订、高尔夫球场预订等。</p><h3><span id="yu-yin-shi-bie-sou-suo">语音识别、搜索。</span><a href="#yu-yin-shi-bie-sou-suo" class="header-anchor">#</a></h3><p>客户端采集到用户发出的语音信息，经过一些信号处理等技术，发送到服务端，经服务端找出相匹配的信息返回给客户端。例如：科大讯飞的语音识别、语音阅读、微信的语音输入等。</p><h3><span id="zhong-jian-jian-ji-zhu">中间件技术</span><a href="#zhong-jian-jian-ji-zhu" class="header-anchor">#</a></h3><p>将客户端不易适配的部分放在云端，客户端只要能接收到相关信息，就能做相应的适配，使客户端应用兼容性更高</p><h2><span id="yi-dong-hu-lian-de-fa-zhan">移动互联的发展</span><a href="#yi-dong-hu-lian-de-fa-zhan" class="header-anchor">#</a></h2><p><a href="http://www.questmobile.com.cn/blog/blog_141.html" target="_blank" rel="noopener">2018移动互联网整体行业报告</a></p><h3><span id="de-ru-kou-zhe-de-tian-xia">得入口者得天下</span><a href="#de-ru-kou-zhe-de-tian-xia" class="header-anchor">#</a></h3><p>移动互联网时代，得入口者得天下，入口是指用户寻找信息解决问题的方式，谁掌握了移动互联网入口，谁就掌握了联接用户的第一触点，好的入口可以带来源源不断的用户流、信息流、业务流、资金流和物流，从而将虚拟资本转化为商业价值。</p><p>想在手机搜索信息了，你第一时间想起了手机百度，它就是搜索的入口；想通过手机浏览网页了，你第一时间想起了QQ浏览器，它就是上网的入口；想购物消费了，你第一时间想起了手机淘宝，它就是娘们姐们妹们败家的入口，也有人说移动互联网时代得女人者得天下，还是有一定道理的，估计美女们平时的空余时间比较多，喜欢随时随地分享、交流、沟通，并且美女们对购物天生就有冲动，移动互联网产品最大化满足了美女们的空档时间和情感需要，所以美女用户在活跃度上远远高于男性用户，这是多么痛的领悟啊！。</p><p> 我们很多人都喜欢显摆喜欢晒，于是微信成了我们精神的入口，不仅可以多种方式的沟通，最主要的是可以向朋友圈晒你的美食美景美事，然后点赞纷呈评论纷飞，你心里美滋滋的，那份满足感和幸福感让你开心好几天，更可怕的是现在有了美容入口，自拍神器美顔相机，你脸上的皱纹你眼角的眼袋你黝黑的肤色你黑色的眼圈你头上的头皮屑…….经这么三秒钟的磨皮美化全都变美变白了，美顔相机就是你年轻漂亮的入口，它不红都难。</p><h3><span id="yi-dong-duan-chan-pin-de-ji-ju-zeng-duo">移动端产品的急剧增多</span><a href="#yi-dong-duan-chan-pin-de-ji-ju-zeng-duo" class="header-anchor">#</a></h3><p>据工信部数据显示，我国移动互联网用户总数达到8.72亿户，对移动电话用户的渗透率达到69.1%，月户均移动互联网接入流量达到178.8M。显而易见，很多大型互联网企业PC业务用户往移动端迁移，呈现出PC业务增长放缓，移动业务增长迅速的态势。如果一个互联网企业没有在移动端的拳头产品，将很快被移动互联网的浪潮颠覆，比如马云这几年是比较紧张的，挣扎着去做社交APP来往，不停地投资入口APP比如快的打车和拼车APP，当然后来做的手机支付宝及淘宝也是发展很快的，因为那是阿里的强项，但马云一定眼红腾讯的移动互联网产品，因为他知道在未来的日子里，得移动互联网者得天下。</p><p> 移动互联网产品强调解决用户的痛点，创业者全心全力聚焦于一个痛点，然后专心专注专业地做到极致，一针捅破天，一招打遍天下，一首歌唱尽一辈子，那么，作为创业者我们在产品的策划及执行上应该怎么去思考和实施呢？最近阅读了朋友圈的一篇文章，很有感触，用自已的话来和大家分享一下四个启示：</p><p>1）以工具切入，通过刚需快速积累用户，这类产品市面上很多，比如美图、淘宝、社交、婚恋、新闻等诸如此类的。社会的刚需是很多的，但做刚需产品是漫长煎熬的，通常拥有资源及数据者比较容易成功，比如我是航空公司的，我做航班信息及相关创新的APP，是拥有绝对的优势的，再比如腾讯QQ已拥有大量的PC用户，再做什么创新产品如微信都是较容易成功的，当然个人创业者也可以成功，那么你就要有更大的创新更强的专注，我个人认为未来几年一定会有新型的社交产品出现，它会超过微信陌陌之类的，但它是什么呢？谁知道呢。</p><p>2）深耕垂直领域，提高商业价值；现在都喜欢讲产业链垂直整合，那究竟什么是产业链垂直整合，简单地说就是其产业链上下（游）的整合，产业链通常包括产品设计、原材料采购、订单处理、生产制造、仓储物流、批发经营、终端零售7个环节,所谓产业链垂直整合，就是把这7个环节垂直整合起来，使得整条产业链高效运转。比如航空公司越来越多地执行过去由旅行社扮演的角色，就是典型的向前整合。同样，航空公司亦亲力而为供应商的角色如飞机维护、飞行餐饮，就是典型的向后整合。创业者选择自已NB的行业是相当重要的，你熟悉和理解这个行业的需求及用户痛点，你要做的只是平台化和移动化，将产业链串连起来融合起来，即使你的平台和APP都是免费的，但没有关系，整合过程中会发现越来越多的商业模式，越靠近最终用户和消费者的公司，在产业链拥有越来越大的发言权。</p><p>3）反向定义，重构产业链条牢牢卡位。这一条我没有什么好扩展的了，也好容易理解。</p><p>4）引入社区，增加活跃度和黏性。这个重要，社区概念，任何的平台或APP最好都引入社区功能，让用户之间可以分享和互动，做企业级服务平台的，就搞个企业社区，让企业之间员工之间有互动交流的功能，可成立各种各样的圈子，线上互动线下行动，八小时内是工作和业务，八小时外是生活和娱乐，工作和生活之间可以快速切换，任何人都有社交和被社交的需求，工作上你需要成长和提升，生活上你需要朋友和温暖。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#yi-dong-hu-lian-fa-zhan&quot;&gt;移动互联发展&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#gai-shu&quot;&gt;概述&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="移动互联" scheme="http://baofengketang.com/categories/%E7%A7%BB%E5%8A%A8%E4%BA%92%E8%81%94/"/>
    
    
      <category term="移动互联" scheme="http://baofengketang.com/tags/%E7%A7%BB%E5%8A%A8%E4%BA%92%E8%81%94/"/>
    
  </entry>
  
  <entry>
    <title>Java8学习笔记（二）</title>
    <link href="http://baofengketang.com/2018/05/29/java/java02/"/>
    <id>http://baofengketang.com/2018/05/29/java/java02/</id>
    <published>2018-05-29T02:37:16.000Z</published>
    <updated>2018-05-31T13:49:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="java8-xue-xi-bi-ji-er">Java8学习笔记（二）</span><a href="#java8-xue-xi-bi-ji-er" class="header-anchor">#</a></h1><h2><span id="jdk8-dui-jie-kou-zeng-jia-liao-xin-de-ding-yi">JDK8对接口增加了新的定义</span><a href="#jdk8-dui-jie-kou-zeng-jia-liao-xin-de-ding-yi" class="header-anchor">#</a></h2><p>增加了默认方法</p><p>增加了静态方法</p><h2><span id="lei-xing-tui-duan-ji-zhi">类型推断机制</span><a href="#lei-xing-tui-duan-ji-zhi" class="header-anchor">#</a></h2><p>对于lambda表达式，必须要有其上下文，才能推断其类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;java8-xue-xi-bi-ji-er&quot;&gt;Java8学习笔记（二）&lt;/span&gt;&lt;a href=&quot;#java8-xue-xi-bi-ji-er&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;jdk8-
      
    
    </summary>
    
      <category term="java" scheme="http://baofengketang.com/categories/java/"/>
    
    
      <category term="java" scheme="http://baofengketang.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>redis实战</title>
    <link href="http://baofengketang.com/2018/05/17/redis/redis_01/"/>
    <id>http://baofengketang.com/2018/05/17/redis/redis_01/</id>
    <published>2018-05-17T05:28:32.000Z</published>
    <updated>2018-05-31T13:49:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="redis-shi-zhan">Redis实战</span><a href="#redis-shi-zhan" class="header-anchor">#</a></h1><h2><span id="nosql-jie-shao">NoSql介绍</span><a href="#nosql-jie-shao" class="header-anchor">#</a></h2><p>NoSQL 是 Not Only SQL 的缩写，意即”不仅仅是SQL”的意思，泛指非关系型的数据库。强调Key-Value Stores和文档数据库的优点，而不是单纯的反对RDBMS。</p><p>NoSQL产品是传统关系型数据库的功能阉割版本，通过减少用不到或很少用的功能，来大幅度提高产品性能NoSQL产品 redis、mongodb <a href="http://www.couchbase.org/membase" target="_blank" rel="noopener">Membase</a>、<a href="http://hbase.apache.org/" target="_blank" rel="noopener">HBase</a> </p><h2><span id="redis-jian-jie">Redis简介</span><a href="#redis-jian-jie" class="header-anchor">#</a></h2><h3><span id="shi-me-shi-redis">什么是Redis</span><a href="#shi-me-shi-redis" class="header-anchor">#</a></h3><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。</p><p>Redis 与其他 key - value 缓存产品有以下三个特点：</p><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</p><p>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</p><p>Redis支持数据的备份，即master-slave模式的数据备份。</p><h3><span id="redis-ying-yong-chang-jing"><strong>Redis应用场景</strong></span><a href="#redis-ying-yong-chang-jing" class="header-anchor">#</a></h3><p>主要能够体现 解决数据库的访问压力。</p><p>例如:短信验证码时间有效期、session共享解决方案</p><h3><span id="redis-you-shi"><strong>Redis优势</strong></span><a href="#redis-you-shi" class="header-anchor">#</a></h3><p>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</p><p>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</p><p>原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。</p><p>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p><h3><span id="redis-yu-qi-ta-key-value-cun-chu-you-shi-me-bu-tong">Redis与其他key-value存储有什么不同</span><a href="#redis-yu-qi-ta-key-value-cun-chu-you-shi-me-bu-tong" class="header-anchor">#</a></h3><p>Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。</p><p>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。</p><h2><span id="redis-an-zhuang">Redis安装</span><a href="#redis-an-zhuang" class="header-anchor">#</a></h2><h3><span id="window-xia-an-zhuang">window下安装</span><a href="#window-xia-an-zhuang" class="header-anchor">#</a></h3><p><a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noopener">点击这里进行下载redis</a></p><p>选择相应的版本，然后直接解压即可</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526538055.png?imageMogr2/thumbnail/!70p" alt=""></p><p>文件介绍</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">文件介绍：</span><br><span class="line"></span><br><span class="line">redis-benchmark.exe #基准测试</span><br><span class="line"></span><br><span class="line">redis-check-aof.exe # aof</span><br><span class="line"></span><br><span class="line">redischeck-dump.exe # dump</span><br><span class="line"></span><br><span class="line">redis-cli.exe # 客户端</span><br><span class="line"></span><br><span class="line">redis-server.exe # 服务器</span><br><span class="line"></span><br><span class="line">redis.windows.conf # 配置文件</span><br></pre></td></tr></table></figure><p>建立一个启动文件start.bat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure><p>启动服务器</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526538105.png?imageMogr2/thumbnail/!70p" alt=""></p><h3><span id="mac-xia-an-zhuang-redis">mac下安装redis</span><a href="#mac-xia-an-zhuang-redis" class="header-anchor">#</a></h3><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;redis-shi-zhan&quot;&gt;Redis实战&lt;/span&gt;&lt;a href=&quot;#redis-shi-zhan&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;nosql-jie-shao&quot;&gt;NoSql介绍&lt;
      
    
    </summary>
    
      <category term="redis" scheme="http://baofengketang.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://baofengketang.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建个人博客</title>
    <link href="http://baofengketang.com/2018/05/13/hexo/hexo_02/"/>
    <id>http://baofengketang.com/2018/05/13/hexo/hexo_02/</id>
    <published>2018-05-13T15:32:44.000Z</published>
    <updated>2018-05-31T13:44:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="an-zhuang-zhu-ti">安装主题</span><a href="#an-zhuang-zhu-ti" class="header-anchor">#</a></h1><p>安装NexT，在其文件夹中鼠标右键，点击Git Base Here。输入命令：git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\blog&gt;git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line">Cloning into 'themes/next'...</span><br><span class="line">remote: Counting objects: 3495, done.</span><br><span class="line">remote: Compressing objects: 100% (52/52), done.</span><br><span class="line">remote: Total 3495 (delta 32), reused 0 (delta 0), pack-reused 3443Receiving objects:  99% (3461/3495), 1020.01 KiB | 62</span><br><span class="line">Receiving objects: 100% (3495/3495), 1.21 MiB | 667.00 KiB/s, done.</span><br></pre></td></tr></table></figure><h1><span id="qi-yong-zhu-ti">启用主题</span><a href="#qi-yong-zhu-ti" class="header-anchor">#</a></h1><p>启用主题，在站点目录中（blog），打开配置文件_config.yml，修改theme：next</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br><span class="line"><span class="meta">#</span> Deployment</span><br><span class="line"><span class="meta">#</span># Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/njwangbohz/njwangbohz.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h1><span id="zhu-ti-she-ding">主题设定</span><a href="#zhu-ti-she-ding" class="header-anchor">#</a></h1><p>在next主题目录下的_config.yml文件中将scheme设定为Pisces</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br></pre></td></tr></table></figure><h1><span id="yu-yan-she-ding">语言设定</span><a href="#yu-yan-she-ding" class="header-anchor">#</a></h1><p>在站点根目录下修改配置文件_cofig.yml中的language为zh-Hans（简体中文）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">author: John Doe</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure><h1><span id="xiu-gai-cai-dan-xiang">修改菜单项</span><a href="#xiu-gai-cai-dan-xiang" class="header-anchor">#</a></h1><p>在主题目录下修改配置文件_cofig.yml中的menu（注：千万不要在这设置中文，后面的值那是查找文件的地方！若你的站点运行在子目录中，请将链接前缀的 / 去掉）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">  about:</span> <span class="string">/about</span></span><br><span class="line"><span class="attr">  tags:</span> <span class="string">/tags</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="string">/categories</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives</span></span><br><span class="line"><span class="attr">  search:</span> <span class="string">/search</span></span><br></pre></td></tr></table></figure><p>这些配置都要与你主题目录下的languages文件中对应的yml文档里配置相关联。比如你在站点根目录中的配置文件设置language为zh-Hans，那么就要进入到主题目录下的languages文件中修改zh-Hans.yml，这样才能显示出菜单项新增的中文内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">  archive: 归档</span><br><span class="line">  category: 分类</span><br><span class="line">  tag: 标签</span><br><span class="line">  schedule: 日程表</span><br><span class="line">menu:</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 归档</span><br><span class="line">  categories: 分类</span><br><span class="line">  tags: 标签</span><br><span class="line">  about: 关于</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日程表</span><br><span class="line">  sitemap: 站点地图</span><br></pre></td></tr></table></figure><h1><span id="she-zhi-ce-lan-wei-zhi">设置侧栏位置</span><a href="#she-zhi-ce-lan-wei-zhi" class="header-anchor">#</a></h1><p>修改主题目录下sidebar的position值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: right</span><br><span class="line">  #position: right</span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand for all pages automatically</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  Totally remove sidebar including sidebar toggle.</span><br></pre></td></tr></table></figure><h1><span id="she-zhi-tou-xiang">设置头像</span><a href="#she-zhi-tou-xiang" class="header-anchor">#</a></h1><p>在站点根目录下载配置文件中新增avatar，值设置为头像的链接地址。地址可以是网络地址，也可以是本地地址（放置在source/images/ 目录下）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#博客的头像设置</span><br><span class="line">avatar: http://p6wdo7p1v.bkt.clouddn.com/favicon.ico</span><br></pre></td></tr></table></figure><h1><span id="she-zhi-dai-ma-zhu-ti">设置代码主题</span><a href="#she-zhi-dai-ma-zhu-ti" class="header-anchor">#</a></h1><p>在主题目录下修改配置文件highlight_theme，默认值为nomal。可以设置为night</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Code Highlight theme</span><br><span class="line"># Available values: normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: night eighties</span><br></pre></td></tr></table></figure><h1><span id="chuang-jian-xiang-guan-zi-ye-mian">创建相关子页面</span><a href="#chuang-jian-xiang-guan-zi-ye-mian" class="header-anchor">#</a></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">about: /about</span><br><span class="line">  tags: /tags</span><br><span class="line">  categories: /categories</span><br><span class="line">  archives: /archives</span><br><span class="line">  search: /search</span><br></pre></td></tr></table></figure><p> 子页面的路径在C:\blog\source_posts下创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\blog\source\_posts&gt;hexo new page tags</span><br><span class="line">INFO  Created: C:\blog\source\tags\index.md</span><br><span class="line"></span><br><span class="line">C:\blog\source\_posts&gt;hexo new page categories</span><br><span class="line">INFO  Created: C:\blog\source\categories\index.md</span><br><span class="line"></span><br><span class="line">C:\blog\source\_posts&gt;hexo new page archives</span><br><span class="line">INFO  Created: C:\blog\source\archives\index.md</span><br><span class="line"></span><br><span class="line">C:\blog\source\_posts&gt;hexo new page search</span><br><span class="line">INFO  Created: C:\blog\source\search\index.md</span><br></pre></td></tr></table></figure><p>在tag\index.md文件中添加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-05-14 22:25:00</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>当要为某一篇文章添加标签，只需在blog/source/_post目录下的具体文章的tags中添加标签即可，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2018-1-1</span><br><span class="line">tags: [hexo,git,nmp]</span><br><span class="line">categories: 博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526308313.png?imageMogr2/thumbnail/!70p" alt=""></p><h1><span id="shou-ye-tian-jia-github-dao-hang-ke-xuan">首页添加github导航(可选)</span><a href="#shou-ye-tian-jia-github-dao-hang-ke-xuan" class="header-anchor">#</a></h1><p>在首页添加github导航条，点击<a href="https://blog.github.com/2008-12-19-github-ribbons/选择需要的样式，然后将代码复制到themes/next/layout/_layout.swig.并将href改为你的github地址" target="_blank" rel="noopener">https://blog.github.com/2008-12-19-github-ribbons/选择需要的样式，然后将代码复制到themes/next/layout/_layout.swig.并将href改为你的github地址</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://njwangbohz.github.io/&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png&quot; alt=&quot;Fork me on GitHub&quot;&gt;&lt;/a&gt;</span><br><span class="line">    &lt;header id=&quot;header&quot; class=&quot;header&quot; itemscope itemtype=&quot;http://schema.org/WPHeader&quot;&gt;</span><br></pre></td></tr></table></figure><h1><span id="shi-xian-dian-ji-chu-xian-tao-xin-xiao-guo">实现点击出现桃心效果</span><a href="#shi-xian-dian-ji-chu-xian-tao-xin-xiao-guo" class="header-anchor">#</a></h1><p>实现点击出现桃心效果，点击<a href="http://7u2ss1.com1.z0.glb.clouddn.com/love.js将代码copy到/themes/next/source/js/src里面新建的love.js中，然后打开\themes\next\layout\_layout.swig文件,在末尾（在前面引用会出现找不到的bug）" target="_blank" rel="noopener">http://7u2ss1.com1.z0.glb.clouddn.com/love.js将代码copy到/themes/next/source/js/src里面新建的love.js中，然后打开\themes\next\layout\_layout.swig文件,在末尾（在前面引用会出现找不到的bug）</a> ，引用love.js</p><h1><span id="xiu-gai-tou-xiang-bing-xuan-zhuan">修改头像并旋转</span><a href="#xiu-gai-tou-xiang-bing-xuan-zhuan" class="header-anchor">#</a></h1><p>打开\themes\next\source\css_common\components\sidebar\sidebar-author.styl，在里面添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">.site-author-image &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  margin: 0 auto;</span><br><span class="line">  padding: $site-author-image-padding;</span><br><span class="line">  max-width: $site-author-image-width;</span><br><span class="line">  height: $site-author-image-height;</span><br><span class="line">  border: $site-author-image-border-width solid $site-author-image-border-color;</span><br><span class="line"></span><br><span class="line">  /* 头像圆形 */</span><br><span class="line">  border-radius: 80px;</span><br><span class="line">  -webkit-border-radius: 80px;</span><br><span class="line">  -moz-border-radius: 80px;</span><br><span class="line">  box-shadow: inset 0 -1px 0 #333sf;</span><br><span class="line"></span><br><span class="line">  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 </span><br><span class="line">    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">img:hover &#123;</span><br><span class="line">  /* 鼠标经过停止头像旋转 </span><br><span class="line">  -webkit-animation-play-state:paused;</span><br><span class="line">  animation-play-state:paused;*/</span><br><span class="line"></span><br><span class="line">  /* 鼠标经过头像旋转360度 */</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* Z 轴旋转动画 */</span><br><span class="line">@-webkit-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -moz-transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    -moz-transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    transform: rotateZ(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    transform: rotateZ(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="jia-ru-bu-suan-zi-tong-ji">加入卜算子统计</span><a href="#jia-ru-bu-suan-zi-tong-ji" class="header-anchor">#</a></h1><p>在网站底部加上访问量，打开\themes\next\layout_partials\footer.swig文件,在类copyright前加上画红线这话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;an-zhuang-zhu-ti&quot;&gt;安装主题&lt;/span&gt;&lt;a href=&quot;#an-zhuang-zhu-ti&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;安装NexT，在其文件夹中鼠标右键，点击Git Base Here。
      
    
    </summary>
    
      <category term="hexo" scheme="http://baofengketang.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://baofengketang.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo搭建个人博客</title>
    <link href="http://baofengketang.com/2018/05/13/hexo/hexo_01/"/>
    <id>http://baofengketang.com/2018/05/13/hexo/hexo_01/</id>
    <published>2018-05-13T08:19:23.000Z</published>
    <updated>2018-05-31T13:44:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="shi-yong-hexo-da-jian-shu-yu-zi-ji-de-bo-ke">使用Hexo搭建属于自己的博客</span><a href="#shi-yong-hexo-da-jian-shu-yu-zi-ji-de-bo-ke" class="header-anchor">#</a></h1><p>因最近有很多小伙伴咨询我如何写一个自己的博客，因为我的博客是采用mac系统搭建的，大部分小伙伴用的是window，因此本套教程我使用虚拟机上模拟window的环境搭建而成</p><h2><span id="1-an-zhuang-nodejs-huan-jing">1.安装nodejs环境</span><a href="#1-an-zhuang-nodejs-huan-jing" class="header-anchor">#</a></h2><p>首先安装nodejs，我下载的版本是node-v8.11.1-x64，这个步骤就直接next就可以</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526200039.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>检测环境是否安装成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\jinzhong&gt;node -v</span><br><span class="line">v8.11.1</span><br><span class="line">C:\Users\jinzhong&gt;npm -v</span><br><span class="line">5.6.0</span><br></pre></td></tr></table></figure><p>如果出现以上提示就表示环境搭建完毕</p><h2><span id="2-an-zhuang-git-huan-jing">2.安装git环境</span><a href="#2-an-zhuang-git-huan-jing" class="header-anchor">#</a></h2><p>git版本：Git-2.17.0-64-bit</p><p>接下来开始安装.基本上一路next即可</p><p><strong>检测环境</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> git --version</span><br><span class="line">git version 2.17.0.windows.1</span><br></pre></td></tr></table></figure><h2><span id="3-github-she-zhi">3.github设置</span><a href="#3-github-she-zhi" class="header-anchor">#</a></h2><p><strong>1.注册好了github后，进入github官网</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526201382.png?imageMogr2/thumbnail/!70p" alt=""></p><hr><p><strong>2.新建仓库</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526201701.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>3.设置仓库</strong></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526201588.png?imageMogr2/thumbnail/!70p" alt=""></p><p>发现页面已经部署到服务器了，我们可以直接访问<a href="http://njwangbohz.github.io" target="_blank" rel="noopener">http://njwangbohz.github.io</a></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526201766.png?imageMogr2/thumbnail/!70p" alt=""></p><p>我们也可以选择一个主题，然后从新浏览</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526202110.png?imageMogr2/thumbnail/!70p" alt=""></p><p>至此git目前就搭建完毕了～，后期我们可以继续加一些其它设置</p><h2><span id="4-an-zhuang-hexo">4.安装hexo</span><a href="#4-an-zhuang-hexo" class="header-anchor">#</a></h2><p><strong>安装Hexo，随便在某个目录创建一个文件夹</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;mkdir blog</span><br><span class="line">C:\&gt;cd blog</span><br><span class="line">C:\blog&gt;npm install hexo -g</span><br><span class="line">npm WARN deprecated titlecase@1.1.2: no longer maintained</span><br><span class="line">C:\Users\jinzhong\AppData\Roaming\npm\hexo -&gt; C:\Users\jinzhong\AppData\Roaming\</span><br><span class="line">npm\node_modules\hexo\bin\hexo</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span> nunjucks@3.1.2 postinstall C:\Users\jinzhong\AppData\Roaming\npm\node_modules\</span><br><span class="line">hexo\node_modules\nunjucks</span><br><span class="line"><span class="meta">&gt;</span> node postinstall-build.js src</span><br><span class="line"></span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.3 (node_modules\hex</span><br><span class="line">o\node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@</span><br><span class="line">1.2.3: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;</span><br><span class="line">)</span><br><span class="line">+ hexo@3.7.1</span><br><span class="line">added 205 packages in 1230.836s</span><br></pre></td></tr></table></figure><p><strong>输入hexo －v检查hexo是否安装成功</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">C:\blog&gt;hexo -v</span><br><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 6.1.7601 win32 x64</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">node: 8.11.1</span><br><span class="line">v8: 6.2.414.50</span><br><span class="line">uv: 1.19.1</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.10.1-DEV</span><br><span class="line">modules: 57</span><br><span class="line">nghttp2: 1.25.0</span><br><span class="line">openssl: 1.0.2o</span><br><span class="line">icu: 60.1</span><br><span class="line">unicode: 10.0</span><br><span class="line">cldr: 32.0</span><br><span class="line">tz: 2017c</span><br></pre></td></tr></table></figure><p><strong>输入hexo init进行初始化</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">C:\blog&gt;hexo init</span><br><span class="line">INFO  Cloning hexo-starter to C:\blog</span><br><span class="line">Cloning into 'C:\blog'...</span><br><span class="line">remote: Counting objects: 65, done.</span><br><span class="line">remote: Compressing objects: 100% (3/3), done.</span><br><span class="line">remote: Total 65 (delta 0), reused 0 (delta 0), pack-reused 62</span><br><span class="line">Unpacking objects: 100% (65/65), done.</span><br><span class="line">Submodule 'themes/landscape' (https://github.com/hexojs/hexo-theme-landscape.git</span><br><span class="line">) registered for path 'themes/landscape'</span><br><span class="line">Cloning into 'C:/blog/themes/landscape'...</span><br><span class="line">remote: Counting objects: 819, done.</span><br><span class="line">remote: Total 819 (delta 0), reused 0 (delta 0), pack-reused 819</span><br><span class="line">Receiving objects: 100% (819/819), 2.54 MiB | 819.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (432/432), done.</span><br><span class="line">Submodule path 'themes/landscape': checked out '73a23c51f8487cfcd7c6deec96ccc754</span><br><span class="line">3960d350'</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">��Ϣ: ���ṩ��ģʽ�޷��ҵ��ļ�</span><br><span class="line">npm WARN deprecated titlecase@1.1.2: no longer maintained</span><br><span class="line"><span class="meta">&gt;</span> nunjucks@3.1.2 postinstall C:\blog\node_modules\nunjucks</span><br><span class="line"><span class="meta">&gt;</span> node postinstall-build.js src</span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.3 (node_modules\fse</span><br><span class="line">vents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@</span><br><span class="line">1.2.3: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;</span><br><span class="line">)</span><br><span class="line">added 276 packages in 206.107s</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure><p>输入npm install 安装所需要的组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\blog&gt;npm install</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.3 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.3: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any</span><br><span class="line">&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br></pre></td></tr></table></figure><p><strong>接下来就可以体验一下hexo,启动服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\blog&gt;hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>使用浏览器访问</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526204555.png?imageMogr2/thumbnail/!70p" alt=""></p><p><strong>5.hexo与github联系起来</strong></p><p>配置git的用户名和密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jinzhong@WIN-Q673GTLFDM6 MINGW64 /c/blog</span><br><span class="line"><span class="meta">$</span> git config --global user.name e "njwangbohz"</span><br><span class="line">jinzhong@WIN-Q673GTLFDM6 MINGW64 /c/blog</span><br><span class="line"><span class="meta">$</span> git config --global user.email "15189838151@163.com"</span><br></pre></td></tr></table></figure><p>生成..ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> ssh-keygen -t rsa -C "15189838151@163.COM"</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/jinzhong/.ssh/id_rsa):</span><br><span class="line">Created directory '/c/Users/jinzhong/.ssh'.</span><br><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved in /c/Users/jinzhong/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /c/Users/jinzhong/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:gkcWg2JUUOvQqfIIUqX60WZxBzjK51uxDrIpQwINNbE 15189838151@163.COM</span><br><span class="line">The key's randomart image is:</span><br><span class="line">+---[RSA 2048]----+</span><br><span class="line">| o*=+o+          |</span><br><span class="line">|. o*+o +         |</span><br><span class="line">| =Eo=.+ .        |</span><br><span class="line">|.o+=.*..         |</span><br><span class="line">|* oo* ooS        |</span><br><span class="line">|+*.+o.o.         |</span><br><span class="line">|+ o+ =           |</span><br><span class="line">|o o . .          |</span><br><span class="line">| o               |</span><br><span class="line">+----[SHA256]-----+</span><br></pre></td></tr></table></figure><p>进入.ssh目录,查看key文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinzhong@WIN-Q673GTLFDM6 MINGW64 ~/.ssh</span><br><span class="line">$ cat id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCspC2HQMc7wTlzeCib7m0rzAuihSjDozR6sL0B4H7APyWTTQ3HWgUO7zRNCMFmLA5QYBzzsr4EBaGskMQa8Olktcj2iG62QQ06wzdYiFBVzOCDsbPaHwIL52O9+BiMzjC5VTfD18acASJh/qXBgkEjA1YJ9pnhk0hMHf5N/j4CoiB4guhTMyezRh5lMpfhBE9uq0UFVXGdBjmu0l/gj/UVCeWP/CFSfYo070ii50k6IMn+pE3OkQYB/36yEycu4vQp0HTfgPAD6qp2s3QRfwuS/jzSrbyhWbBs7YuTyVREdCVKUxhqcm+/+AceV520cCpftz1yHe2dm/JpJ4AjydlL 15189838151@163.COM</span><br></pre></td></tr></table></figure><p>将这个key添加到git中</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526220571.png?imageMogr2/thumbnail/!70p" alt=""></p><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ssh -T git@github.com</span><br><span class="line">The authenticity of host 'github.com (52.74.223.119)' can't be established.</span><br><span class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added 'github.com,52.74.223.119' (RSA) to the list of known hosts.</span><br><span class="line">Hi njwangbohz! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>配置blog目录下的_config.xml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/njwangbohz/njwangbohz.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>安装插件并发布到git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">C:\blog&gt;npm install --save hexo-deployer-git</span><br><span class="line">npm WARN deprecated swig@1.4.2: This package is no longer maintained</span><br><span class="line">npm WARN notice [SECURITY] uglify-js has 1 low vulnerability. Go here for more details: https://nodesecurity.io/advisori</span><br><span class="line">es?search=uglify-js&amp;version=2.4.24 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get</span><br><span class="line">more info.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.3 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.3: wanted &#123;"os":"darwin","arch":"any</span><br><span class="line">"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"></span><br><span class="line">+ hexo-deployer-git@0.3.1</span><br><span class="line">added 32 packages in 171.121s</span><br><span class="line"></span><br><span class="line">C:\blog&gt;hexo d</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Setting up Git deployment...</span><br><span class="line">Initialized empty Git repository in C:/blog/.deploy_git/.git/</span><br><span class="line">[master (root-commit) 86378a6] First commit</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 placeholder</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend dirs...</span><br><span class="line">warning: LF will be replaced by CRLF in 2018/05/13/hello-world/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in archives/2018/05/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in archives/2018/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in archives/index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in css/style.css.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.css.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-buttons.js.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-media.js.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.css.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/helpers/jquery.fancybox-thumbs.js.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.css.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.js.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in fancybox/jquery.fancybox.pack.js.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in index.html.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">warning: LF will be replaced by CRLF in js/script.js.</span><br><span class="line">The file will have its original line endings in your working directory.</span><br><span class="line">[master e16eabb] Site updated: 2018-05-13 23:14:34</span><br><span class="line"> 29 files changed, 5777 insertions(+)</span><br><span class="line"> create mode 100644 2018/05/13/hello-world/index.html</span><br><span class="line"> create mode 100644 archives/2018/05/index.html</span><br><span class="line"> create mode 100644 archives/2018/index.html</span><br><span class="line"> create mode 100644 archives/index.html</span><br><span class="line"> create mode 100644 css/fonts/FontAwesome.otf</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.eot</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.svg</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.ttf</span><br><span class="line"> create mode 100644 css/fonts/fontawesome-webfont.woff</span><br><span class="line"> create mode 100644 css/images/banner.jpg</span><br><span class="line"> create mode 100644 css/style.css</span><br><span class="line"> create mode 100644 fancybox/blank.gif</span><br><span class="line"> create mode 100644 fancybox/fancybox_loading.gif</span><br><span class="line"> create mode 100644 fancybox/fancybox_loading@2x.gif</span><br><span class="line"> create mode 100644 fancybox/fancybox_overlay.png</span><br><span class="line"> create mode 100644 fancybox/fancybox_sprite.png</span><br><span class="line"> create mode 100644 fancybox/fancybox_sprite@2x.png</span><br><span class="line"> create mode 100644 fancybox/helpers/fancybox_buttons.png</span><br><span class="line"> create mode 100644 fancybox/helpers/jquery.fancybox-buttons.css</span><br><span class="line"> create mode 100644 fancybox/helpers/jquery.fancybox-buttons.js</span><br><span class="line"> create mode 100644 fancybox/helpers/jquery.fancybox-media.js</span><br><span class="line"> create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.css</span><br><span class="line"> create mode 100644 fancybox/helpers/jquery.fancybox-thumbs.js</span><br><span class="line"> create mode 100644 fancybox/jquery.fancybox.css</span><br><span class="line"> create mode 100644 fancybox/jquery.fancybox.js</span><br><span class="line"> create mode 100644 fancybox/jquery.fancybox.pack.js</span><br><span class="line"> create mode 100644 index.html</span><br><span class="line"> create mode 100644 js/script.js</span><br><span class="line"> delete mode 100644 placeholder</span><br><span class="line">Username for 'https://github.com': 15189838151@163.com</span><br><span class="line">Password for 'https://15189838151@163.com@github.com':</span><br><span class="line">Branch 'master' set up to track remote branch 'master' from 'https://github.com/njwangbohz/njwangbohz.github.io.git'.</span><br><span class="line">To https://github.com/njwangbohz/njwangbohz.github.io.git</span><br><span class="line"> + 50f63d0...e16eabb HEAD -&gt; master (forced update)</span><br><span class="line">INFO  Deploy done: git</span><br><span class="line">C:\blog&gt;</span><br></pre></td></tr></table></figure><p>访问：</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526224893.png?imageMogr2/thumbnail/!70p" alt=""></p><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;shi-yong-hexo-da-jian-shu-yu-zi-ji-de-bo-ke&quot;&gt;使用Hexo搭建属于自己的博客&lt;/span&gt;&lt;a href=&quot;#shi-yong-hexo-da-jian-shu-yu-zi-ji-de-bo-ke&quot; clas
      
    
    </summary>
    
      <category term="hexo" scheme="http://baofengketang.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://baofengketang.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Python基础(十三)</title>
    <link href="http://baofengketang.com/2018/05/13/python_base/python_13/"/>
    <id>http://baofengketang.com/2018/05/13/python_base/python_13/</id>
    <published>2018-05-13T03:52:56.000Z</published>
    <updated>2018-05-31T13:49:17.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#gei-cheng-xu-chuan-di-can-shu">给程序传递参数</a></li><li><a href="#lie-biao-tui-dao-shi">列表推导式</a></li><li><a href="#set-ji-he">Set集合</a></li></ul><!-- tocstop --></div><h1><span id="gei-cheng-xu-chuan-di-can-shu">给程序传递参数</span><a href="#gei-cheng-xu-chuan-di-can-shu" class="header-anchor">#</a></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">print(sys.argv)</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jinzhongdeMacBook-Pro:~ jinzhong$ python3 hello.py 1,2,3,4,5</span><br><span class="line">helloworld</span><br><span class="line">[&apos;hello.py&apos;, &apos;1,2,3,4,5&apos;]</span><br></pre></td></tr></table></figure><h1><span id="lie-biao-tui-dao-shi">列表推导式</span><a href="#lie-biao-tui-dao-shi" class="header-anchor">#</a></h1><p>所谓的列表推导式，指的就是轻量级循环创建列表</p><p><strong>基本方式</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">14</span>]: a= [x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">5</span>)]</span><br><span class="line">In [<span class="number">15</span>]: a</span><br><span class="line">Out[<span class="number">15</span>]: [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">In [<span class="number">16</span>]: a=[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>,<span class="number">4</span>)]</span><br><span class="line">In [<span class="number">17</span>]: a</span><br><span class="line">In [<span class="number">19</span>]: a=[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">20</span>)]</span><br><span class="line">In [<span class="number">20</span>]: a</span><br><span class="line">Out[<span class="number">20</span>]: [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>]</span><br><span class="line">In [<span class="number">21</span>]: a=[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">20</span>,<span class="number">2</span>)]</span><br><span class="line">In [<span class="number">22</span>]: a</span><br><span class="line">Out[<span class="number">22</span>]: [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>]</span><br></pre></td></tr></table></figure><p><strong>循环中使用if</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">28</span>]: a=[x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">2</span>,<span class="number">20</span>) <span class="keyword">if</span> x%<span class="number">2</span>==<span class="number">0</span>]</span><br><span class="line">In [<span class="number">29</span>]: a</span><br><span class="line">Out[<span class="number">29</span>]: [<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>]</span><br></pre></td></tr></table></figure><p><strong>2个for循环及多个循环</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">32</span>]: a=[(x,y) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">3</span>)  <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br><span class="line">In [<span class="number">33</span>]: a</span><br><span class="line">Out[<span class="number">33</span>]: [(<span class="number">1</span>, <span class="number">0</span>), (<span class="number">1</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>), (<span class="number">2</span>, <span class="number">0</span>), (<span class="number">2</span>, <span class="number">1</span>), (<span class="number">2</span>, <span class="number">2</span>)]</span><br><span class="line"></span><br><span class="line">In [<span class="number">36</span>]: a=[(x,y,z) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">3</span>) <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>,<span class="number">5</span>) <span class="keyword">for</span> z <span class="keyword">in</span> range(<span class="number">5</span>,<span class="number">8</span>)]</span><br><span class="line">    ...:</span><br><span class="line">In [<span class="number">37</span>]: a</span><br><span class="line">Out[<span class="number">37</span>]:</span><br><span class="line">[(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>),</span><br><span class="line"> (<span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>),</span><br><span class="line"> (<span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>),</span><br><span class="line"> (<span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>),</span><br><span class="line"> (<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>),</span><br><span class="line"> (<span class="number">1</span>, <span class="number">4</span>, <span class="number">7</span>),</span><br><span class="line"> (<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>),</span><br><span class="line"> (<span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>),</span><br><span class="line"> (<span class="number">2</span>, <span class="number">3</span>, <span class="number">7</span>),</span><br><span class="line"> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>),</span><br><span class="line"> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>),</span><br><span class="line"> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">7</span>)]</span><br></pre></td></tr></table></figure><h1><span id="set-ji-he">Set集合</span><a href="#set-ji-he" class="header-anchor">#</a></h1><p><strong>set集合</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: a=set()</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: type(a)</span><br><span class="line">Out[<span class="number">2</span>]: set</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: b=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: b</span><br><span class="line">Out[<span class="number">4</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: c=set(b)</span><br><span class="line"></span><br><span class="line">In [<span class="number">6</span>]: type(c)</span><br><span class="line">Out[<span class="number">6</span>]: set</span><br><span class="line"></span><br><span class="line">In [<span class="number">7</span>]: c</span><br><span class="line">Out[<span class="number">7</span>]: &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>&#125;</span><br><span class="line"></span><br><span class="line">In [<span class="number">8</span>]: d=list(c)</span><br><span class="line"></span><br><span class="line">In [<span class="number">9</span>]: d</span><br><span class="line">Out[<span class="number">9</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">10</span>]: type(d)</span><br><span class="line">Out[<span class="number">10</span>]: list</span><br></pre></td></tr></table></figure><p><strong>互相转换</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">13</span>]: d</span><br><span class="line">Out[<span class="number">13</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">14</span>]: e=tuple(d)</span><br><span class="line"></span><br><span class="line">In [<span class="number">15</span>]: e</span><br><span class="line">Out[<span class="number">15</span>]: (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">16</span>]: f =list(e)</span><br><span class="line"></span><br><span class="line">In [<span class="number">17</span>]: f</span><br><span class="line">Out[<span class="number">17</span>]: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">18</span>]: g=set(e)</span><br><span class="line"></span><br><span class="line">In [<span class="number">19</span>]: g</span><br><span class="line">Out[<span class="number">19</span>]: &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure><p>使用set可以快速的完成对list中的元素的去重复操作</p><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#gei-cheng-xu-chuan-di-can-shu&quot;&gt;给程序传递参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#lie-biao-tui-dao-shi&quot;&gt;列表推导式
      
    
    </summary>
    
      <category term="Python" scheme="http://baofengketang.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://baofengketang.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>爬虫实践－爬取51job岗位</title>
    <link href="http://baofengketang.com/2018/05/10/python_data/python_data_06/"/>
    <id>http://baofengketang.com/2018/05/10/python_data/python_data_06/</id>
    <published>2018-05-10T14:54:03.000Z</published>
    <updated>2018-05-31T13:48:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="pa-chong-shi-jian-pa-qu-51job-gang-wei">爬虫实践－爬取51job岗位</span><a href="#pa-chong-shi-jian-pa-qu-51job-gang-wei" class="header-anchor">#</a></h1><h2><span id="fen-xi-ji-ben-yuan-su-pa-qu">分析-基本元素爬取</span><a href="#fen-xi-ji-ben-yuan-su-pa-qu" class="header-anchor">#</a></h2><p>打开网站</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526177758.png?imageMogr2/thumbnail/!70p" alt=""></p><p>我们现在要获取到职位、公司、工作地点、薪资，发布时间这里的数据，通过审查元素来观察一下</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526178105.png?imageMogr2/thumbnail/!70p" alt=""></p><p>有了这些规则，那么我们就可以通过爬虫来进行数据的爬取操作了</p><p>首先我们来爬取本页的第一条数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding="UTF-8"</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">url=<span class="string">"https://search.51job.com/list/070200,000000,0000,00,9,99,java,2,1.html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare="</span></span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">res=requests.get(url,headers=headers)</span><br><span class="line">res.encoding=<span class="string">"gb2312"</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">"html.parser"</span>);</span><br><span class="line">soup.prettify()</span><br><span class="line">titles=soup.select(<span class="string">"span.t1,p.t1 span"</span>)</span><br><span class="line">company = soup.select(<span class="string">"span.t2"</span>)</span><br><span class="line">address = soup.select(<span class="string">".dw_table span.t3"</span>)</span><br><span class="line">sal= soup.select(<span class="string">"span.t4"</span>)</span><br><span class="line">publishTime=soup.select(<span class="string">"span.t5"</span>)</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line">print(titles[i].text.strip(),company[i].text.strip(),address[i].text.strip(),sal[i].text.strip(),publishTime[i].text.strip());</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hadoop开发工程师 南京森根科技发展有限公司 南京 1-2万/月 05-13</span><br></pre></td></tr></table></figure><h2><span id="fen-xi-dong-tai-pa-qu">分析-动态爬取</span><a href="#fen-xi-dong-tai-pa-qu" class="header-anchor">#</a></h2><p>好了，有了第一条数据之后，我们下面来增加动态的操作，用来爬取每页的所有数据，先观察一共多少页，以及页面的地址的变化</p><p>点击第二页，观察页面地址</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526178701.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时我们也猜测了一下，如果将上图中的java换成python试试看页面的运行结果是什么</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1526178777.png?imageMogr2/thumbnail/!70p" alt=""></p><p>那么接下来我们就可以通过参数拼接的方式来进行动态爬取了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding="UTF-8"</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">url=<span class="string">"https://search.51job.com/list/070200,000000,0000,00,9,99,java,2,1.html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare="</span></span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">keywords=<span class="string">"java"</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">91</span>):</span><br><span class="line">    res=requests.get(<span class="string">"https://search.51job.com/list/070200,000000,0000,00,9,99,"</span>+keywords+<span class="string">",2,"</span>+str(j)+<span class="string">".html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare="</span>,headers=headers)</span><br><span class="line">    res.encoding=<span class="string">"gb2312"</span></span><br><span class="line">    soup = BeautifulSoup(res.text,<span class="string">"html.parser"</span>);</span><br><span class="line">    soup.prettify()</span><br><span class="line">    titles=soup.select(<span class="string">"span.t1,p.t1 span"</span>)</span><br><span class="line">    company = soup.select(<span class="string">"span.t2"</span>)</span><br><span class="line">    address = soup.select(<span class="string">".dw_table span.t3"</span>)</span><br><span class="line">    sal= soup.select(<span class="string">"span.t4"</span>)</span><br><span class="line">    publishTime=soup.select(<span class="string">"span.t5"</span>)</span><br><span class="line">    i=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i&lt;len(titles):</span><br><span class="line">        print(titles[i].text.strip(),company[i].text.strip(),address[i].text.strip(),sal[i].text.strip(),publishTime[i].text.strip());</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">print(count)</span><br></pre></td></tr></table></figure><p>运行结果就不展示了，数据量太大</p><h2><span id="bao-cun-shu-ju">保存数据</span><a href="#bao-cun-shu-ju" class="header-anchor">#</a></h2><p>之前我们都是将数据保存在文本中的，那么如果我想讲数据保存到数据库中怎么办呢？这里以mysql数据库为例</p><p>首先我们得通过pip安装mysqlclient库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><p>安装完毕后，就可以使用mysql来进行保存数据了，关于mysql的具体操作，这里就不做详细介绍了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding="UTF-8"</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment">#引入mysql数据库</span></span><br><span class="line"><span class="keyword">import</span> MySQLdb</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">url=<span class="string">"https://search.51job.com/list/070200,000000,0000,00,9,99,java,2,1.html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare="</span></span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">keywords=<span class="string">"java"</span></span><br><span class="line"><span class="comment">#获取mysql的链接</span></span><br><span class="line">conn=MySQLdb.connect(<span class="string">"localhost"</span>,port=<span class="number">3306</span>,user=<span class="string">"root"</span>,password=<span class="string">"root"</span>,db=<span class="string">"mytest"</span>,charset=<span class="string">"utf8"</span>)</span><br><span class="line">print(conn)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">90</span>):</span><br><span class="line">    res=requests.get(<span class="string">"https://search.51job.com/list/070200,000000,0000,00,9,99,"</span>+keywords+<span class="string">",2,"</span>+str(j)+<span class="string">".html?lang=c&amp;stype=1&amp;postchannel=0000&amp;workyear=99&amp;cotype=99&amp;degreefrom=99&amp;jobterm=99&amp;companysize=99&amp;lonlat=0%2C0&amp;radius=-1&amp;ord_field=0&amp;confirmdate=9&amp;fromType=&amp;dibiaoid=0&amp;address=&amp;line=&amp;specialarea=00&amp;from=&amp;welfare="</span>,headers=headers)</span><br><span class="line">    res.encoding=<span class="string">"gb2312"</span></span><br><span class="line">    soup = BeautifulSoup(res.text,<span class="string">"html.parser"</span>);</span><br><span class="line">    soup.prettify()</span><br><span class="line">    titles=soup.select(<span class="string">"span.t1,p.t1 span"</span>)</span><br><span class="line">    company = soup.select(<span class="string">"span.t2"</span>)</span><br><span class="line">    address = soup.select(<span class="string">".dw_table span.t3"</span>)</span><br><span class="line">    sal= soup.select(<span class="string">"span.t4"</span>)</span><br><span class="line">    publishTime=soup.select(<span class="string">"span.t5"</span>)</span><br><span class="line">    i=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i&lt;len(titles):</span><br><span class="line">        print(titles[i].text.strip(),company[i].text.strip(),address[i].text.strip(),sal[i].text.strip(),publishTime[i].text.strip());</span><br><span class="line">        count+=<span class="number">1</span></span><br><span class="line">        cursor=conn.cursor()</span><br><span class="line">        <span class="comment">#执行游标</span></span><br><span class="line">        cursor.execute(<span class="string">"insert into jobs(title,company,address,sal,pub_time) values (%s,%s,%s,%s,%s)"</span>,(titles[i].text.strip(),company[i].text.strip(),address[i].text.strip(),sal[i].text.strip(),publishTime[i].text.strip()))</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line"><span class="comment">#关闭资源</span></span><br><span class="line">conn.commit()</span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;pa-chong-shi-jian-pa-qu-51job-gang-wei&quot;&gt;爬虫实践－爬取51job岗位&lt;/span&gt;&lt;a href=&quot;#pa-chong-shi-jian-pa-qu-51job-gang-wei&quot; class=&quot;header-a
      
    
    </summary>
    
      <category term="爬虫" scheme="http://baofengketang.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="http://baofengketang.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫实践－今日头条（获取js动态内容）</title>
    <link href="http://baofengketang.com/2018/05/10/python_data/python_data_05/"/>
    <id>http://baofengketang.com/2018/05/10/python_data/python_data_05/</id>
    <published>2018-05-10T08:03:34.000Z</published>
    <updated>2018-05-31T13:49:15.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#python-pa-chong-shi-jian-jin-ri-tou-tiao">Python爬虫实践－今日头条</a><ul><li><a href="#xu-qiu-fen-xi">需求分析</a></li><li><a href="#pa-qu-jin-ri-tou-tiao">爬取今日头条</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="python-pa-chong-shi-jian-jin-ri-tou-tiao">Python爬虫实践－今日头条</span><a href="#python-pa-chong-shi-jian-jin-ri-tou-tiao" class="header-anchor">#</a></h1><h2><span id="xu-qiu-fen-xi">需求分析</span><a href="#xu-qiu-fen-xi" class="header-anchor">#</a></h2><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525940989.png?imageMogr2/thumbnail/!70p" alt=""></p><p>通过审查元素我们发现页面内容基本上都是js生成而来的，我们在浏览器上看到，但是html源码中缺发现不了</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525941194.png?imageMogr2/thumbnail/!70p" alt=""></p><p>对于这种情况我们应该如何进行爬取呢</p><blockquote><p>方式一:从网页响应中找到js脚本返回的json数据</p><p>方式二:使用Selenium对网页进行模拟访问</p></blockquote><p>这里我们采用第一种方式</p><h2><span id="pa-qu-jin-ri-tou-tiao">爬取今日头条</span><a href="#pa-qu-jin-ri-tou-tiao" class="header-anchor">#</a></h2><p>即使网页内容是由 JS 动态生成加载的,JS 也需要对某个接口进行调用,并根据接口返回 的 JSON 数据再进行加载和渲染。所以我们可以找到 JS 调用的数据接口,从数据接口中找 到网页中最后呈现的数据。就以今日头条为例来演示: </p><p>找到js请求的数据接口</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525942736.png?imageMogr2/thumbnail/!70p" alt=""></p><p>这里我们就采用python来爬去该网站的图片轮播图这块的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">url=<span class="string">"https://www.toutiao.com/api/pc/focus/"</span></span><br><span class="line">data=requests.get(url).text</span><br><span class="line">myjsons=json.loads(data)</span><br><span class="line">titles=myjsons[<span class="string">"data"</span>][<span class="string">"pc_feed_focus"</span>]</span><br><span class="line"><span class="keyword">for</span> temp <span class="keyword">in</span> titles:</span><br><span class="line">    title= temp.get(<span class="string">"title"</span>)</span><br><span class="line">    image_url=temp.get(<span class="string">"image_url"</span>)[<span class="number">2</span>:]</span><br><span class="line">    print(<span class="string">"标题:"</span>,title,<span class="string">"图片链接："</span>,image_url)</span><br></pre></td></tr></table></figure><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#python-pa-chong-shi-jian-jin-ri-tou-tiao&quot;&gt;Python爬虫实践－今日头条&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#xu-qiu-fe
      
    
    </summary>
    
      <category term="爬虫" scheme="http://baofengketang.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="http://baofengketang.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python网络爬虫实践－腾讯新闻</title>
    <link href="http://baofengketang.com/2018/05/10/python_data/python_data_04/"/>
    <id>http://baofengketang.com/2018/05/10/python_data/python_data_04/</id>
    <published>2018-05-10T03:36:41.000Z</published>
    <updated>2018-05-31T13:49:15.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#pa-chong-shi-jian-teng-xun-xin-wen">爬虫实践－腾讯新闻</a><ul><li><a href="#wang-zhan-fen-xi">网站分析</a></li><li><a href="#ding-zhi-qing-qiu-tou">定制请求头</a></li><li><a href="#chuan-di-url-can-shu">传递url参数</a></li><li><a href="#fa-song-post-qing-qiu">发送POST请求</a></li><li><a href="#chao-shi">超时</a></li><li><a href="#huo-qu-xiang-ying-de-nei-rong">获取响应的内容</a></li><li><a href="#kai-shi-pa-qu-shu-ju">开始爬取数据</a></li></ul></li></ul><!-- tocstop --></div><h1><span id="pa-chong-shi-jian-teng-xun-xin-wen">爬虫实践－腾讯新闻</span><a href="#pa-chong-shi-jian-teng-xun-xin-wen" class="header-anchor">#</a></h1><h2><span id="wang-zhan-fen-xi">网站分析</span><a href="#wang-zhan-fen-xi" class="header-anchor">#</a></h2><p>打开腾讯新闻：<a href="http://news.qq.com/" target="_blank" rel="noopener">http://news.qq.com/</a></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525936909.png?imageMogr2/thumbnail/!70p" alt=""></p><h2><span id="ding-zhi-qing-qiu-tou">定制请求头</span><a href="#ding-zhi-qing-qiu-tou" class="header-anchor">#</a></h2><p>观察一下该网站的请求头</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525937054.png?imageMogr2/thumbnail/!70p" alt=""></p><p>请求头Headers提供了关于请求、响应或者其它发送实体的信息，对于爬虫而言，请求头十分重要，如果没有请求头或者请求头和实际网页不一致，就可能无法返回正确的结果</p><p>Request并不会基于定制的请求头Header的具体情况改变自己的行为，只是在最后的请求中，所有的请求头信息都会被传递进去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="chuan-di-url-can-shu">传递url参数</span><a href="#chuan-di-url-can-shu" class="header-anchor">#</a></h2><p>为了请求特定的数据，我们需要在URL的查询字符串中加入某些数据，如果你是自己构建的url，那么数据一般会跟在一个问好后面，并且以键/值的形式放在URL中,比如 url?key1=value1</p><p>在Request中，我们可以将这些参数保存在字典中，用params构建至url中,例如传递key1＝value1和key2=value2</p><p>到url上可以这么编写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">key_dict=&#123;<span class="string">"key1"</span>:<span class="string">"value1"</span>,<span class="string">"key2"</span>:<span class="string">"value2"</span>&#125;</span><br><span class="line">url=<span class="string">"http://news.qq.com/"</span></span><br><span class="line">r=requests.get(url,headers=headers,params=key_dict)</span><br><span class="line">print(<span class="string">"响应状态码"</span>,r.status_code)</span><br></pre></td></tr></table></figure><h2><span id="fa-song-post-qing-qiu">发送POST请求</span><a href="#fa-song-post-qing-qiu" class="header-anchor">#</a></h2><p>除了发送get请求外，有时候还需要发送一些编码为表单形式的数据，比如登陆的时候为POST,因为如果使用GET请求，密码显示在URL上，这是非常不安全的，如果实现post请求，只需要简单的传递一个字典给Requests中的data参数，这个字典就会在发出请求的时候自动编码为表单形式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">key_dict=&#123;<span class="string">"key1"</span>:<span class="string">"value1"</span>,<span class="string">"key2"</span>:<span class="string">"value2"</span>&#125;</span><br><span class="line">url=<span class="string">"http://news.qq.com/"</span></span><br><span class="line">r=requests.post(url,headers=headers,data=key_dict)</span><br><span class="line">print(<span class="string">"响应状态码"</span>,r.status_code)</span><br></pre></td></tr></table></figure><h2><span id="chao-shi">超时</span><a href="#chao-shi" class="header-anchor">#</a></h2><p>有的时候爬虫会遇到服务器长时间不返回，这个时候爬虫就会一直等待，造成爬虫没有顺利的进行，因此可以在requests的timeout参数设定的秒数结束之后停止等待响应，意思就是，服务器在timeout秒内没有应答，就返回异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">key_dict=&#123;<span class="string">"key1"</span>:<span class="string">"value1"</span>,<span class="string">"key2"</span>:<span class="string">"value2"</span>&#125;</span><br><span class="line">url=<span class="string">"https://movie.douban.com/top250"</span></span><br><span class="line">r=requests.get(url,headers=headers,timeout=<span class="number">0.001</span>)</span><br><span class="line">print(<span class="string">"响应状态码"</span>,r.status_code)</span><br></pre></td></tr></table></figure><p>运行时报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host=&apos;news.qq.com&apos;, port=443): Max retries exceeded with url: /top250 (Caused by ConnectTimeoutError(&lt;urllib3.connection.VerifiedHTTPSConnection object at 0x1086c3080&gt;, &apos;Connection to movie.douban.com timed out. (connect timeout=0.001)&apos;))</span><br></pre></td></tr></table></figure><p>一般情况我们将这个值设置为20秒</p><h2><span id="huo-qu-xiang-ying-de-nei-rong">获取响应的内容</span><a href="#huo-qu-xiang-ying-de-nei-rong" class="header-anchor">#</a></h2><blockquote><p>在request中，最常用的功能就是获取某个网页的内容</p><p>r=requests.get(“url”)：方法返回一个response对象</p><p>通过这个response对象我们可以获取我们想要的信息</p><p>r.text:是服务器响应的内容，会自动根据响应头部的字符编码进行解码</p><p>r.encoding:是服务器内容使用的文本编码</p><p>r.status_code:用于监测响应的状态码，如200，404等</p><p>r.content:是字节码的响应体，会自动解码gzip和deflate编码的数据</p><p>r.json():是requests中内置的josn解码器</p></blockquote><h2><span id="kai-shi-pa-qu-shu-ju">开始爬取数据</span><a href="#kai-shi-pa-qu-shu-ju" class="header-anchor">#</a></h2><p>我们需要爬取这个页面的每个新闻的标题，鼠标右击一条新闻标题，选择“审查元素”<img src="http://p6wdo7p1v.bkt.clouddn.com/1525937309.png?imageMogr2/thumbnail/!70p" alt=""></p><p>在次审查一下另外一个元素</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525937389.png?imageMogr2/thumbnail/!70p" alt=""></p><p>发现有共性，接下来我们就可以采用爬虫来进行爬取我们需要的标题与链接内容了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding=UTF-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span></span><br><span class="line">&#125;</span><br><span class="line">url = <span class="string">"http://news.qq.com"</span></span><br><span class="line">r=requests.get(url,headers=headers)</span><br><span class="line">data = r.text</span><br><span class="line">soup =BeautifulSoup(data,<span class="string">"html.parser"</span>)</span><br><span class="line">news=soup.select(<span class="string">"div.text em.l24 a.linkto"</span>)</span><br><span class="line">f=open(<span class="string">"news.txt"</span>,<span class="string">"w"</span>)</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> news:</span><br><span class="line">    title=n.get_text();</span><br><span class="line">    link=n.get(<span class="string">"href"</span>)</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">"标题"</span>:title,</span><br><span class="line">        <span class="string">"链接"</span>:link</span><br><span class="line">    &#125;</span><br><span class="line">    print(data)</span><br><span class="line">    f.write(<span class="string">"%s:%s"</span>%(title,link)+<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#pa-chong-shi-jian-teng-xun-xin-wen&quot;&gt;爬虫实践－腾讯新闻&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#wang-zhan-fen-xi&quot;&gt;网站分
      
    
    </summary>
    
      <category term="爬虫" scheme="http://baofengketang.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="http://baofengketang.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>Python爬虫入门</title>
    <link href="http://baofengketang.com/2018/05/10/python_data/python_data_03/"/>
    <id>http://baofengketang.com/2018/05/10/python_data/python_data_03/</id>
    <published>2018-05-10T01:32:32.000Z</published>
    <updated>2018-05-31T13:49:16.000Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#python-pa-chong-ru-men">Python爬虫入门</a><ul><li><a href="#http-qing-qiu">Http请求</a></li><li><a href="#http-de-ji-ben-gai-nian">Http的基本概念</a><ul><li><a href="#http-gai-lan">HTTP概览</a></li><li><a href="#http-qing-qiu-tou">Http请求头</a></li></ul></li><li><a href="#bian-xie-di-yi-ge-jian-dan-de-pa-chong">编写第一个简单的爬虫</a><ul><li><a href="#di-yi-bu-huo-qu-ye-mian">第一步：获取页面</a></li><li><a href="#di-er-bu-huo-qu-xu-yao-de-shu-ju">第二步：获取需要的数据</a></li><li><a href="#di-san-bu-cun-chu-shu-ju">第三步：存储数据</a></li></ul></li></ul></li></ul><!-- tocstop --></div><h1><span id="python-pa-chong-ru-men">Python爬虫入门</span><a href="#python-pa-chong-ru-men" class="header-anchor">#</a></h1><h2><span id="http-qing-qiu">Http请求</span><a href="#http-qing-qiu" class="header-anchor">#</a></h2><p>无论我们通过浏览器打开网站、访问网页,还是通过脚本对 URL 网址进行访问,本质上都 是对HTTP服务器的请求,浏览器上所呈现的、控制台所显示的都是HTTP服务器对我们请求的响应。 </p><p>以打开我的博客为例,我们在地址栏输入“<a href="http://www.baofengketang.com”,浏览器上呈现的是下图" target="_blank" rel="noopener">www.baofengketang.com”,浏览器上呈现的是下图</a></p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525916301.png?imageMogr2/thumbnail/!70p" alt=""></p><p>进入到开发者模式</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525916518.png?imageMogr2/thumbnail/!70p" alt=""></p><p>响应的源代码如下</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525916673.png?imageMogr2/thumbnail/!70p" alt=""></p><h2><span id="http-de-ji-ben-gai-nian">Http的基本概念</span><a href="#http-de-ji-ben-gai-nian" class="header-anchor">#</a></h2><p>通常 HTTP 消息包括客户机向服务器的请求消息和服务器向客户机的响应消息。这两种类型的消息由一个起始行,一个或者多个头域,一个指示头域结束的空行和可选的消息体组成</p><h3><span id="http-gai-lan">HTTP概览</span><a href="#http-gai-lan" class="header-anchor">#</a></h3><p>Request URl:表示请求的 URL  Request Method:表示请求的方法,此处为 GET。除此之外,HTTP 的请求方法还有 OPTION、 HEAD、POST、DELETE、PUT 等,而最常用的就是 GET 和 POST 方法: </p><blockquote><p>POST</p><p>向指定资源提交数据,请求服务器进行处理(例如提交表单或者上传文件)。数据被包含在请求本文中。这个请求可能会创建新的资源或修改现有资源,或二者皆有。 </p><p>GET</p><p>向指定的资源发出“显示”请求</p></blockquote><p>Status Code:显示 HTTP 请求和状态码,表示 HTTP 请求的状态,此处为 200,表示请求已被服务器接收、理解和处理; 状态代码的第一个数字代表当前响应的类型,HTTP 协议中有以下几种响应类型 </p><blockquote><p>1xx 消息——请求已被服务器接收,继续处理 </p><p>2xx 成功——请求已成功被服务器接收、理解、并接受 </p><p>3xx 重定向——需要后续操作才能完成这一请求 </p><p>4xx 请求错误——请求含有词法错误或者无法被执行 </p></blockquote><h3><span id="http-qing-qiu-tou">Http请求头</span><a href="#http-qing-qiu-tou" class="header-anchor">#</a></h3><blockquote><p>Accept:表示请求的资源类型 </p><p>Cookie:为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据; </p><p>User-Agent:表示浏览器标识; </p><p>Accept-Language:表示浏览器所支持的语言类型;  </p><p>Accept-Charset:告诉 Web 服务器,浏览器可以接受哪些字符编码;</p><p>Accept:表示浏览器支持的 MIME 类型;</p><p>Accept-Encoding:表示浏览器有能力解码的编码类型; </p><p>Connection:表示客户端与服务连接类型; </p></blockquote><p>基本的 HTTP 介绍就结束了,如果需要更加详细的 HTTP 知识, 可以阅读相关书籍</p><h2><span id="bian-xie-di-yi-ge-jian-dan-de-pa-chong">编写第一个简单的爬虫</span><a href="#bian-xie-di-yi-ge-jian-dan-de-pa-chong" class="header-anchor">#</a></h2><p>使用python爬去我的博客中的首页中的文章标题</p><h3><span id="di-yi-bu-huo-qu-ye-mian">第一步：获取页面</span><a href="#di-yi-bu-huo-qu-ye-mian" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:UTF-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">"https://baofengketang.com"</span></span><br><span class="line">data = requests.get(url)</span><br><span class="line">headers = &#123;<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span>&#125;</span><br><span class="line">res = requests.get(url,headers=headers)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure><p> <strong>注意：</strong></p><blockquote><p>requests的headers伪装成浏览器访问</p><p>res是requests的Response对象，我们可以从中获取到我们的信息,res.text是获取网页内容代码</p></blockquote><h3><span id="di-er-bu-huo-qu-xu-yao-de-shu-ju">第二步：获取需要的数据</span><a href="#di-er-bu-huo-qu-xu-yao-de-shu-ju" class="header-anchor">#</a></h3><p>首先观察页面中我们需要的数据的特征</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525920715.png?imageMogr2/thumbnail/!70p" alt=""></p><p>测试编写代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:UTF-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">url=<span class="string">"https://baofengketang.com"</span></span><br><span class="line">data = requests.get(url)</span><br><span class="line">headers = &#123;<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span>&#125;</span><br><span class="line">res = requests.get(url,headers=headers)</span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">"html.parser"</span>)</span><br><span class="line">titles = soup.select(<span class="string">"div.mini-article__info h3.mini-article__title a"</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(titles)):</span><br><span class="line">    title = titles[i].text.strip()</span><br><span class="line">    print(<span class="string">"第%d篇文章的标题是:%s"</span>%(i+<span class="number">1</span>,title))</span><br></pre></td></tr></table></figure><h3><span id="di-san-bu-cun-chu-shu-ju">第三步：存储数据</span><a href="#di-san-bu-cun-chu-shu-ju" class="header-anchor">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:UTF-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">url=<span class="string">"https://baofengketang.com"</span></span><br><span class="line">data = requests.get(url)</span><br><span class="line">headers = &#123;<span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:59.0) Gecko/20100101 Firefox/59.0"</span>&#125;</span><br><span class="line">res = requests.get(url,headers=headers)</span><br><span class="line">print(res.status_code) <span class="comment">#返回状态码</span></span><br><span class="line">print(res.text)  <span class="comment">#得到响应的结果</span></span><br><span class="line">print(res.encoding)<span class="comment">#响应状态码</span></span><br><span class="line">soup = BeautifulSoup(res.text,<span class="string">"html.parser"</span>)</span><br><span class="line">titles = soup.select(<span class="string">"div.mini-article__info h3.mini-article__title a"</span>)</span><br><span class="line">f = open(<span class="string">"博客.txt"</span>,<span class="string">'w'</span>);</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(titles)):</span><br><span class="line">    title = titles[i].text.strip()</span><br><span class="line">    print(<span class="string">"第%d篇文章的标题是:%s"</span>%(i+<span class="number">1</span>,title))</span><br><span class="line">    f.write(<span class="string">"第%d篇文章的标题是:%s"</span>%(i+<span class="number">1</span>,title)+<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行结果如下</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1525921239.png?imageMogr2/thumbnail/!70p" alt=""></p><p>欢迎扫描我的微信，进行技术交流</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169907.png?imageMogr2/thumbnail/!70p" alt=""></p><p>同时也欢迎您的打赏，这将鼓励我写出更多的文章</p><p><img src="http://p6wdo7p1v.bkt.clouddn.com/1527169944.png?imageMogr2/thumbnail/!70p" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#python-pa-chong-ru-men&quot;&gt;Python爬虫入门&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#http-qing-qiu&quot;&gt;Http请求&lt;/a&gt;&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="爬虫" scheme="http://baofengketang.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="爬虫" scheme="http://baofengketang.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
</feed>
